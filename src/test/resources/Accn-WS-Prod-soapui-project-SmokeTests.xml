<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Accession WS_Prodv7_Smoke Tests" resourceRoot="" soapui-version="5.2.0" abortOnError="false" runType="SEQUENTIAL" id="2358f3ae-bd45-4907-ae55-448421210ced" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="accessionSoap11" type="wsdl" bindingName="{http://www.xifin.com/schema/accession}accessionSoap11" soapVersion="1_1" anonymous="optional" definition="https://www.xifinqa.com/prod/accessionv940/accession.wsdl" id="6144fcbf-c4e6-491c-829e-2965026fb85e" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.xifinqa.com/prod/accessionv940/accession.wsdl"><con:part><con:url>https://www.xifinqa.com/prod/accessionv940/accession.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.xifin.com/schema/accession" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://www.xifin.com/schema/accession" xmlns:sch1="http://www.xifin.com/schema/types" xmlns:sch2="http://www.xifin.com/schema/msgHeader" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.xifin.com/schema/accession">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/accession" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/accession" xmlns:msgHeader="http://www.xifin.com/schema/msgHeader" xmlns:types="http://www.xifin.com/schema/types">
      <xs:import namespace="http://www.xifin.com/schema/types"/>
      <xs:import namespace="http://www.xifin.com/schema/msgHeader"/>
      <xs:element name="GetAccessionRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="AccessionId" type="types:AccessionIdType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAccessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element ref="GetAccessionResponseMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAccessionResponseMessage">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="AccessionId" type="types:AccessionIdType"/>
            <xs:element minOccurs="0" name="LinkedAccessions" type="types:NoteType">
              <xs:annotation>
                <xs:documentation>Comma delimited list of linked accessions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="DateOfService" type="xs:date"/>
            <xs:element minOccurs="0" name="TimeOfService" type="types:TimeOfService"/>
            <xs:element minOccurs="0" name="ReceiptDate" type="xs:date"/>
            <xs:element minOccurs="0" name="ClientId" type="types:IdType"/>
            <xs:element minOccurs="0" name="ClientName" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="RequisitionId" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="AccessionStatus" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="StatementStatus" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="FinalReportDate" type="xs:date"/>
            <xs:element minOccurs="0" name="PricedDate" type="xs:date"/>
            <xs:element minOccurs="0" name="AccountingDate" type="xs:date"/>
            <xs:element minOccurs="0" name="OriginalAccountingDate" type="xs:date"/>
            <xs:element minOccurs="0" name="ClientStatementDate" type="xs:date"/>
            <xs:element minOccurs="0" name="ExpectPrice" type="types:AmountType"/>
            <xs:element minOccurs="0" name="GrossPrice" type="types:AmountType"/>
            <xs:element minOccurs="0" name="BilledPrice" type="types:AmountType"/>
            <xs:element minOccurs="0" name="BalanceDue" type="types:AmountType"/>
            <xs:element minOccurs="0" name="PatientDueAmount" type="types:AmountType"/>
            <xs:element minOccurs="0" name="PatientInfo" type="PatientInfoType"/>
            <xs:element minOccurs="0" name="ClientProductId" type="types:ClientProductType"/>
            <xs:element minOccurs="0" name="NoCharge" type="xs:boolean"/>
            <xs:element minOccurs="0" name="PatientSignatureOnFile" type="xs:boolean"/>
            <xs:element minOccurs="0" name="PhysicianSignatureOnFile" type="xs:boolean"/>
            <xs:element minOccurs="0" name="Physicians" type="Physicians"/>
            <xs:element minOccurs="0" name="PhlebotomistUserId" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="PhlebotomistName" type="xs:string"/>
            <xs:element minOccurs="0" name="PscLocationId" type="xs:string"/>
            <xs:element minOccurs="0" name="PscLocationName" type="xs:string"/>
            <xs:element minOccurs="0" name="CallBack" type="xs:boolean"/>
            <xs:element minOccurs="0" name="CallBackPhone" type="types:PhoneNumberType"/>
            <xs:element minOccurs="0" name="STAT" type="xs:boolean"/>
            <xs:element minOccurs="0" name="AdmitDate" type="xs:date"/>
            <xs:element minOccurs="0" name="AdmissionTime" type="types:TimeType"/>
            <xs:element minOccurs="0" name="DischargeDate" type="xs:date"/>
            <xs:element minOccurs="0" name="DischargeTime" type="types:TimeType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="InsuranceInfo" type="GetInsuranceInfoType"/>
            <xs:element minOccurs="0" name="PaidInFull" type="xs:boolean"/>
            <xs:element minOccurs="0" name="TravelFee" type="TravelFeeType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionLevelDiagnosisCodes" type="DiagnosisCode"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="ClientQuestions" type="ClientQuestion"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="OrderedTests" type="GetOrderedTest"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="BillableProcedureCodes" type="BillableProcedureCode"/>
            <xs:element minOccurs="0" name="BulkPaymentAndDenials" type="BulkPaymentAndDenials"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionErrors" type="ErrorType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="AdditionalReportCopy" type="AdditionalReportCopyType"/>
            <xs:element minOccurs="0" name="ClinicalTrial" type="ClinicalTrial"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="PromisedPayments" type="PromisedPayments"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionContactInfo" type="AccessionContactInfo"/>
            <xs:element minOccurs="0" name="ChainOfCustody" type="ChainOfCustody"/>
            <xs:element minOccurs="0" name="DialysisInfo" type="DialysisInfoType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="ValueCodes" type="ValueCodeType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="OccurrenceCodes" type="OccurrenceCodeType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="SpecimenInfo" type="SpecimenInformationType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="DeletedPayorInfo" type="GetInsuranceInfoType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionLevelDeletedDiagnosisCodes" type="DeletedDiagnosisCode"/>
            <xs:element minOccurs="0" name="MspForm" type="xs:boolean"/>
            <xs:element minOccurs="0" name="OriginalSubmissionDate" type="xs:date"/>
            <xs:element minOccurs="0" name="ClientBillingCategory" type="types:DescriptionType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateAccessionRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="CreateAccession" type="AccessionType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateAccessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="Status" type="types:StatusType"/>
                  <xs:element minOccurs="0" name="BusinessObject">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionErrors" type="ErrorType"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionPayorErrors" type="AccessionPayorErrorType"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionTestErrors" type="AccessionTestErrorType"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateEPAccessionRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="UpdateAccession" type="AccessionType"/>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="ManualErrorFixes" type="ManualErrorFixType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateAccessionRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="UpdateAccession" type="AccessionType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateAccessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="Status" type="types:StatusType"/>
                  <xs:element minOccurs="0" name="BusinessObject">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionErrors" type="ErrorType"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionPayorErrors" type="AccessionPayorErrorType"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionTestErrors" type="AccessionTestErrorType"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ValidateAccessionRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure for validate Accession</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ValidateAccession" type="AccessionType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ValidateAccessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="Status" type="types:StatusType"/>
                  <xs:element minOccurs="0" name="BusinessObject">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionErrors" type="ErrorType"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionPayorErrors" type="AccessionPayorErrorType"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionTestErrors" type="AccessionTestErrorType"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetEPAccessionRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="GetEPAccessionRequestMessage" type="GetEPAccessionRequestMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetEPAccessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element ref="GetEPAccessionResponseMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetEPAccessionRequestMessage">
        <xs:sequence>
          <xs:element name="AccessionId" type="types:AccessionIdType"/>
          <xs:element name="CorrespondanceType" type="types:DescriptionType"/>
          <xs:element default="false" minOccurs="0" name="IncludeAccessionDetails" type="xs:boolean"/>
          <xs:element default="false" minOccurs="0" name="IncludeLimitedCoveragePolicyDetails" type="xs:boolean"/>
          <xs:element default="true" minOccurs="0" name="IncludeAccessionError" type="xs:boolean"/>
          <xs:element default="true" minOccurs="0" name="IncludeAccessionTestError" type="xs:boolean"/>
          <xs:element default="true" minOccurs="0" name="IncludeAccessionProcedureError" type="xs:boolean"/>
          <xs:element default="true" minOccurs="0" name="IncludeAccessionPayorError" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetEPAccessionResponseMessage">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionErrors" type="ErrorType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionTestErrors" type="AccessionTestErrorType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionPayorErrors" type="AccessionPayorErrorType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionProcedureErrors" type="AccessionProcedureErrorType"/>
            <xs:element minOccurs="0" ref="GetAccessionResponseMessage"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="LimitedCoveragePolicyDetails" type="LimitedCoveragePolicyDetails"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ManualErrorFixType">
        <xs:sequence>
          <xs:element name="ReasonCode" type="types:IdType"/>
          <xs:element name="ErrorType" type="ErrorTypeEnum"/>
          <xs:choice>
            <xs:annotation>
              <xs:documentation>Depending on the ErrorType chosen, additional information can be provided to
                        constrain the errors to specific references.</xs:documentation>
            </xs:annotation>
            <xs:element minOccurs="0" name="AccessionPayorErrorReference" type="AccessionPayorErrorReferenceType"/>
            <xs:element minOccurs="0" name="AccessionProcedureErrorReference" type="AccessionProcedureErrorReferenceType"/>
            <xs:element minOccurs="0" name="AccessionTestErrorReference" type="AccessionTestErrorReferenceType"/>
          </xs:choice>
          <xs:element minOccurs="0" name="FixNote" type="types:NoteType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessionPayorErrorReferenceType">
        <xs:sequence>
          <xs:element minOccurs="0" name="payorPriority" type="types:PayorPriorityType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessionProcedureErrorReferenceType">
        <xs:sequence>
          <xs:element name="procedureId" type="types:IdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessionTestErrorReferenceType">
        <xs:sequence>
          <xs:element name="testId" type="TestCodeIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ErrorTypeEnum">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ACCESSION"/>
          <xs:enumeration value="PAYOR"/>
          <xs:enumeration value="PROCEDURE"/>
          <xs:enumeration value="TEST"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="AccessionType">
        <xs:sequence>
          <xs:element name="AccessionId" type="types:AccessionIdType"/>
          <xs:element name="IgnoreErrors" type="xs:boolean"/>
          <xs:element default="false" minOccurs="0" name="ReturnErrors" type="xs:boolean"/>
          <xs:element minOccurs="0" name="RequisitionId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ReceiptDate" type="xs:date"/>
          <xs:element name="DateOfService" type="xs:date"/>
          <xs:element minOccurs="0" name="TimeOfService" type="types:TimeOfService"/>
          <xs:element minOccurs="0" name="AdmitDate" type="xs:date"/>
          <xs:element minOccurs="0" name="DischargeDate" type="xs:date"/>
          <xs:element minOccurs="0" name="ClientId" type="types:IdType"/>
          <xs:element minOccurs="0" name="PatientInfo" type="PatientInfoType"/>
          <xs:element minOccurs="0" name="PatientDemoEffectiveDate" type="xs:date"/>
          <xs:element minOccurs="0" name="FinalReportedDate" type="xs:date"/>
          <xs:element minOccurs="0" name="Physicians" type="Physicians"/>
          <xs:element minOccurs="0" name="PatientSignatureOnFile" type="xs:boolean"/>
          <xs:element minOccurs="0" name="PhysicianSignatureOnFile" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ReportCopyToPatient" type="xs:boolean"/>
          <xs:element minOccurs="0" name="CallBack" type="xs:boolean"/>
          <xs:element minOccurs="0" name="CallBackPhone" type="types:PhoneNumberType"/>
          <xs:element minOccurs="0" name="STAT" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionContactInfo" type="AccessionContactInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="AdditionalReportCopy" type="AdditionalReportCopyType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ClientQuestions" type="ClientQuestion"/>
          <xs:element minOccurs="0" name="ClinicalTrial" type="ClinicalTrial"/>
          <xs:element minOccurs="0" name="ChainOfCustody" type="ChainOfCustody"/>
          <xs:element minOccurs="0" name="DialysisInfo" type="DialysisInfoType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="OrderedTests" type="CreateOrUpdateOrderedTest"/>
          <xs:element minOccurs="0" name="TravelFee" type="TravelFeeType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionLevelDiagnosisCodes" type="DiagnosisCode"/>
          <xs:element minOccurs="0" name="PhlebotomistUserId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PscLocationId" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="SpecimenInfo" type="SpecimenInformationType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="InsuranceInfo" type="CreateOrUpdateInsuranceInfoType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="OccurrenceCode" type="OccurrenceCodeType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ValueCode" type="ValueCodeType"/>
          <xs:element minOccurs="0" name="CheckClientBillingRules" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ClientProductId" type="types:ClientProductType">
            <xs:annotation>
              <xs:documentation>The available ClientProductIds can be obtained using typetables
                        webservice where tablename =ClientProductType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NoCharge" type="xs:boolean"/>
          <xs:element minOccurs="0" name="PaidInFull" type="xs:boolean"/>
          <xs:element minOccurs="0" name="CreateOrUpdatePatientDemo" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If CreateOrUpdatePatientDemo flag is true
                        If patient Demo graphic record exists,
                        update the existing patient demographic record
                        else
                        create permanent patient Demo graphic record</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MspForm" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ForceToEPHoldQueueNote" type="types:NoteType"/>
          <xs:element minOccurs="0" name="ClientBillingCategory" type="types:DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EmployerInfoType">
        <xs:sequence>
          <xs:element name="EmployerName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="EmployerId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="Address" type="types:AddressType"/>
          <xs:element minOccurs="0" name="Status" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available EmploymentStatTyps can be obtained using typetables
                    webservice where tablename =EmploymentStatTyp.
                    The typetable webservice response returns the Id and description. In this webservice request
                    send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EmployerContact" type="types:Contact"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetInsuranceInfoType">
        <xs:sequence>
          <xs:element name="PayorPriority" type="types:PayorPriorityType"/>
          <xs:element name="PayorId" type="types:IdType"/>
          <xs:element minOccurs="0" name="PayorName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="SubscriberId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="xs:string"/>
          <xs:element minOccurs="0" name="InsuredRelationship" type="xs:string"/>
          <xs:element minOccurs="0" name="GroupId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PlanId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="InsuredName" type="types:NameType"/>
          <xs:element minOccurs="0" name="Address" type="types:AddressType"/>
          <xs:element minOccurs="0" name="Phone" type="types:PhoneType"/>
          <xs:element minOccurs="0" name="InsuredSSN" type="types:SSNType"/>
          <xs:element minOccurs="0" name="AuthorizationNumber" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ClaimNotes" type="types:NoteType"/>
          <xs:element minOccurs="0" name="Comments" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo1" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo2" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo3" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo4" type="types:NoteType"/>
          <xs:element minOccurs="0" name="GroupName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="CaseId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DelayReasonCode" type="types:DelayReasonCodeType"/>
          <xs:element minOccurs="0" name="EmployerInfo" type="EmployerInfoType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="EligibilityInfo" type="EligibilityInfo"/>
          <xs:element minOccurs="0" name="PaidInFull" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="PayorErrors" type="ErrorType"/>
          <xs:element minOccurs="0" name="Jurisdiction" type="xs:boolean"/>
          <xs:element minOccurs="0" name="DemonstrationProjectId" type="types:DemonstrationProjectIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreateOrUpdateInsuranceInfoType">
        <xs:sequence>
          <xs:element name="PayorPriority" type="types:PayorPriorityType"/>
          <xs:element name="PayorId" type="types:IdType"/>
          <xs:element minOccurs="0" name="PayorName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="SubscriberId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="xs:string">
            <xs:annotation>
              <xs:documentation>Use typetables webservice to get available Ids use for this type .Use Gender as
                        tablename</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InsuredRelationship" type="xs:string">
            <xs:annotation>
              <xs:documentation>The available InsuredRelationships can be obtained using typetables
                        webservice where tablename =InsuredRelationship.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="GroupId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PlanId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="InsuredName" type="types:NameType"/>
          <xs:element minOccurs="0" name="Address" type="types:AddressType"/>
          <xs:element minOccurs="0" name="Phone" type="types:PhoneType"/>
          <xs:element minOccurs="0" name="InsuredSSN" type="types:SSNType"/>
          <xs:element minOccurs="0" name="AuthorizationNumber" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ClaimNotes" type="types:NoteType"/>
          <xs:element minOccurs="0" name="Comments" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo1" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo2" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo3" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo4" type="types:NoteType"/>
          <xs:element minOccurs="0" name="GroupName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="CaseId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DelayReasonCode" type="types:DelayReasonCodeType">
            <xs:annotation>
              <xs:documentation>The available DelayReasonCodes can be obtained using typetables webservice
                        where tablename =DelayReasonCode.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EmployerInfo" type="EmployerInfoType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="EligibilityInfo" type="EligibilityInfo"/>
          <xs:element minOccurs="0" name="DemonstrationProjectId" type="types:DemonstrationProjectIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PatientInfoType">
        <xs:sequence>
          <xs:element minOccurs="0" name="PatientId" type="types:NameIdType"/>
          <xs:element minOccurs="0" name="Person" type="types:PersonType"/>
          <xs:element minOccurs="0" name="PatientType" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available PatientTypes can be obtained using typetables webservice
                        where tablename =PatientType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Fasting" type="PatientFastingType">
            <xs:annotation>
              <xs:documentation>The available Fastings can be obtained using typetables webservice
                        where tablename =Fasting.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PatientLocation" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available PatientLocations can be obtained using typetables webservice
                        where tablename =PatientLocation.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IndigentPercent" type="types:AmountType"/>
          <xs:element minOccurs="0" name="OnsetDate" type="xs:date"/>
          <xs:element minOccurs="0" name="OnsetType" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available OnsetTypes can be obtained using typetables webservice
                        where tablename =OnsetType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AdmissionSource" type="types:ShortStrType">
            <xs:annotation>
              <xs:documentation>The available AdmissionSources can be obtained using typetables webservice
                        where tablename =AdmissionSource.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AdmissionType" type="types:ShortStrType">
            <xs:annotation>
              <xs:documentation>The available AdmissionTypes can be obtained using typetables webservice
                        where tablename =AdmissionType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AccidentCause" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available AccidentCauses can be obtained using typetables webservice
                        where tablename =AccidentCause.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AccidentState" type="xs:string"/>
          <xs:element default="false" minOccurs="0" name="EmergencyIndicator" type="xs:boolean"/>
          <xs:element minOccurs="0" name="GravidaNumber" type="types:SmallInt"/>
          <xs:element minOccurs="0" name="Pregnancy" type="xs:boolean"/>
          <xs:element minOccurs="0" name="MaritalStatus" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available MaritalStatuses can be obtained using typetables webservice
                        where tablename =MaritalStatus.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Comments" type="types:CommentsType"/>
          <xs:element minOccurs="0" name="PatientStatusType" type="types:PatientStatusType">
            <xs:annotation>
              <xs:documentation>The available PatientStatusTypes can be obtained using typetables webservice
                        where tablename =PatientStatusType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ClientSpecificPatientId" type="types:PatientIdType"/>
          <xs:element minOccurs="0" name="FacilitySpecificPatientId" type="types:PatientIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DialysisInfoType">
        <xs:sequence>
          <xs:element minOccurs="0" name="DialysisType" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available DialysisTypes can be obtained using typetables webservice
                        where tablename =DialysisType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Medication" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available Medications can be obtained using typetables webservice
                        where  tablename =Medication.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EligibilityInfo">
        <xs:sequence>
          <xs:element name="EligibilityStatus" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available EligibilityStatuss can be obtained using typetables webservice
                     where tablename =EligibilityStatus.
                     The typetable webservice response returns the Id and description. In this webservice request
                     send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="EligibilityService" type="types:DescriptionType"/>
          <xs:element name="EligibilityCheckedDate" type="xs:date"/>
          <xs:element minOccurs="0" name="EligibilityTransactionId" type="xs:positiveInteger">
            <xs:annotation>
              <xs:documentation>EligibilityTransactionId is the unique transaction Id and can be used to get 271
                        eligibility data for more details
                        using eligibility webservice</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClinicalTrial">
        <xs:sequence>
          <xs:element name="TrialName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="EncounterName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="EncounterDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ModsTyp">
        <xs:sequence>
          <xs:element minOccurs="0" name="Mod1" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="Mod2" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="Mod3" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="Mod4" type="types:DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ChainOfCustody">
        <xs:sequence>
          <xs:element minOccurs="0" name="MroName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="MroAddress" type="types:AddressType"/>
          <xs:element minOccurs="0" name="MroContact" type="types:Contact"/>
          <xs:element minOccurs="0" name="EmployerInfo" type="EmployerInfoType"/>
          <xs:element minOccurs="0" name="ChainOfCustodyReasonType" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available ChainOfCustodyReasonTypes can be obtained using typetables
                        webservice where tablename =ChainOfCustodyReasonType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SpecimenTemp" type="xs:nonNegativeInteger">
            <xs:annotation>
              <xs:documentation>The available SpecimenTemps can be obtained using typetables webservice
                        where tablename =SpecimenTemp.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SplitSpecimenCollection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="SpecimenCollector" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="SpecimenCollectorSignatureOnFile" type="xs:boolean"/>
          <xs:element minOccurs="0" name="SpecimenTemperatureInRange" type="xs:boolean"/>
          <xs:element minOccurs="0" name="SpecimenTemperatureNotInRange" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessionContactInfo">
        <xs:annotation>
          <xs:documentation>User Id is not required for creating and updating accession.User Id in MessageHeader will
                be used as accession contacts userId</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="UserId" type="types:DescriptionType"/>
          <xs:element name="ContactDate" type="xs:date"/>
          <xs:element minOccurs="0" name="ContactInfo" type="types:NoteType"/>
          <xs:element minOccurs="0" name="FollowUpDate" type="xs:date"/>
          <xs:element minOccurs="0" name="FollowUpUserId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PrintableNotes" type="types:NoteType"/>
          <xs:element minOccurs="0" name="PrintOnStatement" type="xs:boolean"/>
          <xs:element minOccurs="0" name="FollowUpComplete" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Voided" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PromisedPayments">
        <xs:sequence>
          <xs:element name="UserId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ContactDate" type="xs:date"/>
          <xs:element minOccurs="0" name="DunningCycle" type="xs:positiveInteger"/>
          <xs:element minOccurs="0" name="DunningCycleAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="Note" type="types:NoteType"/>
          <xs:element minOccurs="0" name="PrintOnStatement" type="xs:boolean"/>
          <xs:element minOccurs="0" name="FollowUpComplete" type="xs:boolean"/>
          <xs:element minOccurs="0" name="PlanStatus" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="VoidUserId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ReasonSystemEnded" type="types:NoteType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TestQuestions">
        <xs:sequence>
          <xs:element name="Question" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available Questions can be obtained using typetables
                        webservice where tablename =Question.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Response" type="types:NoteType"/>
          <xs:element minOccurs="0" name="ContactMethod" type="types:NoteType">
            <xs:annotation>
              <xs:documentation>The available ContactMethodTypes can be obtained using typetables
                        webservice where tablename =ContactMethodType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetOrderedTest">
        <xs:sequence>
          <xs:element name="TestId" type="TestCodeIdType"/>
          <xs:element minOccurs="0" name="TestName" type="types:TestNameType"/>
          <xs:element minOccurs="0" name="AternativeTestName" type="types:TestNameType"/>
          <xs:element minOccurs="0" name="Profile" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Modifiers" type="ModsTyp"/>
          <xs:element minOccurs="0" name="ManualPrice" type="types:AmountType"/>
          <xs:element minOccurs="0" name="ClientBilled" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="LabMessages" type="GetLabMessage"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="DiagnosisCodes" type="DiagnosisCode"/>
          <xs:element minOccurs="0" name="Note" type="types:NoteType"/>
          <xs:element minOccurs="0" name="PlaceOfService" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="FinalReportDate" type="xs:date"/>
          <xs:element minOccurs="0" name="RenderingPhysician" type="Physician"/>
          <xs:element minOccurs="0" name="AbnReceived" type="xs:boolean"/>
          <xs:element minOccurs="0" name="AbnRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="AbnReason" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="AbnComment" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="Units" type="types:UnitsType"/>
          <xs:element minOccurs="0" name="ProfileId" type="TestCodeIdType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="TestQuestions" type="TestQuestions"/>
          <xs:element minOccurs="0" name="Result" type="types:NoteType"/>
          <xs:element minOccurs="0" name="ProcedureCode" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ProcedureName" type="types:ProcedureNameType"/>
          <xs:element name="BilledPrice" type="types:AmountType"/>
          <xs:element name="GrossPrice" type="types:AmountType"/>
          <xs:element name="ExpectedPrice" type="types:AmountType"/>
          <xs:element minOccurs="0" name="PriceMethodType" type="types:DescriptionType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="TestErrors" type="ErrorType"/>
          <xs:element minOccurs="0" name="StandingOrderId" type="types:NoteType"/>
          <xs:element minOccurs="0" name="RetroBilPrice" type="types:AmountType"/>
          <xs:element minOccurs="0" name="TradeDiscAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="RetroTradeDiscAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="ComponentBillPrice" type="types:AmountType"/>
          <xs:element minOccurs="0" name="ComponentGrossPrice" type="types:AmountType"/>
          <xs:element minOccurs="0" name="AmbigDate" type="xs:date"/>
          <xs:element minOccurs="0" name="AmbigUser" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="AmbigClientContact" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="NwaDocumentReceived" type="xs:boolean"/>
          <xs:element minOccurs="0" name="NwaClientAuth" type="xs:boolean"/>
          <xs:element minOccurs="0" name="NwaAuthDate" type="xs:date"/>
          <xs:element minOccurs="0" name="PayorPriority" type="PayorPriorityType"/>
          <xs:element minOccurs="0" name="AuthorizationNumber" type="types:AuthorizationNumberType"/>
          <xs:element minOccurs="0" name="Renal" type="types:RenalType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="DeletedDiagnosisCodes" type="DeletedDiagnosisCode"/>
          <xs:element minOccurs="0" name="LISTestTraceId" type="xs:positiveInteger"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreateOrUpdateOrderedTest">
        <xs:sequence>
          <xs:element name="TestSequenceNumber" type="xs:positiveInteger">
            <xs:annotation>
              <xs:documentation>Unique number of each test on the accession.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TransactionType" type="types:ShortStrType">
            <xs:annotation>
              <xs:documentation>Transaction type defined in XIFIN , this is used to find whether the test is
                        credit or debit , Use D/+ for debit, C/- for credit tests.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TestId" type="TestCodeIdType"/>
          <xs:element minOccurs="0" name="AlternativeTestName" type="types:TestNameType"/>
          <xs:element minOccurs="0" name="Modifiers" type="ModsTyp"/>
          <xs:element minOccurs="0" name="ManualPrice" type="types:AmountType"/>
          <xs:element minOccurs="0" name="ClientBilled" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="LabMessages" type="CreateOrUpdateLabMessage"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="DiagnosisCodes" type="DiagnosisCode"/>
          <xs:element minOccurs="0" name="Note" type="types:NoteType"/>
          <xs:element minOccurs="0" name="PlaceOfService" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="FinalReportDate" type="xs:date"/>
          <xs:element minOccurs="0" name="RenderingPhysician" type="Physician"/>
          <xs:element minOccurs="0" name="StandingOrderId" type="types:NoteType"/>
          <xs:element minOccurs="0" name="AbnReceived" type="xs:boolean"/>
          <xs:element minOccurs="0" name="AbnReason" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="AbnComment" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="Units" type="types:UnitsType"/>
          <xs:element minOccurs="0" name="ProfileId" type="TestCodeIdType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="TestQuestions" type="TestQuestions"/>
          <xs:element minOccurs="0" name="Result" type="types:NoteType"/>
          <xs:element minOccurs="0" name="SplitPayorId" type="types:IdType"/>
          <xs:element minOccurs="0" name="AuthorizationNumber" type="types:AuthorizationNumberType"/>
          <xs:element minOccurs="0" name="Renal" type="types:RenalType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BillableProcedureCode">
        <xs:sequence>
          <xs:element name="ProcedureCode" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PlaceOfService" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="Modifiers" type="ModsTyp"/>
          <xs:element minOccurs="0" name="UnitsBilled" type="types:UnitsType"/>
          <xs:element minOccurs="0" name="UnitsPaid" type="types:UnitsType"/>
          <xs:element minOccurs="0" name="BilledPrice" type="types:AmountType"/>
          <xs:element minOccurs="0" name="ExpectedPrice" type="types:AmountType"/>
          <xs:element minOccurs="0" name="LabCost" type="types:AmountType"/>
          <xs:element minOccurs="0" name="RetroBillPrice" type="types:AmountType"/>
          <xs:element minOccurs="0" name="RetroTradeDiscountAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="TradeDiscountAmount" type="types:AmountType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="PaymentAndAdjustment" type="PaymentAndAdjustment"/>
          <xs:element minOccurs="0" name="PriceMethodType" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DueAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="ExpectDueAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="SubmissionDate" type="xs:date"/>
          <xs:element minOccurs="0" name="DiagnosisCode1" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DiagnosisCode2" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DiagnosisCode3" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DiagnosisCode4" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="AbnReceived" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Status" type="types:DescriptionType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ProcedureErrors" type="ErrorType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BulkPaymentAndDenial">
        <xs:sequence>
          <xs:element minOccurs="0" name="ProcedureCode" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PaymentAndAdjustment" type="PaymentAndAdjustment"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BulkPaymentAndDenials">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="BulkPaymentAndDenial" type="BulkPaymentAndDenial"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="BulkDenials" type="ErrorType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CreateOrUpdateLabMessage">
        <xs:sequence>
          <xs:element name="Code" type="types:IdType">
            <xs:annotation>
              <xs:documentation>The available Codes can be obtained using typetables
                        webservice where tablename =TestMsg.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetLabMessage">
        <xs:sequence>
          <xs:element name="Code" type="types:IdType"/>
          <xs:element name="Description" type="types:DescriptionType"/>
          <xs:element name="MessageNote" type="types:NoteType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaymentAndAdjustment">
        <xs:sequence>
          <xs:element name="Copay" type="types:AmountType"/>
          <xs:element name="CoInsurance" type="types:AmountType"/>
          <xs:element name="Deductible" type="types:AmountType"/>
          <xs:element name="PatientResponsibility" type="types:AmountType"/>
          <xs:element name="PaymentAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="PaymentComment" type="types:NoteType"/>
          <xs:element minOccurs="0" name="PaymentDate" type="xs:date"/>
          <xs:element minOccurs="0" name="PaymentType" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="AllowAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="BillAmountFromEob" type="types:AmountType"/>
          <xs:element minOccurs="0" name="UnitsPaid" type="types:UnitsType"/>
          <xs:element minOccurs="0" name="PayorId" type="types:IdType"/>
          <xs:element minOccurs="0" name="PayorName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ReceiptId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DepositId" type="xs:nonNegativeInteger"/>
          <xs:element minOccurs="0" name="DepositBatchId" type="xs:nonNegativeInteger"/>
          <xs:element minOccurs="0" name="DepositBatchSeqId" type="xs:nonNegativeInteger"/>
          <xs:element minOccurs="0" name="CheckNumber" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ICN" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="UserId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="BatchPosted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ElectronicCardTransactionId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ElectronicCardType" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ElectronicTransactionType" type="types:DescriptionType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Adjustment" type="Adjustment"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Denials" type="ErrorType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Adjustment">
        <xs:sequence>
          <xs:element name="AdjustmentCode" type="types:DescriptionType"/>
          <xs:element name="BillAdjustmentAmount" type="types:AmountType"/>
          <xs:element name="ExpectAdjustmentAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="AdjustmentComment" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="UserId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="AdjustmentDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Physicians">
        <xs:sequence>
          <xs:element minOccurs="0" name="Ordering" type="Physician"/>
          <xs:element minOccurs="0" name="Referring" type="Physician"/>
          <xs:element minOccurs="0" name="Primary" type="Physician"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Physician">
        <xs:sequence>
          <xs:element minOccurs="0" name="NPI" type="types:NPIType"/>
          <xs:element minOccurs="0" name="Name" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="UPIN" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ErrorType">
        <xs:sequence>
          <xs:element name="ReasonCode" type="types:IdType"/>
          <xs:element minOccurs="0" name="ErrorNote" type="types:NoteType"/>
          <xs:element name="Description" type="types:LongDescriptionType"/>
          <xs:element name="ErrorGroup" type="types:DescriptionType"/>
          <xs:element name="ErrorLevelType" type="types:DescriptionType"/>
          <xs:element name="ErrorDate" type="xs:date"/>
          <xs:element minOccurs="0" name="FixedDate" type="xs:date"/>
          <xs:element minOccurs="0" name="FieldName" type="xs:string"/>
          <xs:element minOccurs="0" name="FieldPattern" type="xs:string"/>
          <xs:element minOccurs="0" name="FiledErrorMessage" type="xs:string"/>
          <xs:element default="false" name="AccessionPayorField" type="xs:boolean"/>
          <xs:element minOccurs="0" name="DetailDescription" type="types:LongDescriptionType"/>
          <xs:element minOccurs="0" name="LetterText" type="types:NoteType"/>
          <xs:element minOccurs="0" name="FieldCurrentValue" type="xs:string"/>
          <xs:element minOccurs="0" name="UserFixableWithAcknowledgement" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessionPayorErrorType">
        <xs:sequence>
          <xs:element name="PayorId" type="types:IdType"/>
          <xs:element name="PayorPriority" type="types:PayorPriorityType"/>
          <xs:element maxOccurs="unbounded" name="Error" type="ErrorType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessionTestErrorType">
        <xs:sequence>
          <xs:element name="TestId" type="TestCodeIdType"/>
          <xs:element minOccurs="0" name="TestSequenceNumber" type="xs:positiveInteger">
            <xs:annotation>
              <xs:documentation>The sequence number that was sent in create accession.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" name="Error" type="ErrorType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessionProcedureErrorType">
        <xs:annotation>
          <xs:documentation>This section describes Accession Procedure Errors.It could have Zero or more repetitions.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="ProcedureCode" type="types:IdType"/>
          <xs:element name="PayorPriority" type="types:PayorPriorityType"/>
          <xs:element name="PayorId" type="types:IdType"/>
          <xs:element minOccurs="0" name="DepositId" type="xs:nonNegativeInteger"/>
          <xs:element minOccurs="0" name="DepositBatchId" type="xs:nonNegativeInteger"/>
          <xs:element minOccurs="0" name="DepositBatchSeqId" type="xs:nonNegativeInteger"/>
          <xs:element maxOccurs="unbounded" name="Error" type="ErrorType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DiagnosisCode">
        <xs:annotation>
          <xs:documentation>User Id is not required for creating and updating accession.User Id in MessageHeader will
                be used as accession diagnosis userId</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="DiagnosisCode" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="NarrativeDiag" type="types:NarrativeDiagTyp"/>
          <xs:element minOccurs="0" name="UserId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ClientContact" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="ClientContactDate" type="xs:date"/>
          <xs:element minOccurs="0" name="Comment" type="types:NoteType"/>
          <xs:element minOccurs="0" name="DiagnosisCodeOrder" type="xs:positiveInteger"/>
          <xs:element minOccurs="0" name="Deleted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="DocumentId" type="xs:string"/>
          <xs:element minOccurs="0" name="VoidType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DeletedDiagnosisCode">
        <xs:sequence>
          <xs:element name="DiagnosisCode" type="DiagnosisCode"/>
          <xs:element minOccurs="0" name="DiagnosisDescription" type="types:NarrativeDiagTyp"/>
          <xs:element name="DeletedDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClientQuestion">
        <xs:sequence>
          <xs:element name="Question" type="QuestionType">
            <xs:annotation>
              <xs:documentation>The available Questions can be obtained using typetables
                        webservice where tablename =Question.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Response" type="types:NoteType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="QuestionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="AdditionalReportCopyType">
        <xs:sequence>
          <xs:element name="ClientId" type="types:IdType"/>
          <xs:element name="ContactMethodType" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available ContactMethodTypes can be obtained using typetables
                        webservice where tablename =ContactMethodType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Name" type="types:NameIdType"/>
          <xs:element minOccurs="0" name="Address" type="types:AddressType"/>
          <xs:element minOccurs="0" name="Phone" type="types:PhoneNumberType"/>
          <xs:element minOccurs="0" name="Fax" type="types:PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="types:DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SpecimenInformationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="Count" type="xs:nonNegativeInteger"/>
          <xs:element minOccurs="0" name="SpecimenContainerCode" type="types:IdType">
            <xs:annotation>
              <xs:documentation>The available SpecimenContainerCodes can be obtained using typetables
                        webservice where tablename =SpecimenContainerCode.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SpecimenSourceDescription" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="SpecimenTempType" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available SpecimenTempTypes can be obtained using typetables
                        webservice where tablename =SpecimenTempType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="SpecimenQuestion" type="SpecimenQuestionsTyp"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PatientFastingType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="SpecimenQuestionsTyp">
        <xs:sequence>
          <xs:element name="QuestionId" type="QuestionType">
            <xs:annotation>
              <xs:documentation>The available QuestionIds can be obtained using typetables
                        webservice where tablename =Question.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Response" type="types:DescriptionType"/>
          <xs:element name="SpecimenType" type="types:DescriptionType">
            <xs:annotation>
              <xs:documentation>The available SpecimenTypes can be obtained using typetables
                        webservice where tablename =SpecimenType.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OccurrenceCodeType">
        <xs:sequence>
          <xs:element name="OccurrenceCode" type="types:IdType">
            <xs:annotation>
              <xs:documentation>The available OccurrenceCodes can be obtained using typetables
                        webservice where ablename =OccurrenceCode.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="OccurrenceDate" type="xs:date"/>
          <xs:element minOccurs="0" name="SpecificPyrId" type="types:IdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ValueCodeType">
        <xs:sequence>
          <xs:element name="ValueCode" type="types:IdType">
            <xs:annotation>
              <xs:documentation>The available ValueCodes can be obtained using typetables
                        webservice where tablename =ValueCode.
                        The typetable webservice response returns the Id and description. In this webservice request
                        send the Id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ValueAmt" type="types:ShortStrType"/>
          <xs:element minOccurs="0" name="SpecificPyrId" type="types:IdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TravelFeeType">
        <xs:sequence>
          <xs:element minOccurs="0" name="RoundTripFromLab" type="xs:boolean"/>
          <xs:element minOccurs="0" name="TripMiles" type="types:AmountType"/>
          <xs:element minOccurs="0" name="TripStops" type="xs:nonNegativeInteger"/>
          <xs:element minOccurs="0" name="TripPatientCount" type="xs:nonNegativeInteger"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LimitedCoveragePolicyDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="PolicyHeader" type="xs:string"/>
          <xs:element minOccurs="0" name="CoveredDiagnoses" type="xs:string"/>
          <xs:element minOccurs="0" name="NonCoveredDiagnoses" type="xs:string"/>
          <xs:element minOccurs="0" name="ExcludedDiagnoses" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="TestCodeIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ApplyEligibilityLogicRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ApplyEligibilityLogicRequestMessage" type="ApplyEligibilityLogicRequestMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ApplyEligibilityLogicRequestMessage">
        <xs:sequence>
          <xs:element name="AccessionId" type="types:AccessionIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ApplyEligibilityLogicResponse">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element ref="ApplyEligibilityLogicResponseMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ApplyEligibilityLogicResponseMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EligibilityStatus" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="EligibilityStatusMessage" type="types:NoteType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateAccessionAdjustmentRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="CreateAccessionAdjustment" type="AccessionAdjustmentType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateAccessionAdjustmentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="Status" type="types:StatusType"/>
                  <xs:element minOccurs="0" name="BusinessObject">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="AccessionAdjustmentErrors" type="AccessionAdjustmentErrorType"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="AccessionAdjustmentType">
        <xs:sequence>
          <xs:element name="AccessionId" type="types:AccessionIdType"/>
          <xs:element name="AdjustmentCodeId" type="types:AdjustmentCodeType"/>
          <xs:element name="AdustmentAmount" type="types:AmountType"/>
          <xs:element name="AdjustmentPyrAbbrev" type="types:AbbrevType"/>
          <xs:element minOccurs="0" name="SubscriberId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="AdjustmentNote" type="types:NoteType"/>
          <xs:element default="false" name="AdjustmentPrintNote" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessionAdjustmentErrorType">
        <xs:sequence>
          <xs:element name="ReasonCode" type="xs:int"/>
          <xs:element minOccurs="0" name="ErrorMsg" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/types">
      <xs:complexType name="AddressType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressLine1">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine2">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="City">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="State">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Region">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ZIP">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountryCode">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CardTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelayReasonCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmtType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="12"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccessionIdType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(([A-Za-z0-9][A-Za-z0-9-]*)|^)[A-Za-z0-9]"/>
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StatusType">
        <xs:sequence>
          <xs:element name="StatusCode" type="StatusCodeType"/>
          <xs:element minOccurs="0" name="StatusMessage" type="StatusMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusCodeType">
        <xs:restriction base="xs:integer">
          <xs:maxExclusive value="9999"/>
          <xs:minExclusive value="-9999"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatusMessageType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PhoneType">
        <xs:sequence>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="NPIType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SSNType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="9"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MSPTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TestNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EmailAddressType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[^@]+@[^\.]+\..+"/>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LongDescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="FirstName" type="NameIdType"/>
          <xs:element minOccurs="0" name="LastName" type="NameIdType"/>
          <xs:element minOccurs="0" name="MiddleName" type="NameIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UnitsType">
        <xs:restriction base="xs:integer">
          <xs:totalDigits value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NarrativeDiagTyp">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProcedureNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientProductType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommentsType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PersonType">
        <xs:sequence>
          <xs:element name="Name" type="NameType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="DescriptionType"/>
          <xs:element minOccurs="0" name="SSN" type="SSNType"/>
          <xs:element minOccurs="0" name="Address" type="AddressType"/>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Contact">
        <xs:sequence>
          <xs:element minOccurs="0" name="ContactName" type="DescriptionType"/>
          <xs:element minOccurs="0" name="Phone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Fax" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UserIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeOfService">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:int">
          <xs:totalDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AbbrevType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmountType">
        <xs:restriction base="xs:decimal">
          <xs:totalDigits value="12"/>
          <xs:fractionDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethodType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientStatusType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ShortStrType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SmallInt">
        <xs:restriction base="xs:integer">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorizationNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EpiType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DemonstrationProjectIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RenalType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(Y|N)?"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AdjustmentCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/msgHeader" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/msgHeader">
      <xs:element name="MessageHeader">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="OrganizationName" type="xs:string"/>
            <xs:element minOccurs="0" name="SequenceNumber" type="xs:positiveInteger"/>
            <xs:element name="UserId">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="20"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="SourceApplication" type="xs:string">
              <xs:annotation>
                <xs:documentation>Name of the source application</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="OrgAlias" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="ValidateAccessionResponse">
    <wsdl:part element="tns:ValidateAccessionResponse" name="ValidateAccessionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAccessionRequest">
    <wsdl:part element="tns:GetAccessionRequest" name="GetAccessionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAccessionRequest">
    <wsdl:part element="tns:UpdateAccessionRequest" name="UpdateAccessionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateEPAccessionRequest">
    <wsdl:part element="tns:UpdateEPAccessionRequest" name="UpdateEPAccessionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ApplyEligibilityLogicRequest">
    <wsdl:part element="tns:ApplyEligibilityLogicRequest" name="ApplyEligibilityLogicRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAccessionRequest">
    <wsdl:part element="tns:CreateAccessionRequest" name="CreateAccessionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEPAccessionRequest">
    <wsdl:part element="tns:GetEPAccessionRequest" name="GetEPAccessionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAccessionResponse">
    <wsdl:part element="tns:UpdateAccessionResponse" name="UpdateAccessionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ValidateAccessionRequest">
    <wsdl:part element="tns:ValidateAccessionRequest" name="ValidateAccessionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEPAccessionResponse">
    <wsdl:part element="tns:GetEPAccessionResponse" name="GetEPAccessionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAccessionAdjustmentRequest">
    <wsdl:part element="tns:CreateAccessionAdjustmentRequest" name="CreateAccessionAdjustmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAccessionResponse">
    <wsdl:part element="tns:CreateAccessionResponse" name="CreateAccessionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAccessionResponse">
    <wsdl:part element="tns:GetAccessionResponse" name="GetAccessionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAccessionAdjustmentResponse">
    <wsdl:part element="tns:CreateAccessionAdjustmentResponse" name="CreateAccessionAdjustmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ApplyEligibilityLogicResponse">
    <wsdl:part element="tns:ApplyEligibilityLogicResponse" name="ApplyEligibilityLogicResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="accession">
    <wsdl:operation name="ValidateAccession">
      <wsdl:input message="tns:ValidateAccessionRequest" name="ValidateAccessionRequest"></wsdl:input>
      <wsdl:output message="tns:ValidateAccessionResponse" name="ValidateAccessionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccession">
      <wsdl:input message="tns:GetAccessionRequest" name="GetAccessionRequest"></wsdl:input>
      <wsdl:output message="tns:GetAccessionResponse" name="GetAccessionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAccession">
      <wsdl:input message="tns:UpdateAccessionRequest" name="UpdateAccessionRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateAccessionResponse" name="UpdateAccessionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateEPAccession">
      <wsdl:input message="tns:UpdateEPAccessionRequest" name="UpdateEPAccessionRequest"></wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="ApplyEligibilityLogic">
      <wsdl:input message="tns:ApplyEligibilityLogicRequest" name="ApplyEligibilityLogicRequest"></wsdl:input>
      <wsdl:output message="tns:ApplyEligibilityLogicResponse" name="ApplyEligibilityLogicResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAccession">
      <wsdl:input message="tns:CreateAccessionRequest" name="CreateAccessionRequest"></wsdl:input>
      <wsdl:output message="tns:CreateAccessionResponse" name="CreateAccessionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEPAccession">
      <wsdl:input message="tns:GetEPAccessionRequest" name="GetEPAccessionRequest"></wsdl:input>
      <wsdl:output message="tns:GetEPAccessionResponse" name="GetEPAccessionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAccessionAdjustment">
      <wsdl:input message="tns:CreateAccessionAdjustmentRequest" name="CreateAccessionAdjustmentRequest"></wsdl:input>
      <wsdl:output message="tns:CreateAccessionAdjustmentResponse" name="CreateAccessionAdjustmentResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="accessionSoap11" type="tns:accession">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="ValidateAccession">
      <soap:operation soapAction=""/>
      <wsdl:input name="ValidateAccessionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ValidateAccessionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccession">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAccessionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAccessionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAccession">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateAccessionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateAccessionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateEPAccession">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateEPAccessionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="ApplyEligibilityLogic">
      <soap:operation soapAction=""/>
      <wsdl:input name="ApplyEligibilityLogicRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ApplyEligibilityLogicResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAccession">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateAccessionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateAccessionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEPAccession">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEPAccessionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEPAccessionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAccessionAdjustment">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateAccessionAdjustmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateAccessionAdjustmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="accessionService">
    <wsdl:port binding="tns:accessionSoap11" name="accessionSoap11">
      <soap:address location="https://www.xifinqa.com/prod/accession/services"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#endpoint}</con:endpoint><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="CreateAccession" bindingOperationName="CreateAccession" type="Request-Response" outputName="CreateAccessionResponse" inputName="CreateAccessionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="9704ce9e-d81a-44ff-ba52-32f3d611ca72"><con:settings/><con:call name="Request 1" id="149a3d06-adcb-408a-8778-33f8319b2a81"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="CreateANewAccn" wssPasswordType="PasswordDigest" id="a7ffd04d-8038-419d-b65b-15184282bc0e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>yli</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>clndoc</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>AccnWSSmokeTest003</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>2014-01-01</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>100</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>PTFNAME</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>PTLNAME</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>1990-01-01</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PT ADDR1</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PT ADDR2</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>92127</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>2014-02-02</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>1386622462</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>219</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>ACME</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>2014-03-03</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>250.00</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>ACME</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>MCRR</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>A123456</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>clndoc</con:username><con:password>clndoc</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 3" id="248a58f3-93c4-4821-921f-e4fb1312a056"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 4" id="da030fed-4ee2-4d75-a554-e101d8f96bbe"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:ReturnErrors>false</acc:ReturnErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                     <!--Optional:-->
                     <acc:DocumentId>?</acc:DocumentId>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
                  <!--Optional:-->
                  <acc:DocumentId>?</acc:DocumentId>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
               <!--Optional:-->
               <acc:MspForm>?</acc:MspForm>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 5" id="1de2ebed-37c5-4b0d-82bc-98917852863b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <!--type: positiveInteger-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <!--anonymous type-->
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <!--type: string-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <!--type: AccessionIdType-->
               <acc:AccessionId>?</acc:AccessionId>
               <!--type: boolean-->
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:ReturnErrors>false</acc:ReturnErrors>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <!--type: date-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <!--type: date-->
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <!--type: TimeOfService-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <!--type: date-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <!--type: date-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <!--type: IdType-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <!--type: NameIdType-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <!--type: date-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <!--type: SSNType-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <!--type: PatientFastingType-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <!--type: SmallInt-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <!--type: CommentsType-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <!--type: PatientStatusType-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <!--type: PatientIdType-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <!--type: PatientIdType-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <!--type: date-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <!--type: date-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <!--type: PhoneNumberType-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:UserId>?</acc:UserId>
                  <!--type: date-->
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <!--type: IdType-->
                  <acc:ClientId>?</acc:ClientId>
                  <!--type: DescriptionType-->
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <!--type: NameIdType-->
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <!--type: PhoneNumberType-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <!--type: PhoneNumberType-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <!--type: QuestionType-->
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <!--type: DescriptionType-->
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <!--type: string-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <!--type: DescriptionType-->
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <!--type: DescriptionType-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <!--type: string-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <!--type: positiveInteger-->
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <!--type: ShortStrType-->
                  <acc:TransactionType>?</acc:TransactionType>
                  <!--type: TestCodeIdType-->
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <!--type: TestNameType-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <!--type: IdType-->
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <!--type: NarrativeDiagTyp-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <!--type: date-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <!--type: NoteType-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <!--type: positiveInteger-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <!--type: boolean-->
                     <acc:Deleted>?</acc:Deleted>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:DocumentId>?</acc:DocumentId>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <!--type: UnitsType-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <!--type: TestCodeIdType-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <!--type: DescriptionType-->
                     <acc:Question>?</acc:Question>
                     <!--type: NoteType-->
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <!--type: NoteType-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <!--type: AuthorizationNumberType-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <!--type: NarrativeDiagTyp-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <!--type: positiveInteger-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Deleted>?</acc:Deleted>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:DocumentId>?</acc:DocumentId>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <!--type: string-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <!--type: QuestionType-->
                     <acc:QuestionId>?</acc:QuestionId>
                     <!--type: DescriptionType-->
                     <acc:Response>?</acc:Response>
                     <!--type: DescriptionType-->
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <!--type: PayorPriorityType-->
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <!--type: IdType-->
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <!--type: SSNType-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <!--type: DelayReasonCodeType-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <!--type: DescriptionType-->
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <!--type: DescriptionType-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <!--type: string-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <!--type: DescriptionType-->
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <!--type: DescriptionType-->
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <!--type: date-->
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <!--type: positiveInteger-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <!--type: DemonstrationProjectIdType-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <!--type: IdType-->
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <!--type: IdType-->
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <!--type: ClientProductType-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:MspForm>?</acc:MspForm>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="GetAccession" bindingOperationName="GetAccession" type="Request-Response" outputName="GetAccessionResponse" inputName="GetAccessionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="c10ef9b6-dc1d-4757-98e1-8c78f40cb89c"><con:settings/><con:call name="Request 1" wssPasswordType="PasswordDigest" id="b0b7100a-5acf-431b-9aa2-8468b58b1089"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accessionv7182/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:GetAccessionRequest>
         <msg:MessageHeader>
         <!--Optional:-->
           

            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>yli</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>qa07</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionId>QATESTER20160525104141568</acc:AccessionId>
         </acc:Payload>
      </acc:GetAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>clndoc</con:username><con:password>clndoc</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/GetAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="GetEPAccession" bindingOperationName="GetEPAccession" type="Request-Response" outputName="GetEPAccessionResponse" inputName="GetEPAccessionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6bd3eb6f-3701-470d-8839-2a9c75628e53"><con:settings/><con:call name="Request 1_AMS" wssPasswordType="PasswordDigest" id="f2353f50-e239-401b-bd43-6c60443ecda7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:GetEPAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>654</msg:SequenceNumber>
             <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:GetEPAccessionRequestMessage>
               <acc:AccessionId>100001540044</acc:AccessionId>
               <acc:CorrespondanceType>Client</acc:CorrespondanceType>
               <!--Optional:-->
               <acc:IncludeAccessionDetails>true</acc:IncludeAccessionDetails>
               <!--Optional:-->
               <acc:IncludeLimitedCoveragePolicyDetails>false</acc:IncludeLimitedCoveragePolicyDetails>
            </acc:GetEPAccessionRequestMessage>
         </acc:Payload>
      </acc:GetEPAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>${#Project#Username}</con:username><con:password>webservicetest</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/GetEPAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 2" id="5457be7a-25f9-4401-a532-3882e79d2243"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:GetEPAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:GetEPAccessionRequestMessage>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:CorrespondanceType>?</acc:CorrespondanceType>
               <!--Optional:-->
               <acc:IncludeAccessionDetails>false</acc:IncludeAccessionDetails>
               <!--Optional:-->
               <acc:IncludeLimitedCoveragePolicyDetails>false</acc:IncludeLimitedCoveragePolicyDetails>
            </acc:GetEPAccessionRequestMessage>
         </acc:Payload>
      </acc:GetEPAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/GetEPAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 1_Clndoc" wssPasswordType="PasswordDigest" id="783b16ed-07d0-4dfd-9259-ad8445a26b93"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:GetEPAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>654</msg:SequenceNumber>
             <msg:UserId>yli</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>clndoc</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:GetEPAccessionRequestMessage>
               <acc:AccessionId>2014104855</acc:AccessionId>
               <acc:CorrespondanceType>Client</acc:CorrespondanceType>
               <!--Optional:-->
               <acc:IncludeAccessionDetails>true</acc:IncludeAccessionDetails>
               <!--Optional:-->
               <acc:IncludeLimitedCoveragePolicyDetails>false</acc:IncludeLimitedCoveragePolicyDetails>
            </acc:GetEPAccessionRequestMessage>
         </acc:Payload>
      </acc:GetEPAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>clndoc</con:username><con:password>clndoc</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/GetEPAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="UpdateAccession" bindingOperationName="UpdateAccession" type="Request-Response" outputName="UpdateAccessionResponse" inputName="UpdateAccessionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="fb007903-ed30-401a-bac1-18676d3420de"><con:settings/><con:call name="Request 1" id="cc462d1b-cfed-4ecf-b092-06653222bd4e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="abn logic qa18" wssPasswordType="PasswordDigest" id="0b628b0f-70a4-4829-9986-01147436c507"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>qa18</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>1002</msg:SequenceNumber>
            <msg:UserId>rragimov</msg:UserId>
            <!--Optional:-->
            <!--Optional:-->
            <msg:OrgAlias>qa18</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>MQP99997</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:ReturnErrors>false</acc:ReturnErrors>
               <acc:DateOfService>2016-03-03</acc:DateOfService>
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>MARK</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>PASCUAL</typ:LastName>
                     </typ:Name>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>AETNA</acc:PayorId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>MARK</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>PASCUAL</typ:LastName>
                  </acc:InsuredName>
               </acc:InsuranceInfo>
               <acc:InsuranceInfo>
                  <acc:PayorPriority>2</acc:PayorPriority>
                  <acc:PayorId>P</acc:PayorId>
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>MARK</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>PASCUAL</typ:LastName>
                     <!--Optional:-->
                  </acc:InsuredName>
               </acc:InsuranceInfo>
               <!--Optional:-->
               <!--Optional:-->
               <!--Zero or more repetitions:-->
               <!--Optional:-->
               <acc:CheckClientBillingRules>true</acc:CheckClientBillingRules>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>clndoc</con:username><con:password>clndoc</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 3" id="b4ae32c6-6e19-49fa-800c-243fba6882e9"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:ReturnErrors>false</acc:ReturnErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                     <!--Optional:-->
                     <acc:DocumentId>?</acc:DocumentId>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
                  <!--Optional:-->
                  <acc:DocumentId>?</acc:DocumentId>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
               <!--Optional:-->
               <acc:MspForm>?</acc:MspForm>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 4" id="0ae83335-d31b-4f5f-b862-360e1d9a7f57"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:ReturnErrors>false</acc:ReturnErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                     <!--Optional:-->
                     <acc:DocumentId>?</acc:DocumentId>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
                  <!--Optional:-->
                  <acc:DocumentId>?</acc:DocumentId>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
               <!--Optional:-->
               <acc:MspForm>?</acc:MspForm>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 5" id="80b9849b-f06e-4681-bd11-8dddb266f9ad"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <!--type: positiveInteger-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <!--anonymous type-->
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <!--type: string-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <!--type: AccessionIdType-->
               <acc:AccessionId>?</acc:AccessionId>
               <!--type: boolean-->
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:ReturnErrors>false</acc:ReturnErrors>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <!--type: date-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <!--type: date-->
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <!--type: TimeOfService-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <!--type: date-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <!--type: date-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <!--type: IdType-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <!--type: NameIdType-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <!--type: date-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <!--type: SSNType-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <!--type: PatientFastingType-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <!--type: SmallInt-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <!--type: CommentsType-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <!--type: PatientStatusType-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <!--type: PatientIdType-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <!--type: PatientIdType-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <!--type: date-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <!--type: date-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <!--type: PhoneNumberType-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:UserId>?</acc:UserId>
                  <!--type: date-->
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <!--type: IdType-->
                  <acc:ClientId>?</acc:ClientId>
                  <!--type: DescriptionType-->
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <!--type: NameIdType-->
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <!--type: PhoneNumberType-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <!--type: PhoneNumberType-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <!--type: QuestionType-->
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <!--type: DescriptionType-->
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <!--type: string-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <!--type: DescriptionType-->
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <!--type: DescriptionType-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <!--type: string-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <!--type: positiveInteger-->
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <!--type: ShortStrType-->
                  <acc:TransactionType>?</acc:TransactionType>
                  <!--type: TestCodeIdType-->
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <!--type: TestNameType-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <!--type: IdType-->
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <!--type: NarrativeDiagTyp-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <!--type: date-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <!--type: NoteType-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <!--type: positiveInteger-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <!--type: boolean-->
                     <acc:Deleted>?</acc:Deleted>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:DocumentId>?</acc:DocumentId>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <!--type: UnitsType-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <!--type: TestCodeIdType-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <!--type: DescriptionType-->
                     <acc:Question>?</acc:Question>
                     <!--type: NoteType-->
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <!--type: NoteType-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <!--type: AuthorizationNumberType-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <!--type: NarrativeDiagTyp-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <!--type: positiveInteger-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Deleted>?</acc:Deleted>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:DocumentId>?</acc:DocumentId>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <!--type: string-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <!--type: QuestionType-->
                     <acc:QuestionId>?</acc:QuestionId>
                     <!--type: DescriptionType-->
                     <acc:Response>?</acc:Response>
                     <!--type: DescriptionType-->
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <!--type: PayorPriorityType-->
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <!--type: IdType-->
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <!--type: SSNType-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <!--type: DelayReasonCodeType-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <!--type: DescriptionType-->
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <!--type: DescriptionType-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <!--type: string-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <!--type: DescriptionType-->
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <!--type: DescriptionType-->
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <!--type: date-->
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <!--type: positiveInteger-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <!--type: DemonstrationProjectIdType-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <!--type: IdType-->
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <!--type: IdType-->
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <!--type: ClientProductType-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:MspForm>?</acc:MspForm>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2df43d0e-820d-412a-ab42-74f9eef1b7c0" name="Request 6"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <!--type: positiveInteger-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <!--anonymous type-->
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <!--type: string-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <!--type: AccessionIdType-->
               <acc:AccessionId>?</acc:AccessionId>
               <!--type: boolean-->
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:ReturnErrors>false</acc:ReturnErrors>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <!--type: date-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <!--type: date-->
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <!--type: TimeOfService-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <!--type: date-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <!--type: date-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <!--type: IdType-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <!--type: NameIdType-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <!--type: date-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <!--type: SSNType-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <!--type: PatientFastingType-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <!--type: SmallInt-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <!--type: CommentsType-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <!--type: PatientStatusType-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <!--type: PatientIdType-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <!--type: PatientIdType-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <!--type: date-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <!--type: date-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <!--type: PhoneNumberType-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:UserId>?</acc:UserId>
                  <!--type: date-->
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <!--type: IdType-->
                  <acc:ClientId>?</acc:ClientId>
                  <!--type: DescriptionType-->
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <!--type: NameIdType-->
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <!--type: PhoneNumberType-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <!--type: PhoneNumberType-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <!--type: QuestionType-->
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <!--type: DescriptionType-->
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <!--type: string-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <!--type: DescriptionType-->
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <!--type: DescriptionType-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <!--type: string-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <!--type: positiveInteger-->
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <!--type: ShortStrType-->
                  <acc:TransactionType>?</acc:TransactionType>
                  <!--type: TestCodeIdType-->
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <!--type: TestNameType-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <!--type: IdType-->
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <!--type: NarrativeDiagTyp-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <!--type: date-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <!--type: NoteType-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <!--type: positiveInteger-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <!--type: boolean-->
                     <acc:Deleted>?</acc:Deleted>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:DocumentId>?</acc:DocumentId>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:VoidType>?</acc:VoidType>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <!--type: UnitsType-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <!--type: TestCodeIdType-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <!--type: DescriptionType-->
                     <acc:Question>?</acc:Question>
                     <!--type: NoteType-->
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <!--type: NoteType-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <!--type: AuthorizationNumberType-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <!--type: RenalType-->
                  <acc:Renal>?</acc:Renal>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <!--type: NarrativeDiagTyp-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <!--type: positiveInteger-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Deleted>?</acc:Deleted>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:DocumentId>?</acc:DocumentId>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:VoidType>?</acc:VoidType>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <!--type: string-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <!--type: QuestionType-->
                     <acc:QuestionId>?</acc:QuestionId>
                     <!--type: DescriptionType-->
                     <acc:Response>?</acc:Response>
                     <!--type: DescriptionType-->
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <!--type: PayorPriorityType-->
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <!--type: IdType-->
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region>?</typ:Region>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <!--type: SSNType-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <!--type: DelayReasonCodeType-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <!--type: DescriptionType-->
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region>?</typ:Region>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <!--type: DescriptionType-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <!--type: string-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <!--type: DescriptionType-->
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <!--type: DescriptionType-->
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <!--type: date-->
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <!--type: positiveInteger-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <!--type: DemonstrationProjectIdType-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <!--type: IdType-->
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <!--type: IdType-->
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <!--type: ClientProductType-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:MspForm>?</acc:MspForm>
               <!--Optional:-->
               <!--type: NoteType-->
               <acc:ForceToEPHoldQueueNote>?</acc:ForceToEPHoldQueueNote>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:ClientBillingCategory>?</acc:ClientBillingCategory>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="UpdateEPAccession" bindingOperationName="UpdateEPAccession" type="One-Way" inputName="UpdateEPAccessionRequest" sendsAttachments="false" anonymous="optional" id="74384e18-1306-4ffb-8d9f-1f4bd0b6d84b"><con:settings/><con:call name="FixAccnProcErr" wssPasswordType="PasswordDigest" id="4cce994d-bcc3-4567-b75d-ecfd2c44af97"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateEPAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>888999000</msg:SequenceNumber>
            <msg:UserId>yli</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>clndoc</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>A201108250203060</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>2011-08-25</acc:DateOfService>
               <!--Optional:-->
               <acc:AdmitDate>2011-08-25</acc:AdmitDate>

            </acc:UpdateAccession>
            <!--Zero or more repetitions:-->
            <acc:ManualErrorFixes>
               <acc:ReasonCode>PROCAUTH</acc:ReasonCode>
               <acc:ErrorType>PROCEDURE</acc:ErrorType>
               <!--You have a CHOICE of the next 3 items at this level-->
               <!--Optional:-->
               <!--Optional:-->
               <acc:AccessionProcedureErrorReference>
                  <acc:procedureId>82465</acc:procedureId>
               </acc:AccessionProcedureErrorReference>
               <!--Optional:-->
               <acc:FixNote>yli test</acc:FixNote>
            </acc:ManualErrorFixes>
         </acc:Payload>
      </acc:UpdateEPAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>clndoc</con:username><con:password>clndoc</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateEPAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 2" id="603aed5c-cedf-4460-b764-86feeae169b8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateEPAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  
                  <!--Optional:-->
                  <acc:Person>
                     
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
               </acc:Person>
      
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
            </acc:UpdateAccession>
            <!--Zero or more repetitions:-->
            <acc:ManualErrorFixes>
               <acc:ReasonCode>?</acc:ReasonCode>
               <acc:ErrorType>?</acc:ErrorType>
               <!--You have a CHOICE of the next 3 items at this level-->
               <!--Optional:-->
               <acc:AccessionPayorErrorReference>
                  <!--Optional:-->
                  <acc:payorPriority>?</acc:payorPriority>
               </acc:AccessionPayorErrorReference>
               <!--Optional:-->
               <acc:AccessionProcedureErrorReference>
                  <acc:procedureId>?</acc:procedureId>
               </acc:AccessionProcedureErrorReference>
               <!--Optional:-->
               <acc:AccessionTestErrorReference>
                  <acc:testId>?</acc:testId>
               </acc:AccessionTestErrorReference>
               <!--Optional:-->
               <acc:FixNote>?</acc:FixNote>
            </acc:ManualErrorFixes>
         </acc:Payload>
      </acc:UpdateEPAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateEPAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="FixAccnPyrErr" wssPasswordType="PasswordDigest" id="ff1e4e18-f604-42cc-a46c-d1fd90643b66"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateEPAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>888999000</msg:SequenceNumber>
            <msg:UserId>yli</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>clndoc</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>A2011122502030224</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>2011-12-25</acc:DateOfService>
               <!--Optional:-->
               <acc:AdmitDate>2011-12-25</acc:AdmitDate>

            </acc:UpdateAccession>
            <!--Zero or more repetitions:-->
            <acc:ManualErrorFixes>
               <acc:ReasonCode>PLANNAME</acc:ReasonCode>
               <acc:ErrorType>PROCEDURE</acc:ErrorType>
               <!--You have a CHOICE of the next 3 items at this level-->
               <!--Optional:-->
               <!--Optional:-->
               <acc:AccessionPayorErrorReference>
                  <!--Optional:-->
                  <acc:payorPriority>?</acc:payorPriority>
               </acc:AccessionPayorErrorReference>
               <!--Optional:-->
               <acc:FixNote>yli test</acc:FixNote>
            </acc:ManualErrorFixes>
         </acc:Payload>
      </acc:UpdateEPAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>clndoc</con:username><con:password>clndoc</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateEPAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 4" id="37d7dbe3-fe81-4674-8f0e-bf719764a825"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateEPAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
            </acc:UpdateAccession>
            <!--Zero or more repetitions:-->
            <acc:ManualErrorFixes>
               <acc:ReasonCode>?</acc:ReasonCode>
               <acc:ErrorType>?</acc:ErrorType>
               <!--You have a CHOICE of the next 3 items at this level-->
               <!--Optional:-->
               <acc:AccessionPayorErrorReference>
                  <!--Optional:-->
                  <acc:payorPriority>?</acc:payorPriority>
               </acc:AccessionPayorErrorReference>
               <!--Optional:-->
               <acc:AccessionProcedureErrorReference>
                  <acc:procedureId>?</acc:procedureId>
               </acc:AccessionProcedureErrorReference>
               <!--Optional:-->
               <acc:AccessionTestErrorReference>
                  <acc:testId>?</acc:testId>
               </acc:AccessionTestErrorReference>
               <!--Optional:-->
               <acc:FixNote>?</acc:FixNote>
            </acc:ManualErrorFixes>
         </acc:Payload>
      </acc:UpdateEPAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateEPAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="ValidateAccession" bindingOperationName="ValidateAccession" type="Request-Response" outputName="ValidateAccessionResponse" inputName="ValidateAccessionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4957ab7e-ad4c-4100-b20a-47a3fb4b7d4a"><con:settings/><con:call name="Request 1" id="387be664-aeca-45de-9546-2e43646b9282"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:ValidateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:ValidateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
            </acc:ValidateAccession>
         </acc:Payload>
      </acc:ValidateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/ValidateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 2" wssPasswordType="" id="e5d33816-e15b-4a2e-8845-bc3031c60f22"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:ValidateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>yli</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>clndoc</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:ValidateAccession>
               <acc:AccessionId>QATESTER20141205122635816</acc:AccessionId>
               <acc:IgnoreErrors>false</acc:IgnoreErrors>
               <acc:DateOfService>2014-12-05</acc:DateOfService>
            </acc:ValidateAccession>
         </acc:Payload>
      </acc:ValidateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/ValidateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 3" id="cb1ac46e-cf2c-4a6a-81cb-887fee5aaf7c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:ValidateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:ValidateAccession>
               <acc:AccessionId>?</acc:AccessionId>
               <acc:IgnoreErrors>?</acc:IgnoreErrors>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:ReceiptDate>?</acc:ReceiptDate>
               <acc:DateOfService>?</acc:DateOfService>
               <!--Optional:-->
               <acc:TimeOfService>?</acc:TimeOfService>
               <!--Optional:-->
               <acc:AdmitDate>?</acc:AdmitDate>
               <!--Optional:-->
               <acc:DischargeDate>?</acc:DischargeDate>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <acc:PatientId>?</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>?</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>?</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>?</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>?</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>?</typ:Gender>
                     <!--Optional:-->
                     <typ:SSN>?</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <acc:PatientType>?</acc:PatientType>
                  <!--Optional:-->
                  <acc:Fasting>?</acc:Fasting>
                  <!--Optional:-->
                  <acc:PatientLocation>?</acc:PatientLocation>
                  <!--Optional:-->
                  <acc:IndigentPercent>?</acc:IndigentPercent>
                  <!--Optional:-->
                  <acc:OnsetDate>?</acc:OnsetDate>
                  <!--Optional:-->
                  <acc:OnsetType>?</acc:OnsetType>
                  <!--Optional:-->
                  <acc:AdmissionSource>?</acc:AdmissionSource>
                  <!--Optional:-->
                  <acc:AdmissionType>?</acc:AdmissionType>
                  <!--Optional:-->
                  <acc:AccidentCause>?</acc:AccidentCause>
                  <!--Optional:-->
                  <acc:AccidentState>?</acc:AccidentState>
                  <!--Optional:-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <acc:GravidaNumber>?</acc:GravidaNumber>
                  <!--Optional:-->
                  <acc:Pregnancy>?</acc:Pregnancy>
                  <!--Optional:-->
                  <acc:MaritalStatus>?</acc:MaritalStatus>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:PatientStatusType>?</acc:PatientStatusType>
                  <!--Optional:-->
                  <acc:ClientSpecificPatientId>?</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <acc:FacilitySpecificPatientId>?</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:PatientDemoEffectiveDate>?</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <acc:FinalReportedDate>?</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <acc:PatientSignatureOnFile>?</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <acc:PhysicianSignatureOnFile>?</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <acc:ReportCopyToPatient>?</acc:ReportCopyToPatient>
               <!--Optional:-->
               <acc:CallBack>?</acc:CallBack>
               <!--Optional:-->
               <acc:CallBackPhone>?</acc:CallBackPhone>
               <!--Optional:-->
               <acc:STAT>?</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <acc:ContactDate>?</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>?</acc:ContactInfo>
                  <!--Optional:-->
                  <acc:FollowUpDate>?</acc:FollowUpDate>
                  <!--Optional:-->
                  <acc:FollowUpUserId>?</acc:FollowUpUserId>
                  <!--Optional:-->
                  <acc:PrintableNotes>?</acc:PrintableNotes>
                  <!--Optional:-->
                  <acc:PrintOnStatement>?</acc:PrintOnStatement>
                  <!--Optional:-->
                  <acc:FollowUpComplete>?</acc:FollowUpComplete>
                  <!--Optional:-->
                  <acc:Voided>?</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <acc:ClientId>?</acc:ClientId>
                  <acc:ContactMethodType>?</acc:ContactMethodType>
                  <acc:Name>?</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>?</acc:Phone>
                  <!--Optional:-->
                  <acc:Fax>?</acc:Fax>
                  <!--Optional:-->
                  <acc:Email>?</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <acc:Question>?</acc:Question>
                  <!--Optional:-->
                  <acc:Response>?</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <acc:TrialName>?</acc:TrialName>
                  <!--Optional:-->
                  <acc:EncounterName>?</acc:EncounterName>
                  <!--Optional:-->
                  <acc:EncounterDate>?</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <acc:MroName>?</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <typ:ContactName>?</typ:ContactName>
                     <!--Optional:-->
                     <typ:Phone>?</typ:Phone>
                     <!--Optional:-->
                     <typ:Fax>?</typ:Fax>
                     <!--Optional:-->
                     <typ:Email>?</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <acc:ChainOfCustodyReasonType>?</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <acc:SpecimenTemp>?</acc:SpecimenTemp>
                  <!--Optional:-->
                  <acc:SplitSpecimenCollection>?</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <acc:SpecimenCollector>?</acc:SpecimenCollector>
                  <!--Optional:-->
                  <acc:SpecimenCollectorSignatureOnFile>?</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureInRange>?</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <acc:SpecimenTemperatureNotInRange>?</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <acc:DialysisType>?</acc:DialysisType>
                  <!--Optional:-->
                  <acc:Medication>?</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>?</acc:TestSequenceNumber>
                  <acc:TransactionType>?</acc:TransactionType>
                  <acc:TestId>?</acc:TestId>
                  <!--Optional:-->
                  <acc:AlternativeTestName>?</acc:AlternativeTestName>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <acc:Mod1>?</acc:Mod1>
                     <!--Optional:-->
                     <acc:Mod2>?</acc:Mod2>
                     <!--Optional:-->
                     <acc:Mod3>?</acc:Mod3>
                     <!--Optional:-->
                     <acc:Mod4>?</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <acc:ManualPrice>?</acc:ManualPrice>
                  <!--Optional:-->
                  <acc:ClientBilled>?</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <acc:Code>?</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <acc:DiagnosisCode>?</acc:DiagnosisCode>
                     <!--Optional:-->
                     <acc:NarrativeDiag>?</acc:NarrativeDiag>
                     <!--Optional:-->
                     <acc:UserId>?</acc:UserId>
                     <!--Optional:-->
                     <acc:ClientContact>?</acc:ClientContact>
                     <!--Optional:-->
                     <acc:ClientContactDate>?</acc:ClientContactDate>
                     <!--Optional:-->
                     <acc:Comment>?</acc:Comment>
                     <!--Optional:-->
                     <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <acc:Deleted>?</acc:Deleted>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <acc:Note>?</acc:Note>
                  <!--Optional:-->
                  <acc:PlaceOfService>?</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>?</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <acc:NPI>?</acc:NPI>
                     <!--Optional:-->
                     <acc:Name>?</acc:Name>
                     <!--Optional:-->
                     <acc:UPIN>?</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <acc:StandingOrderId>?</acc:StandingOrderId>
                  <!--Optional:-->
                  <acc:AbnReceived>?</acc:AbnReceived>
                  <!--Optional:-->
                  <acc:AbnReason>?</acc:AbnReason>
                  <!--Optional:-->
                  <acc:AbnComment>?</acc:AbnComment>
                  <!--Optional:-->
                  <acc:Units>?</acc:Units>
                  <!--Optional:-->
                  <acc:ProfileId>?</acc:ProfileId>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <acc:Question>?</acc:Question>
                     <acc:Response>?</acc:Response>
                     <!--Optional:-->
                     <acc:ContactMethod>?</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <acc:Result>?</acc:Result>
                  <!--Optional:-->
                  <acc:SplitPayorId>?</acc:SplitPayorId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <acc:RoundTripFromLab>?</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <acc:TripMiles>?</acc:TripMiles>
                  <!--Optional:-->
                  <acc:TripStops>?</acc:TripStops>
                  <!--Optional:-->
                  <acc:TripPatientCount>?</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>?</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:NarrativeDiag>?</acc:NarrativeDiag>
                  <!--Optional:-->
                  <acc:UserId>?</acc:UserId>
                  <!--Optional:-->
                  <acc:ClientContact>?</acc:ClientContact>
                  <!--Optional:-->
                  <acc:ClientContactDate>?</acc:ClientContactDate>
                  <!--Optional:-->
                  <acc:Comment>?</acc:Comment>
                  <!--Optional:-->
                  <acc:DiagnosisCodeOrder>?</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <acc:Deleted>?</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PhlebotomistUserId>?</acc:PhlebotomistUserId>
               <!--Optional:-->
               <acc:PscLocationId>?</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <acc:Count>?</acc:Count>
                  <!--Optional:-->
                  <acc:SpecimenContainerCode>?</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <acc:SpecimenSourceDescription>?</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <acc:SpecimenTempType>?</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>?</acc:QuestionId>
                     <acc:Response>?</acc:Response>
                     <acc:SpecimenType>?</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>?</acc:PayorPriority>
                  <acc:PayorId>?</acc:PayorId>
                  <!--Optional:-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <acc:SubscriberId>?</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:DateOfBirth>?</acc:DateOfBirth>
                  <!--Optional:-->
                  <acc:Gender>?</acc:Gender>
                  <!--Optional:-->
                  <acc:InsuredRelationship>?</acc:InsuredRelationship>
                  <!--Optional:-->
                  <acc:GroupId>?</acc:GroupId>
                  <!--Optional:-->
                  <acc:PlanId>?</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <typ:FirstName>?</typ:FirstName>
                     <!--Optional:-->
                     <typ:LastName>?</typ:LastName>
                     <!--Optional:-->
                     <typ:MiddleName>?</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <typ:AddressLine1>?</typ:AddressLine1>
                     <!--Optional:-->
                     <typ:AddressLine2>?</typ:AddressLine2>
                     <!--Optional:-->
                     <typ:City>?</typ:City>
                     <!--Optional:-->
                     <typ:State>?</typ:State>
                     <!--Optional:-->
                     <typ:ZIP>?</typ:ZIP>
                     <!--Optional:-->
                     <typ:CountryCode>?</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <typ:HomePhone>?</typ:HomePhone>
                     <!--Optional:-->
                     <typ:WorkPhone>?</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <acc:InsuredSSN>?</acc:InsuredSSN>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>?</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <acc:ClaimNotes>?</acc:ClaimNotes>
                  <!--Optional:-->
                  <acc:Comments>?</acc:Comments>
                  <!--Optional:-->
                  <acc:OtherInfo1>?</acc:OtherInfo1>
                  <!--Optional:-->
                  <acc:OtherInfo2>?</acc:OtherInfo2>
                  <!--Optional:-->
                  <acc:OtherInfo3>?</acc:OtherInfo3>
                  <!--Optional:-->
                  <acc:OtherInfo4>?</acc:OtherInfo4>
                  <!--Optional:-->
                  <acc:GroupName>?</acc:GroupName>
                  <!--Optional:-->
                  <acc:CaseId>?</acc:CaseId>
                  <!--Optional:-->
                  <acc:DelayReasonCode>?</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <acc:EmployerName>?</acc:EmployerName>
                     <!--Optional:-->
                     <acc:EmployerId>?</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>?</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>?</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:City>?</typ:City>
                        <!--Optional:-->
                        <typ:State>?</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>?</typ:ZIP>
                        <!--Optional:-->
                        <typ:CountryCode>?</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <acc:Status>?</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <typ:ContactName>?</typ:ContactName>
                        <!--Optional:-->
                        <typ:Phone>?</typ:Phone>
                        <!--Optional:-->
                        <typ:Fax>?</typ:Fax>
                        <!--Optional:-->
                        <typ:Email>?</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>?</acc:EligibilityStatus>
                     <acc:EligibilityService>?</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>?</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>?</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <acc:DemonstrationProjectId>?</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>?</acc:OccurrenceCode>
                  <!--Optional:-->
                  <acc:OccurrenceDate>?</acc:OccurrenceDate>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <acc:ValueCode>?</acc:ValueCode>
                  <!--Optional:-->
                  <acc:ValueAmt>?</acc:ValueAmt>
                  <!--Optional:-->
                  <acc:SpecificPyrId>?</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <acc:CheckClientBillingRules>?</acc:CheckClientBillingRules>
               <!--Optional:-->
               <acc:ClientProductId>?</acc:ClientProductId>
               <!--Optional:-->
               <acc:NoCharge>?</acc:NoCharge>
               <!--Optional:-->
               <acc:PaidInFull>?</acc:PaidInFull>
               <!--Optional:-->
               <acc:CreateOrUpdatePatientDemo>?</acc:CreateOrUpdatePatientDemo>
            </acc:ValidateAccession>
         </acc:Payload>
      </acc:ValidateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/ValidateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="ApplyEligibilityLogic" bindingOperationName="ApplyEligibilityLogic" type="Request-Response" outputName="ApplyEligibilityLogicResponse" inputName="ApplyEligibilityLogicRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ec5d32a3-443c-4bbe-8027-2bf001ac671b"><con:settings/><con:call name="Request 1" id="dbe10e7c-bb43-4e57-bedf-f96b91302714"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:ApplyEligibilityLogicRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <!--type: positiveInteger-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <!--anonymous type-->
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <!--type: string-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:ApplyEligibilityLogicRequestMessage>
               <!--type: AccessionIdType-->
               <acc:AccessionId>?</acc:AccessionId>
            </acc:ApplyEligibilityLogicRequestMessage>
         </acc:Payload>
      </acc:ApplyEligibilityLogicRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/ApplyEligibilityLogicRequest"/></con:call></con:operation><con:operation id="1f787ced-a1a0-4801-b051-fcbc706c4611" isOneWay="false" action="" name="CreateAccessionAdjustment" bindingOperationName="CreateAccessionAdjustment" type="Request-Response" outputName="CreateAccessionAdjustmentResponse" inputName="CreateAccessionAdjustmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7edd3f06-1542-4e1b-b3b6-271c5a744929" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionAdjustmentRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <!--type: positiveInteger-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <!--anonymous type-->
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <!--type: string-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccessionAdjustment>
               <!--type: AccessionIdType-->
               <acc:AccessionId>?</acc:AccessionId>
               <!--type: AdjustmentCodeType-->
               <acc:AdjustmentCodeId>?</acc:AdjustmentCodeId>
               <!--type: AmountType-->
               <acc:AdustmentAmount>?</acc:AdustmentAmount>
               <!--type: AbbrevType-->
               <acc:AdjustmentPyrAbbrev>?</acc:AdjustmentPyrAbbrev>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:SubscriberId>?</acc:SubscriberId>
               <!--Optional:-->
               <!--type: NoteType-->
               <acc:AdjustmentNote>?</acc:AdjustmentNote>
               <!--type: boolean-->
               <acc:AdjustmentPrintNote>false</acc:AdjustmentPrintNote>
            </acc:CreateAccessionAdjustment>
         </acc:Payload>
      </acc:CreateAccessionAdjustmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionAdjustmentRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="accessionSearchSoap11" type="wsdl" bindingName="{http://www.xifin.com/schema/accessionSearch}accessionSearchSoap11" soapVersion="1_1" anonymous="optional" definition="https://www.xifinqa.com/prod/accessionv7185/accessionSearch.wsdl" id="48f8c58b-a062-49f1-a043-92f18480cd5a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.xifinqa.com/prod/accessionv7185/accessionSearch.wsdl"><con:part><con:url>https://www.xifinqa.com/prod/accessionv7185/accessionSearch.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.xifin.com/schema/accessionSearch" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://www.xifin.com/schema/accessionSearch" xmlns:sch1="http://www.xifin.com/schema/types" xmlns:sch2="http://www.xifin.com/schema/msgHeader" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.xifin.com/schema/accessionSearch">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/accessionSearch" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/accessionSearch" xmlns:msgHeader="http://www.xifin.com/schema/msgHeader" xmlns:types="http://www.xifin.com/schema/types">
      <xs:import namespace="http://www.xifin.com/schema/types"/>
      <xs:import namespace="http://www.xifin.com/schema/msgHeader"/>
      <xs:element name="AccessionSearchRequest">
        <xs:annotation>
          <xs:documentation>Accession Search Request Message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element ref="AccessionSearchRequestMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AccessionSearchResponse">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="Status" type="types:StatusType"/>
                  <xs:element minOccurs="0" name="TotalPatientDueAmount" type="types:AmountType"/>
                  <xs:element minOccurs="0" name="TotalBalanceDueAmount" type="types:AmountType"/>
                  <xs:element maxOccurs="unbounded" minOccurs="0" ref="AccessionSearchResponseMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AccessionSearchRequestMessage">
        <xs:annotation>
          <xs:documentation>By default response will contain maximum of 100 records, if more than one records need to
                be retrieved
                send the start and end row numbers.
                The data will returned between start and end record row numbers.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="AccessionId" type="xs:string"/>
            <xs:element default="true" minOccurs="0" name="AccessionWithAtleastOnePayor" type="xs:boolean"/>
            <xs:element minOccurs="0" name="RequisitionId" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="PatientId" type="types:NameIdType"/>
            <xs:element minOccurs="0" name="ClientId" type="types:IdType"/>
            <xs:element minOccurs="0" name="ClientName" type="xs:string"/>
            <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
            <xs:element minOccurs="0" name="PatientSSN" type="xs:string"/>
            <xs:element minOccurs="0" name="PatientDOB" type="xs:date"/>
            <xs:element minOccurs="0" name="PayorId" type="types:PayorIdType"/>
            <xs:element minOccurs="0" name="PayorName" type="xs:string"/>
            <xs:element minOccurs="0" name="SubscriberId" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="PatientAddress" type="types:AddressType"/>
            <xs:element minOccurs="0" name="InsuredName" type="types:NameType"/>
            <xs:element minOccurs="0" name="QuestionId" type="xs:int"/>
            <xs:element minOccurs="0" name="QuestionResponse" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="DosFrom" type="xs:date"/>
            <xs:element minOccurs="0" name="DosTo" type="xs:date"/>
            <xs:element default="true" minOccurs="0" name="DisplayPrimaryOnly" type="xs:boolean"/>
            <xs:element minOccurs="0" name="SortByPatientLastName" type="xs:boolean"/>
            <xs:element default="1" minOccurs="0" name="StartRowNumber" type="xs:integer"/>
            <xs:element default="100" minOccurs="0" name="EndRowNumber" type="xs:integer"/>
            <xs:element minOccurs="0" name="SubmissionId" type="xs:string"/>
            <xs:element minOccurs="0" name="ClientPrimaryFacilityId" type="types:IdType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AccessionSearchResponseMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RowId" type="xs:int"/>
            <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
            <xs:element minOccurs="0" name="PatientId" type="types:NameIdType"/>
            <xs:element minOccurs="0" name="AccessionId" type="types:AccessionIdType"/>
            <xs:element minOccurs="0" name="ClientId" type="types:IdType"/>
            <xs:element minOccurs="0" name="RequisitionId" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="Dos" type="xs:date"/>
            <xs:element minOccurs="0" name="BalanceDueAmount" type="types:AmountType"/>
            <xs:element minOccurs="0" name="PatientDueAmount" type="types:AmountType"/>
            <xs:element minOccurs="0" name="PatientSSN" type="types:SSNType"/>
            <xs:element minOccurs="0" name="PatientDOB" type="xs:date"/>
            <xs:element minOccurs="0" name="PatientAddress" type="types:AddressType"/>
            <xs:element minOccurs="0" name="AccessionStatus" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="AccessionStatementStatus" type="types:DescriptionType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="InsuranceInfo"/>
            <xs:element minOccurs="0" name="ClientSpecificPatientInfo" type="SpecificPatientInfo"/>
            <xs:element minOccurs="0" name="FacilitySpecificPatientInfo" type="SpecificPatientInfo"/>
            <xs:element minOccurs="0" name="MspForm" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="InsuranceInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="PayorName" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="SubscriberId" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="InsuredName" type="types:NameType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SpecificPatientInfo">
        <xs:sequence>
          <xs:element name="SourceType" type="types:SourceType"/>
          <xs:element name="SourceId" type="types:IdType"/>
          <xs:element name="SourceName" type="types:NameIdType"/>
          <xs:element name="PatientId" type="types:PatientIdType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/types">
      <xs:complexType name="AddressType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressLine1">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine2">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="City">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="State">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Region">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ZIP">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountryCode">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CardTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelayReasonCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmtType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="12"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccessionIdType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(([A-Za-z0-9][A-Za-z0-9-]*)|^)[A-Za-z0-9]"/>
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StatusType">
        <xs:sequence>
          <xs:element name="StatusCode" type="StatusCodeType"/>
          <xs:element minOccurs="0" name="StatusMessage" type="StatusMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusCodeType">
        <xs:restriction base="xs:integer">
          <xs:maxExclusive value="9999"/>
          <xs:minExclusive value="-9999"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatusMessageType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PhoneType">
        <xs:sequence>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="NPIType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SSNType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="9"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MSPTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TestNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EmailAddressType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[^@]+@[^\.]+\..+"/>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LongDescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="FirstName" type="NameIdType"/>
          <xs:element minOccurs="0" name="LastName" type="NameIdType"/>
          <xs:element minOccurs="0" name="MiddleName" type="NameIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UnitsType">
        <xs:restriction base="xs:integer">
          <xs:totalDigits value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NarrativeDiagTyp">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProcedureNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientProductType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommentsType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PersonType">
        <xs:sequence>
          <xs:element name="Name" type="NameType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="DescriptionType"/>
          <xs:element minOccurs="0" name="SSN" type="SSNType"/>
          <xs:element minOccurs="0" name="Address" type="AddressType"/>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Contact">
        <xs:sequence>
          <xs:element minOccurs="0" name="ContactName" type="DescriptionType"/>
          <xs:element minOccurs="0" name="Phone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Fax" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UserIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeOfService">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:int">
          <xs:totalDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AbbrevType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmountType">
        <xs:restriction base="xs:decimal">
          <xs:totalDigits value="12"/>
          <xs:fractionDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethodType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientStatusType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ShortStrType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SmallInt">
        <xs:restriction base="xs:integer">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorizationNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EpiType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DemonstrationProjectIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/msgHeader" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/msgHeader">
      <xs:element name="MessageHeader">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="OrganizationName" type="xs:string"/>
            <xs:element minOccurs="0" name="SequenceNumber" type="xs:positiveInteger"/>
            <xs:element name="UserId">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="20"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="SourceApplication" type="xs:string">
              <xs:annotation>
                <xs:documentation>Name of the source application</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="OrgAlias" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="AccessionSearchRequest">
    <wsdl:part element="tns:AccessionSearchRequest" name="AccessionSearchRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AccessionSearchResponse">
    <wsdl:part element="tns:AccessionSearchResponse" name="AccessionSearchResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="accessionSearch">
    <wsdl:operation name="AccessionSearch">
      <wsdl:input message="tns:AccessionSearchRequest" name="AccessionSearchRequest"></wsdl:input>
      <wsdl:output message="tns:AccessionSearchResponse" name="AccessionSearchResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="accessionSearchSoap11" type="tns:accessionSearch">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="AccessionSearch">
      <soap:operation soapAction=""/>
      <wsdl:input name="AccessionSearchRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AccessionSearchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="accessionSearchService">
    <wsdl:port binding="tns:accessionSearchSoap11" name="accessionSearchSoap11">
      <soap:address location="https://www.xifinqa.com/prod/accession/services"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://xapp-10:8080/accession/services</con:endpoint><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="AccessionSearch" bindingOperationName="AccessionSearch" type="Request-Response" outputName="AccessionSearchResponse" inputName="AccessionSearchRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="23ab2a87-4b60-402e-b6af-203f504975de"><con:settings/><con:call name="Request 1" id="15f3bf5c-c612-4dac-ac36-483bcd7227a6"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accessionSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:AccessionSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionSearchRequestMessage>
               <!--Optional:-->
               <acc:AccessionId>?</acc:AccessionId>
               <!--Optional:-->
               <acc:AccessionWithAtleastOnePayor>true</acc:AccessionWithAtleastOnePayor>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:PatientId>?</acc:PatientId>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:ClientName>?</acc:ClientName>
               <!--Optional:-->
               <acc:PatientName>
                  <!--Optional:-->
                  <typ:FirstName>?</typ:FirstName>
                  <!--Optional:-->
                  <typ:LastName>?</typ:LastName>
                  <!--Optional:-->
                  <typ:MiddleName>?</typ:MiddleName>
               </acc:PatientName>
               <!--Optional:-->
               <acc:PatientSSN>?</acc:PatientSSN>
               <!--Optional:-->
               <acc:PatientDOB>?</acc:PatientDOB>
               <!--Optional:-->
               <acc:PayorId>?</acc:PayorId>
               <!--Optional:-->
               <acc:PayorName>?</acc:PayorName>
               <!--Optional:-->
               <acc:SubscriberId>?</acc:SubscriberId>
               <!--Optional:-->
               <acc:PatientAddress>
                  <!--Optional:-->
                  <typ:AddressLine1>?</typ:AddressLine1>
                  <!--Optional:-->
                  <typ:AddressLine2>?</typ:AddressLine2>
                  <!--Optional:-->
                  <typ:City>?</typ:City>
                  <!--Optional:-->
                  <typ:State>?</typ:State>
                  <!--Optional:-->
                  <typ:ZIP>?</typ:ZIP>
                  <!--Optional:-->
                  <typ:CountryCode>?</typ:CountryCode>
               </acc:PatientAddress>
               <!--Optional:-->
               <acc:InsuredName>
                  <!--Optional:-->
                  <typ:FirstName>?</typ:FirstName>
                  <!--Optional:-->
                  <typ:LastName>?</typ:LastName>
                  <!--Optional:-->
                  <typ:MiddleName>?</typ:MiddleName>
               </acc:InsuredName>
               <!--Optional:-->
               <acc:QuestionId>?</acc:QuestionId>
               <!--Optional:-->
               <acc:QuestionResponse>?</acc:QuestionResponse>
               <!--Optional:-->
               <acc:DosFrom>?</acc:DosFrom>
               <!--Optional:-->
               <acc:DosTo>?</acc:DosTo>
               <!--Optional:-->
               <acc:DisplayPrimaryOnly>true</acc:DisplayPrimaryOnly>
               <!--Optional:-->
               <acc:SortByPatientLastName>?</acc:SortByPatientLastName>
               <!--Optional:-->
               <acc:StartRowNumber>1</acc:StartRowNumber>
               <!--Optional:-->
               <acc:EndRowNumber>100</acc:EndRowNumber>
               <!--Optional:-->
               <acc:SubmissionId>?</acc:SubmissionId>
               <!--Optional:-->
               <acc:ClientPrimaryFacilityId>?</acc:ClientPrimaryFacilityId>
            </acc:AccessionSearchRequestMessage>
         </acc:Payload>
      </acc:AccessionSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accessionSearch/accessionSearch/AccessionSearchRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 2" id="332ad64b-c261-446a-8c1e-cc314ef03966"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accessionSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:AccessionSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionSearchRequestMessage>
               <!--Optional:-->
               <acc:AccessionId>?</acc:AccessionId>
               <!--Optional:-->
               <acc:AccessionWithAtleastOnePayor>true</acc:AccessionWithAtleastOnePayor>
               <!--Optional:-->
               <acc:RequisitionId>?</acc:RequisitionId>
               <!--Optional:-->
               <acc:PatientId>?</acc:PatientId>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:ClientName>?</acc:ClientName>
               <!--Optional:-->
               <acc:PatientName>
                  <!--Optional:-->
                  <typ:FirstName>?</typ:FirstName>
                  <!--Optional:-->
                  <typ:LastName>?</typ:LastName>
                  <!--Optional:-->
                  <typ:MiddleName>?</typ:MiddleName>
               </acc:PatientName>
               <!--Optional:-->
               <acc:PatientSSN>?</acc:PatientSSN>
               <!--Optional:-->
               <acc:PatientDOB>?</acc:PatientDOB>
               <!--Optional:-->
               <acc:PayorId>?</acc:PayorId>
               <!--Optional:-->
               <acc:PayorName>?</acc:PayorName>
               <!--Optional:-->
               <acc:SubscriberId>?</acc:SubscriberId>
               <!--Optional:-->
               <acc:PatientAddress>
                  <!--Optional:-->
                  <typ:AddressLine1>?</typ:AddressLine1>
                  <!--Optional:-->
                  <typ:AddressLine2>?</typ:AddressLine2>
                  <!--Optional:-->
                  <typ:City>?</typ:City>
                  <!--Optional:-->
                  <typ:State>?</typ:State>
                  <!--Optional:-->
                  <typ:ZIP>?</typ:ZIP>
                  <!--Optional:-->
                  <typ:CountryCode>?</typ:CountryCode>
               </acc:PatientAddress>
               <!--Optional:-->
               <acc:InsuredName>
                  <!--Optional:-->
                  <typ:FirstName>?</typ:FirstName>
                  <!--Optional:-->
                  <typ:LastName>?</typ:LastName>
                  <!--Optional:-->
                  <typ:MiddleName>?</typ:MiddleName>
               </acc:InsuredName>
               <!--Optional:-->
               <acc:QuestionId>?</acc:QuestionId>
               <!--Optional:-->
               <acc:QuestionResponse>?</acc:QuestionResponse>
               <!--Optional:-->
               <acc:DosFrom>?</acc:DosFrom>
               <!--Optional:-->
               <acc:DosTo>?</acc:DosTo>
               <!--Optional:-->
               <acc:DisplayPrimaryOnly>true</acc:DisplayPrimaryOnly>
               <!--Optional:-->
               <acc:SortByPatientLastName>?</acc:SortByPatientLastName>
               <!--Optional:-->
               <acc:StartRowNumber>1</acc:StartRowNumber>
               <!--Optional:-->
               <acc:EndRowNumber>100</acc:EndRowNumber>
               <!--Optional:-->
               <acc:SubmissionId>?</acc:SubmissionId>
               <!--Optional:-->
               <acc:ClientPrimaryFacilityId>?</acc:ClientPrimaryFacilityId>
            </acc:AccessionSearchRequestMessage>
         </acc:Payload>
      </acc:AccessionSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accessionSearch/accessionSearch/AccessionSearchRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="patientSearchSoap11" type="wsdl" bindingName="{http://www.xifin.com/schema/patientSearch}patientSearchSoap11" soapVersion="1_1" anonymous="optional" definition="https://www.xifinqa.com/prod/accession/patientSearch.wsdl" id="299517d3-7fc3-4d32-9fc5-bc6b1ee5c4ba" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.xifinqa.com/prod/accession/patientSearch.wsdl"><con:part><con:url>https://www.xifinqa.com/prod/accession/patientSearch.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.xifin.com/schema/patientSearch" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://www.xifin.com/schema/patientSearch" xmlns:sch1="http://www.xifin.com/schema/types" xmlns:sch2="http://www.xifin.com/schema/msgHeader" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.xifin.com/schema/patientSearch">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/patientSearch" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/patientSearch" xmlns:msgHeader="http://www.xifin.com/schema/msgHeader" xmlns:types="http://www.xifin.com/schema/types">
      <xs:import namespace="http://www.xifin.com/schema/types"/>
      <xs:import namespace="http://www.xifin.com/schema/msgHeader"/>
      <xs:element name="PatientSearchRequest">
        <xs:annotation>
          <xs:documentation>Patient Request Message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element ref="PatientSearchRequestMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PatientSearchResponse">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="Status" type="types:StatusType"/>
                  <xs:element maxOccurs="unbounded" minOccurs="0" ref="PatientSearchResponseMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PatientSearchRequestMessage">
        <xs:annotation>
          <xs:documentation>By default response will contain maximum of 100 records, if more than one records need to
                be retrieved
                send the start and end row numbers.
                The data will returned between start and end record row numbers.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="PatientId" type="types:NameIdType"/>
            <xs:element minOccurs="0" name="ClientId" type="types:IdType"/>
            <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
            <xs:element minOccurs="0" name="PatientSSN" type="xs:string"/>
            <xs:element minOccurs="0" name="PatientDOB" type="xs:date"/>
            <xs:element minOccurs="0" name="PatientAddress" type="types:AddressType"/>
            <xs:element minOccurs="0" name="PatientHomePhone" type="types:PhoneNumberType"/>
            <xs:element default="1" minOccurs="0" name="StartRowNumber" type="xs:integer"/>
            <xs:element default="100" minOccurs="0" name="EndRowNumber" type="xs:integer"/>
            <xs:element default="false" minOccurs="0" name="ShowDeletedRecords" type="xs:boolean"/>
            <xs:element minOccurs="0" name="ClientPrimaryFacilityId" type="types:IdType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PatientSearchResponseMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RowId" type="xs:int"/>
            <xs:element minOccurs="0" name="PatientId" type="types:NameIdType"/>
            <xs:element minOccurs="0" name="ClientId" type="types:IdType"/>
            <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
            <xs:element minOccurs="0" name="PatientSSN" type="types:SSNType"/>
            <xs:element minOccurs="0" name="PatientDOB" type="xs:date"/>
            <xs:element minOccurs="0" name="PatientAddress" type="types:AddressType"/>
            <xs:element minOccurs="0" name="PatientHomePhone" type="types:PhoneNumberType"/>
            <xs:element minOccurs="0" name="PatientWorkPhone" type="types:PhoneNumberType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="ClientSpecificPatientInfo" type="SpecificPatientInfo"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="FacilitySpecificPatientInfo" type="SpecificPatientInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPatientInfoOfAccnRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="AccessionId" type="types:AccessionIdType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPatientInfoOfAccnResponse">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="Status" type="types:StatusType"/>
                  <xs:element maxOccurs="unbounded" minOccurs="0" ref="GetPatientInfoOfAccnResponseMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPatientInfoOfAccnResponseMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
            <xs:element minOccurs="0" name="PatientAddress" type="types:AddressType"/>
            <xs:element minOccurs="0" name="PatientHomePhone" type="types:PhoneNumberType"/>
            <xs:element minOccurs="0" name="PatientWorkPhone" type="types:PhoneNumberType"/>
            <xs:element minOccurs="0" name="PatientEmail" type="types:EmailAddressType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SpecificPatientInfo">
        <xs:sequence>
          <xs:element name="SourceType" type="types:SourceType"/>
          <xs:element name="SourceId" type="types:IdType"/>
          <xs:element name="SourceName" type="types:NameIdType"/>
          <xs:element name="PatientId" type="types:PatientIdType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/types">
      <xs:complexType name="AddressType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressLine1">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine2">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="City">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="State">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Region">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ZIP">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountryCode">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CardTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelayReasonCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmtType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="12"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccessionIdType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(([A-Za-z0-9][A-Za-z0-9-]*)|^)[A-Za-z0-9]"/>
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StatusType">
        <xs:sequence>
          <xs:element name="StatusCode" type="StatusCodeType"/>
          <xs:element minOccurs="0" name="StatusMessage" type="StatusMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusCodeType">
        <xs:restriction base="xs:integer">
          <xs:maxExclusive value="9999"/>
          <xs:minExclusive value="-9999"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatusMessageType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PhoneType">
        <xs:sequence>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="NPIType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SSNType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="9"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MSPTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TestNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EmailAddressType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[^@]+@[^\.]+\..+"/>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LongDescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="FirstName" type="NameIdType"/>
          <xs:element minOccurs="0" name="LastName" type="NameIdType"/>
          <xs:element minOccurs="0" name="MiddleName" type="NameIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UnitsType">
        <xs:restriction base="xs:integer">
          <xs:totalDigits value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NarrativeDiagTyp">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProcedureNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientProductType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommentsType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PersonType">
        <xs:sequence>
          <xs:element name="Name" type="NameType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="DescriptionType"/>
          <xs:element minOccurs="0" name="SSN" type="SSNType"/>
          <xs:element minOccurs="0" name="Address" type="AddressType"/>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Contact">
        <xs:sequence>
          <xs:element minOccurs="0" name="ContactName" type="DescriptionType"/>
          <xs:element minOccurs="0" name="Phone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Fax" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UserIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeOfService">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:int">
          <xs:totalDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AbbrevType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmountType">
        <xs:restriction base="xs:decimal">
          <xs:totalDigits value="12"/>
          <xs:fractionDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethodType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientStatusType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ShortStrType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SmallInt">
        <xs:restriction base="xs:integer">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorizationNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EpiType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DemonstrationProjectIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/msgHeader" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/msgHeader">
      <xs:element name="MessageHeader">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="OrganizationName" type="xs:string"/>
            <xs:element minOccurs="0" name="SequenceNumber" type="xs:positiveInteger"/>
            <xs:element name="UserId">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="20"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="SourceApplication" type="xs:string">
              <xs:annotation>
                <xs:documentation>Name of the source application</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="OrgAlias" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="PatientSearchRequest">
    <wsdl:part element="tns:PatientSearchRequest" name="PatientSearchRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPatientInfoOfAccnRequest">
    <wsdl:part element="tns:GetPatientInfoOfAccnRequest" name="GetPatientInfoOfAccnRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPatientInfoOfAccnResponse">
    <wsdl:part element="tns:GetPatientInfoOfAccnResponse" name="GetPatientInfoOfAccnResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PatientSearchResponse">
    <wsdl:part element="tns:PatientSearchResponse" name="PatientSearchResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="patientSearch">
    <wsdl:operation name="PatientSearch">
      <wsdl:input message="tns:PatientSearchRequest" name="PatientSearchRequest"></wsdl:input>
      <wsdl:output message="tns:PatientSearchResponse" name="PatientSearchResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPatientInfoOfAccn">
      <wsdl:input message="tns:GetPatientInfoOfAccnRequest" name="GetPatientInfoOfAccnRequest"></wsdl:input>
      <wsdl:output message="tns:GetPatientInfoOfAccnResponse" name="GetPatientInfoOfAccnResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="patientSearchSoap11" type="tns:patientSearch">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="PatientSearch">
      <soap:operation soapAction=""/>
      <wsdl:input name="PatientSearchRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="PatientSearchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPatientInfoOfAccn">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPatientInfoOfAccnRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPatientInfoOfAccnResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="patientSearchService">
    <wsdl:port binding="tns:patientSearchSoap11" name="patientSearchSoap11">
      <soap:address location="https://www.{{ platform_domain }}/prod/accession/services"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://xapp-10:8080/accession/services</con:endpoint><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="PatientSearch" bindingOperationName="PatientSearch" type="Request-Response" outputName="PatientSearchResponse" inputName="PatientSearchRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a1f1270a-3f31-4668-bd89-c0b214d8adec"><con:settings/><con:call name="Request 1" wssPasswordType="PasswordDigest" id="dce4102f-6562-492a-8628-9c988a5e286b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:PatientSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>11111</msg:SequenceNumber>
            <msg:UserId>yli</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>clndoc</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientSearchRequestMessage>
               <!--Optional:-->
               <pat:PatientId>testes</pat:PatientId>
               <!--Optional:-->
               <pat:StartRowNumber>1</pat:StartRowNumber>
               <!--Optional:-->
               <pat:EndRowNumber>100</pat:EndRowNumber>
               <!--Optional:-->
               <pat:ShowDeletedRecords>false</pat:ShowDeletedRecords>
            </pat:PatientSearchRequestMessage>
         </pat:Payload>
      </pat:PatientSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>clndoc</con:username><con:password>clndoc</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientSearch/patientSearch/PatientSearchRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 1" wssPasswordType="PasswordDigest" id="07485a1b-af49-42df-8fee-c53052ce0e27"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:PatientSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>11111</msg:SequenceNumber>
            <msg:UserId>yli</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>ams</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientSearchRequestMessage>
               <!--Optional:-->
               <pat:PatientId>XHAR0117874549</pat:PatientId>
               <!--Optional:-->
               <pat:StartRowNumber>1</pat:StartRowNumber>
               <!--Optional:-->
               <pat:EndRowNumber>100</pat:EndRowNumber>
               <!--Optional:-->
               <pat:ShowDeletedRecords>false</pat:ShowDeletedRecords>
            </pat:PatientSearchRequestMessage>
         </pat:Payload>
      </pat:PatientSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>webservicetest</con:username><con:password>webservicetest</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientSearch/patientSearch/PatientSearchRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 3" id="65fe7f4e-098b-47c7-9b7c-9f1845b0512b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:PatientSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientSearchRequestMessage>
               <!--Optional:-->
               <pat:PatientId>?</pat:PatientId>
               <!--Optional:-->
               <pat:ClientId>?</pat:ClientId>
               <!--Optional:-->
               <pat:PatientName>
                  <!--Optional:-->
                  <typ:FirstName>?</typ:FirstName>
                  <!--Optional:-->
                  <typ:LastName>?</typ:LastName>
                  <!--Optional:-->
                  <typ:MiddleName>?</typ:MiddleName>
               </pat:PatientName>
               <!--Optional:-->
               <pat:PatientSSN>?</pat:PatientSSN>
               <!--Optional:-->
               <pat:PatientDOB>?</pat:PatientDOB>
               <!--Optional:-->
               <pat:PatientAddress>
                  <!--Optional:-->
                  <typ:AddressLine1>?</typ:AddressLine1>
                  <!--Optional:-->
                  <typ:AddressLine2>?</typ:AddressLine2>
                  <!--Optional:-->
                  <typ:City>?</typ:City>
                  <!--Optional:-->
                  <typ:State>?</typ:State>
                  <!--Optional:-->
                  <typ:ZIP>?</typ:ZIP>
                  <!--Optional:-->
                  <typ:CountryCode>?</typ:CountryCode>
               </pat:PatientAddress>
               <!--Optional:-->
               <pat:PatientHomePhone>?</pat:PatientHomePhone>
               <!--Optional:-->
               <pat:StartRowNumber>1</pat:StartRowNumber>
               <!--Optional:-->
               <pat:EndRowNumber>100</pat:EndRowNumber>
               <!--Optional:-->
               <pat:ShowDeletedRecords>false</pat:ShowDeletedRecords>
               <!--Optional:-->
               <pat:ClientPrimaryFacilityId>?</pat:ClientPrimaryFacilityId>
            </pat:PatientSearchRequestMessage>
         </pat:Payload>
      </pat:PatientSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientSearch/patientSearch/PatientSearchRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="GetPatientInfoOfAccn" bindingOperationName="GetPatientInfoOfAccn" type="Request-Response" outputName="GetPatientInfoOfAccnResponse" inputName="GetPatientInfoOfAccnRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a3a80987-383b-4d66-8085-340c9878c02b"><con:settings/><con:call name="Request 1" id="3d8d06b8-85a0-471d-bf97-554bd5fc6250"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:GetPatientInfoOfAccnRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:AccessionId>?</pat:AccessionId>
      </pat:GetPatientInfoOfAccnRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientSearch/patientSearch/GetPatientInfoOfAccnRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="patientDemoSoap11" type="wsdl" bindingName="{http://www.xifin.com/schema/patientDemo}patientDemoSoap11" soapVersion="1_1" anonymous="optional" definition="https://www.xifinqa.com/prod/accession/patientDemo.wsdl" id="ee967bda-bf24-4b53-a886-2af277a7af66" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.xifinqa.com/prod/accession/patientDemo.wsdl"><con:part><con:url>https://www.xifinqa.com/prod/accession/patientDemo.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.xifin.com/schema/patientDemo" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://www.xifin.com/schema/patientDemo" xmlns:sch1="http://www.xifin.com/schema/types" xmlns:sch2="http://www.xifin.com/schema/msgHeader" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.xifin.com/schema/patientDemo">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/patientDemo" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/patientDemo" xmlns:msgHeader="http://www.xifin.com/schema/msgHeader" xmlns:types="http://www.xifin.com/schema/types">
      <xs:import namespace="http://www.xifin.com/schema/types"/>
      <xs:import namespace="http://www.xifin.com/schema/msgHeader"/>
      <xs:element name="GetPatientDemoRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPatientDemoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element ref="PatientDemoInfo"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPatientEmailRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="PatientId" type="PatientIdType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPatientEmailResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element minOccurs="0" name="Email" type="types:EmailAddressType"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdatePatientDemoEmailRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="PatientId" type="PatientIdType"/>
                  <xs:element minOccurs="0" name="Email" type="types:EmailAddressType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdatePatientDemoEmailResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PatientDemoInfo">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="MoreRecordsAvailable" type="xs:boolean"/>
            <xs:element maxOccurs="unbounded" ref="PatientDemo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PatientDemo">
        <xs:annotation>
          <xs:documentation>Patient Demo message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="PatientInfo" type="PatientInfo"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="InsuranceInfo" type="InsuranceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdatePatientContactInfoRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="AccessionId" type="types:AccessionIdType"/>
                  <xs:element name="PatientContactInfo" type="PatientContactInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdatePatientContactInfoRespone">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EmployerInfoType">
        <xs:sequence>
          <xs:element minOccurs="0" name="EmployerName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="Address" type="types:AddressType"/>
          <xs:element minOccurs="0" name="EmployerContact" type="types:Contact"/>
          <xs:element minOccurs="0" name="EmploymentStatus" type="types:DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InsuranceInfo">
        <xs:sequence>
          <xs:element name="PayorPriority" type="types:PayorPriorityType"/>
          <xs:element name="PayorId" type="types:IdType"/>
          <xs:element minOccurs="0" name="PayorName" type="types:DescriptionType"/>
          <xs:element name="EffectiveDate" type="xs:date"/>
          <xs:element minOccurs="0" name="GroupId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PlanId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="SubscriberId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="InsuredDateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="InsuredGender" type="xs:string"/>
          <xs:element minOccurs="0" name="InsuredRelationship" type="xs:string"/>
          <xs:element minOccurs="0" name="InsuredName" type="types:NameType"/>
          <xs:element minOccurs="0" name="InsuredAddress" type="types:AddressType"/>
          <xs:element minOccurs="0" name="Phone" type="types:PhoneType"/>
          <xs:element minOccurs="0" name="InsuredSSN" type="types:SSNType"/>
          <xs:element minOccurs="0" name="ClaimNotes" type="types:NoteType"/>
          <xs:element minOccurs="0" name="Suspended" type="xs:boolean"/>
          <xs:element minOccurs="0" name="SuspensionReason" type="SuspensionReasonType"/>
          <xs:element minOccurs="0" name="Comments" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo1" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo2" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo3" type="types:NoteType"/>
          <xs:element minOccurs="0" name="OtherInfo4" type="types:NoteType"/>
          <xs:element minOccurs="0" name="GroupName" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="CaseId" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="EmployerInfo" type="EmployerInfoType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PatientInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="EPI" type="types:NameIdType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ClientSpecificPatientInfo" type="SpecificPatientInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="FacilitySpecificPatientInfo" type="SpecificPatientInfo"/>
          <xs:element minOccurs="0" name="Person" type="types:PersonType"/>
          <xs:element minOccurs="0" name="DateOfInjury" type="xs:date"/>
          <xs:element minOccurs="0" name="MaritalStatus" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="DialysisInfo" type="DialysisInfo"/>
          <xs:element minOccurs="0" name="Physician" type="Physician"/>
          <xs:element minOccurs="0" name="ExpirationDate" type="xs:date"/>
          <xs:element minOccurs="0" name="LastUsedDate" type="xs:date"/>
          <xs:element minOccurs="0" name="Comments" type="types:CommentsType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="SuspensionReasonType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="1000"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="DialysisInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="DialysisType" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="Medication" type="types:DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="Physician">
        <xs:sequence>
          <xs:element name="NPI" type="types:NPIType"/>
          <xs:element minOccurs="0" name="Name" type="types:DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="SpecificPatientInfo">
        <xs:sequence>
          <xs:element name="SourceId" type="types:IdType"/>
          <xs:element name="SourceName" type="types:NameIdType"/>
          <xs:element name="PatientId" type="PatientIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PatientContactInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="PatientId" type="types:PatientIdType"/>
          <xs:element minOccurs="0" name="ClientId" type="types:ClientIdType"/>
          <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
          <xs:element minOccurs="0" name="Email" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PatientAddress" type="types:AddressType"/>
          <xs:element minOccurs="0" name="Phone" type="types:PhoneType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/types">
      <xs:complexType name="AddressType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressLine1">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine2">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="City">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="State">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Region">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ZIP">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountryCode">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CardTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelayReasonCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmtType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="12"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccessionIdType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(([A-Za-z0-9][A-Za-z0-9-]*)|^)[A-Za-z0-9]"/>
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StatusType">
        <xs:sequence>
          <xs:element name="StatusCode" type="StatusCodeType"/>
          <xs:element minOccurs="0" name="StatusMessage" type="StatusMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusCodeType">
        <xs:restriction base="xs:integer">
          <xs:maxExclusive value="9999"/>
          <xs:minExclusive value="-9999"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatusMessageType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PhoneType">
        <xs:sequence>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="NPIType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SSNType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="9"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MSPTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TestNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EmailAddressType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[^@]+@[^\.]+\..+"/>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LongDescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="FirstName" type="NameIdType"/>
          <xs:element minOccurs="0" name="LastName" type="NameIdType"/>
          <xs:element minOccurs="0" name="MiddleName" type="NameIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UnitsType">
        <xs:restriction base="xs:integer">
          <xs:totalDigits value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NarrativeDiagTyp">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProcedureNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientProductType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommentsType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PersonType">
        <xs:sequence>
          <xs:element name="Name" type="NameType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="DescriptionType"/>
          <xs:element minOccurs="0" name="SSN" type="SSNType"/>
          <xs:element minOccurs="0" name="Address" type="AddressType"/>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Contact">
        <xs:sequence>
          <xs:element minOccurs="0" name="ContactName" type="DescriptionType"/>
          <xs:element minOccurs="0" name="Phone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Fax" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UserIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeOfService">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:int">
          <xs:totalDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AbbrevType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmountType">
        <xs:restriction base="xs:decimal">
          <xs:totalDigits value="12"/>
          <xs:fractionDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethodType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientStatusType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ShortStrType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SmallInt">
        <xs:restriction base="xs:integer">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorizationNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EpiType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DemonstrationProjectIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/msgHeader" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/msgHeader">
      <xs:element name="MessageHeader">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="OrganizationName" type="xs:string"/>
            <xs:element minOccurs="0" name="SequenceNumber" type="xs:positiveInteger"/>
            <xs:element name="UserId">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="20"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="SourceApplication" type="xs:string">
              <xs:annotation>
                <xs:documentation>Name of the source application</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="OrgAlias" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="GetPatientDemoResponse">
    <wsdl:part element="tns:GetPatientDemoResponse" name="GetPatientDemoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePatientDemoEmailResponse">
    <wsdl:part element="tns:UpdatePatientDemoEmailResponse" name="UpdatePatientDemoEmailResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPatientEmailResponse">
    <wsdl:part element="tns:GetPatientEmailResponse" name="GetPatientEmailResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePatientDemoEmailRequest">
    <wsdl:part element="tns:UpdatePatientDemoEmailRequest" name="UpdatePatientDemoEmailRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPatientEmailRequest">
    <wsdl:part element="tns:GetPatientEmailRequest" name="GetPatientEmailRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePatientContactInfoRequest">
    <wsdl:part element="tns:UpdatePatientContactInfoRequest" name="UpdatePatientContactInfoRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPatientDemoRequest">
    <wsdl:part element="tns:GetPatientDemoRequest" name="GetPatientDemoRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="patientDemo">
    <wsdl:operation name="GetPatientDemo">
      <wsdl:input message="tns:GetPatientDemoRequest" name="GetPatientDemoRequest"></wsdl:input>
      <wsdl:output message="tns:GetPatientDemoResponse" name="GetPatientDemoResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePatientDemoEmail">
      <wsdl:input message="tns:UpdatePatientDemoEmailRequest" name="UpdatePatientDemoEmailRequest"></wsdl:input>
      <wsdl:output message="tns:UpdatePatientDemoEmailResponse" name="UpdatePatientDemoEmailResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPatientEmail">
      <wsdl:input message="tns:GetPatientEmailRequest" name="GetPatientEmailRequest"></wsdl:input>
      <wsdl:output message="tns:GetPatientEmailResponse" name="GetPatientEmailResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePatientContactInfo">
      <wsdl:input message="tns:UpdatePatientContactInfoRequest" name="UpdatePatientContactInfoRequest"></wsdl:input>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="patientDemoSoap11" type="tns:patientDemo">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetPatientDemo">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPatientDemoRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPatientDemoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePatientDemoEmail">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdatePatientDemoEmailRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdatePatientDemoEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPatientEmail">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPatientEmailRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPatientEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePatientContactInfo">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdatePatientContactInfoRequest">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="patientDemoService">
    <wsdl:port binding="tns:patientDemoSoap11" name="patientDemoSoap11">
      <soap:address location="https://www.{{ platform_domain }}/prod/accession/services"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://xapp-10:8080/accession/services</con:endpoint><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="GetPatientDemo" bindingOperationName="GetPatientDemo" type="Request-Response" outputName="GetPatientDemoResponse" inputName="GetPatientDemoRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4fcff18f-32f4-47cc-9d05-a3eea7f51287"><con:settings/><con:call name="Request 1" wssPasswordType="PasswordDigest" id="a27c5672-d976-449a-a697-6284a4bceb15"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientDemo" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:GetPatientDemoRequest>
         <msg:MessageHeader>
            
            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
      </pat:GetPatientDemoRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:domain/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientDemo/patientDemo/GetPatientDemoRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="GetPatientEmail" bindingOperationName="GetPatientEmail" type="Request-Response" outputName="GetPatientEmailResponse" inputName="GetPatientEmailRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d61be37a-0933-4e93-968f-7aba70c8ec37"><con:settings/><con:call name="Request 1" id="d0c4c637-789c-4da7-afca-30d152bb2d37"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientDemo" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:GetPatientEmailRequest>
         <msg:MessageHeader>
            
            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientId>?</pat:PatientId>
         </pat:Payload>
      </pat:GetPatientEmailRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientDemo/patientDemo/GetPatientEmailRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="UpdatePatientDemoEmail" bindingOperationName="UpdatePatientDemoEmail" type="Request-Response" outputName="UpdatePatientDemoEmailResponse" inputName="UpdatePatientDemoEmailRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="08a40df2-0079-490d-8ea6-84ecc2b051cf"><con:settings/><con:call name="Request 1" id="08e98827-e959-43c5-9aef-79a5513260a3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientDemo" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:UpdatePatientDemoEmailRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientId>?</pat:PatientId>
            <!--Optional:-->
            <pat:Email>?</pat:Email>
         </pat:Payload>
      </pat:UpdatePatientDemoEmailRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientDemo/patientDemo/UpdatePatientDemoEmailRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="UpdatePatientContactInfo" bindingOperationName="UpdatePatientContactInfo" type="One-Way" inputName="UpdatePatientContactInfoRequest" sendsAttachments="false" anonymous="optional" id="5f5b33af-bcc1-4186-957f-a96004c7be68"><con:settings/><con:call name="Request 1" id="442d070b-fdad-47cb-bf95-7296fbe71740"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientDemo" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:UpdatePatientContactInfoRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <!--Optional:-->
            <pat:AccessionId>?</pat:AccessionId>
            <pat:PatientContactInfo>
               <!--Optional:-->
               <pat:PatientId>?</pat:PatientId>
               <!--Optional:-->
               <pat:ClientId>?</pat:ClientId>
               <!--Optional:-->
               <pat:PatientName>
                  <!--Optional:-->
                  <typ:FirstName>?</typ:FirstName>
                  <!--Optional:-->
                  <typ:LastName>?</typ:LastName>
                  <!--Optional:-->
                  <typ:MiddleName>?</typ:MiddleName>
               </pat:PatientName>
               <!--Optional:-->
               <pat:Email>?</pat:Email>
               <!--Optional:-->
               <pat:PatientAddress>
                  <!--Optional:-->
                  <typ:AddressLine1>?</typ:AddressLine1>
                  <!--Optional:-->
                  <typ:AddressLine2>?</typ:AddressLine2>
                  <!--Optional:-->
                  <typ:City>?</typ:City>
                  <!--Optional:-->
                  <typ:State>?</typ:State>
                  <!--Optional:-->
                  <typ:Region>?</typ:Region>
                  <!--Optional:-->
                  <typ:ZIP>?</typ:ZIP>
                  <!--Optional:-->
                  <typ:CountryCode>?</typ:CountryCode>
               </pat:PatientAddress>
               <!--Optional:-->
               <pat:Phone>
                  <!--Optional:-->
                  <typ:HomePhone>?</typ:HomePhone>
                  <!--Optional:-->
                  <typ:WorkPhone>?</typ:WorkPhone>
               </pat:Phone>
            </pat:PatientContactInfo>
         </pat:Payload>
      </pat:UpdatePatientContactInfoRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientDemo/patientDemo/UpdatePatientContactInfoRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="errorProcessingSoap11" type="wsdl" bindingName="{http://www.xifin.com/schema/errorProcessing}errorProcessingSoap11" soapVersion="1_1" anonymous="optional" definition="https://www.xifinqa.com/prod/accessionv7194/errorProcessing.wsdl" id="67c9a3ea-cada-462e-a15a-71f13b42e152" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.xifinqa.com/prod/accessionv7194/errorProcessing.wsdl"><con:part><con:url>https://www.xifinqa.com/prod/accessionv7194/errorProcessing.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.xifin.com/schema/errorProcessing" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://www.xifin.com/schema/errorProcessing" xmlns:sch1="http://www.xifin.com/schema/types" xmlns:sch2="http://www.xifin.com/schema/msgHeader" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.xifin.com/schema/errorProcessing">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/errorProcessing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/errorProcessing" xmlns:accession="http://www.xifin.com/schema/accession" xmlns:msgHeader="http://www.xifin.com/schema/msgHeader" xmlns:types="http://www.xifin.com/schema/types">
      <xs:import namespace="http://www.xifin.com/schema/types"/>
      <xs:import namespace="http://www.xifin.com/schema/msgHeader"/>
      <xs:element name="GetErrorProcessingSummaryRequest">
        <xs:annotation>
          <xs:documentation>Error Processing Summary Request data structure. Order determines the order in which grouping will be done.By default grouping will be
        done on the basis of patient name and date of service.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="EPSummaryRequestMessage" type="EPSummaryRequestMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EPSummaryRequestMessage">
        <xs:sequence>
          <xs:element name="ClientId" type="types:ClientIdType"/>
          <xs:element minOccurs="0" name="PatientName" type="GroupingElementType"/>
          <xs:element minOccurs="0" name="DateOfService" type="GroupingElementType"/>
          <xs:element minOccurs="0" name="PatientId" type="GroupingElementType"/>
          <xs:element minOccurs="0" name="ErrorField" type="GroupingElementType"/>
          <xs:element minOccurs="0" name="OrderingPhysician" type="GroupingElementType"/>
          <xs:element name="CorrespondanceType" type="types:DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GroupingElementType">
        <xs:sequence>
          <xs:element name="Order" type="OrderType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="OrderType">
        <xs:restriction base="xs:int">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="GetErrorProcessingSummaryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element ref="GetErrorProcessingSummaryResponseMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetErrorProcessingSummaryResponseMessage">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="EPSummaryResponseMessage" type="EPSummaryResponseMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EPSummaryResponseMessage">
        <xs:annotation>
          <xs:documentation>There could be multiple block of Summary like this</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
          <xs:element name="DateOfService" type="xs:date"/>
          <xs:element minOccurs="0" name="PatientId" type="types:IdType"/>
          <xs:element minOccurs="0" name="ErrorField" type="xs:string"/>
          <xs:element minOccurs="0" name="OrderingPhysician" type="types:NameType"/>
          <xs:element minOccurs="0" name="ErrorCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetErrorProcessingAccessionRequest">
        <xs:annotation>
          <xs:documentation>Get ErrorProcessing Accession Request message structure.It takes client ID and Correspondence Type( Client or Patient) and other optional field as input .</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ErrorProcessingAccessionMessage" type="ErrorProcessingAccessionRequestMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ErrorProcessingAccessionRequestMessage">
        <xs:sequence>
          <xs:element name="ClientId" type="types:ClientIdType"/>
          <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
          <xs:element minOccurs="0" name="DateOfService" type="xs:date"/>
          <xs:element minOccurs="0" name="PatientId" type="types:IdType"/>
          <xs:element minOccurs="0" name="ErrorField" type="xs:string"/>
          <xs:element minOccurs="0" name="OrderingPhysician" type="types:NameType"/>
          <xs:element name="CorrespondanceType" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PatientNameSortingOrder" type="GroupingElementType"/>
          <xs:element minOccurs="0" name="DateOfServiceSortingOrder" type="GroupingElementType"/>
          <xs:element default="1" minOccurs="0" name="StartRowNumber" type="xs:integer"/>
          <xs:element default="100" minOccurs="0" name="EndRowNumber" type="xs:integer"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetErrorProcessingAccessionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element ref="GetErrorProcessingAccessionResponseMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetErrorProcessingAccessionResponseMessage">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="ErrorProcessingAccessionResponseMessage" type="ErrorProcessingAccessionResponseMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ErrorProcessingAccessionResponseMessage">
        <xs:sequence>
          <xs:element name="RowId" type="xs:int"/>
          <xs:element minOccurs="0" name="AccessionId" type="types:AccessionIdType"/>
          <xs:element name="DateOfService" type="xs:date"/>
          <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
          <xs:element minOccurs="0" name="PatientId" type="types:IdType"/>
          <xs:element minOccurs="0" name="PatientSSN" type="types:SSNType"/>
          <xs:element minOccurs="0" name="PatientDOB" type="xs:date"/>
          <xs:element minOccurs="0" name="OrderingPhysician" type="types:NameType"/>
          <xs:element minOccurs="0" name="NPI" type="types:NPIType"/>
          <xs:element minOccurs="0" name="ErrorCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetAccessionCountInEpQueueRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ClientId" type="types:ClientIdType"/>
                  <xs:element name="CorrespondanceType" type="types:DescriptionType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAccessionCountInEpQueueResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element name="NoOfAccessionsInEpQueue" type="xs:int"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetClientsInEpQueueRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="CorrespondanceType" type="types:DescriptionType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetClientsInEpQueueResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Clients" type="ClientDetails"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ClientDetails">
        <xs:sequence>
          <xs:element name="ClientId" type="types:ClientIdType"/>
          <xs:element minOccurs="0" name="ClientName" type="types:AccountNameType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetErrorProcessingAccessionsInclErrorDetailsRequest">
        <xs:annotation>
          <xs:documentation>Get ErrorProcessing Accession Request message structure.It takes client ID and correspondence Type( Client or Patient) and other optional field as input.
                Flags includeAccessionError,includeAccessionTestError,includeAccessionProcedureError,includeAccessionPayorError determine which error to add.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ErrorProcessingAccessionsInclErrorDetailsMessage" type="ErrorProcessingAccessionsInclErrorDetailsRequestMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ErrorProcessingAccessionsInclErrorDetailsRequestMessage">
        <xs:sequence>
          <xs:element name="ClientId" type="types:ClientIdType"/>
          <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
          <xs:element minOccurs="0" name="DateOfService" type="xs:date"/>
          <xs:element minOccurs="0" name="PatientId" type="types:IdType"/>
          <xs:element minOccurs="0" name="ErrorField" type="xs:string"/>
          <xs:element minOccurs="0" name="OrderingPhysician" type="types:NameType"/>
          <xs:element name="CorrespondanceType" type="types:DescriptionType"/>
          <xs:element minOccurs="0" name="PatientNameSortingOrder" type="GroupingElementType"/>
          <xs:element minOccurs="0" name="DateOfServiceSortingOrder" type="GroupingElementType"/>
          <xs:element default="true" minOccurs="0" name="IncludeAccessionError" type="xs:boolean"/>
          <xs:element default="true" minOccurs="0" name="IncludeAccessionTestError" type="xs:boolean"/>
          <xs:element default="true" minOccurs="0" name="IncludeAccessionProcedureError" type="xs:boolean"/>
          <xs:element default="true" minOccurs="0" name="IncludeAccessionPayorError" type="xs:boolean"/>
          <xs:element default="1" minOccurs="0" name="StartRowNumber" type="xs:integer"/>
          <xs:element default="100" minOccurs="0" name="EndRowNumber" type="xs:integer"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetErrorProcessingAccessionsInclErrorDetailsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element ref="GetErrorProcessingAccessionsInclErrorDetailsResponseMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetErrorProcessingAccessionsInclErrorDetailsResponseMessage">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="ErrorProcessingAccessionsInclErrorDetailsResponseMessage" type="ErrorProcessingAccessionsInclErrorDetailsResponseMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ErrorProcessingAccessionsInclErrorDetailsResponseMessage">
        <xs:sequence>
          <xs:element name="RowId" type="xs:int"/>
          <xs:element minOccurs="0" name="AccessionId" type="types:AccessionIdType"/>
          <xs:element name="DateOfService" type="xs:date"/>
          <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
          <xs:element minOccurs="0" name="PatientId" type="types:PatientIdType"/>
          <xs:element minOccurs="0" name="PatientSSN" type="types:SSNType"/>
          <xs:element minOccurs="0" name="PatientDOB" type="xs:date"/>
          <xs:element minOccurs="0" name="OrderingPhysician" type="types:NameType"/>
          <xs:element minOccurs="0" name="NPI" type="types:NPIType"/>
          <xs:element minOccurs="0" name="ErrorCount" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ErrorDetails" type="ErrorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ErrorDetailType">
        <xs:sequence>
          <xs:element name="ReasonCode" type="xs:string"/>
          <xs:element name="Description" type="types:LongDescriptionType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/types">
      <xs:complexType name="AddressType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressLine1">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine2">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="City">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="State">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Region">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ZIP">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountryCode">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CardTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelayReasonCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmtType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="12"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccessionIdType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(([A-Za-z0-9][A-Za-z0-9-]*)|^)[A-Za-z0-9]"/>
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StatusType">
        <xs:sequence>
          <xs:element name="StatusCode" type="StatusCodeType"/>
          <xs:element minOccurs="0" name="StatusMessage" type="StatusMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusCodeType">
        <xs:restriction base="xs:integer">
          <xs:maxExclusive value="9999"/>
          <xs:minExclusive value="-9999"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatusMessageType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PhoneType">
        <xs:sequence>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="NPIType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SSNType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="9"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MSPTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TestNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EmailAddressType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[^@]+@[^\.]+\..+"/>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LongDescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="FirstName" type="NameIdType"/>
          <xs:element minOccurs="0" name="LastName" type="NameIdType"/>
          <xs:element minOccurs="0" name="MiddleName" type="NameIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UnitsType">
        <xs:restriction base="xs:integer">
          <xs:totalDigits value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NarrativeDiagTyp">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProcedureNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientProductType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommentsType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PersonType">
        <xs:sequence>
          <xs:element name="Name" type="NameType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="DescriptionType"/>
          <xs:element minOccurs="0" name="SSN" type="SSNType"/>
          <xs:element minOccurs="0" name="Address" type="AddressType"/>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Contact">
        <xs:sequence>
          <xs:element minOccurs="0" name="ContactName" type="DescriptionType"/>
          <xs:element minOccurs="0" name="Phone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Fax" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UserIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeOfService">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:int">
          <xs:totalDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AbbrevType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmountType">
        <xs:restriction base="xs:decimal">
          <xs:totalDigits value="12"/>
          <xs:fractionDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethodType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientStatusType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ShortStrType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SmallInt">
        <xs:restriction base="xs:integer">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorizationNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EpiType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DemonstrationProjectIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/msgHeader" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/msgHeader">
      <xs:element name="MessageHeader">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="OrganizationName" type="xs:string"/>
            <xs:element minOccurs="0" name="SequenceNumber" type="xs:positiveInteger"/>
            <xs:element name="UserId">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="20"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="SourceApplication" type="xs:string">
              <xs:annotation>
                <xs:documentation>Name of the source application</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="OrgAlias" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="GetErrorProcessingAccessionsInclErrorDetailsRequest">
    <wsdl:part element="tns:GetErrorProcessingAccessionsInclErrorDetailsRequest" name="GetErrorProcessingAccessionsInclErrorDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetErrorProcessingAccessionResponse">
    <wsdl:part element="tns:GetErrorProcessingAccessionResponse" name="GetErrorProcessingAccessionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientsInEpQueueRequest">
    <wsdl:part element="tns:GetClientsInEpQueueRequest" name="GetClientsInEpQueueRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientsInEpQueueResponse">
    <wsdl:part element="tns:GetClientsInEpQueueResponse" name="GetClientsInEpQueueResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAccessionCountInEpQueueRequest">
    <wsdl:part element="tns:GetAccessionCountInEpQueueRequest" name="GetAccessionCountInEpQueueRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetErrorProcessingAccessionsInclErrorDetailsResponse">
    <wsdl:part element="tns:GetErrorProcessingAccessionsInclErrorDetailsResponse" name="GetErrorProcessingAccessionsInclErrorDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetErrorProcessingSummaryResponse">
    <wsdl:part element="tns:GetErrorProcessingSummaryResponse" name="GetErrorProcessingSummaryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAccessionCountInEpQueueResponse">
    <wsdl:part element="tns:GetAccessionCountInEpQueueResponse" name="GetAccessionCountInEpQueueResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetErrorProcessingAccessionRequest">
    <wsdl:part element="tns:GetErrorProcessingAccessionRequest" name="GetErrorProcessingAccessionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetErrorProcessingSummaryRequest">
    <wsdl:part element="tns:GetErrorProcessingSummaryRequest" name="GetErrorProcessingSummaryRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="errorProcessing">
    <wsdl:operation name="GetErrorProcessingAccessionsInclErrorDetails">
      <wsdl:input message="tns:GetErrorProcessingAccessionsInclErrorDetailsRequest" name="GetErrorProcessingAccessionsInclErrorDetailsRequest"></wsdl:input>
      <wsdl:output message="tns:GetErrorProcessingAccessionsInclErrorDetailsResponse" name="GetErrorProcessingAccessionsInclErrorDetailsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetErrorProcessingAccession">
      <wsdl:input message="tns:GetErrorProcessingAccessionRequest" name="GetErrorProcessingAccessionRequest"></wsdl:input>
      <wsdl:output message="tns:GetErrorProcessingAccessionResponse" name="GetErrorProcessingAccessionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientsInEpQueue">
      <wsdl:input message="tns:GetClientsInEpQueueRequest" name="GetClientsInEpQueueRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientsInEpQueueResponse" name="GetClientsInEpQueueResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccessionCountInEpQueue">
      <wsdl:input message="tns:GetAccessionCountInEpQueueRequest" name="GetAccessionCountInEpQueueRequest"></wsdl:input>
      <wsdl:output message="tns:GetAccessionCountInEpQueueResponse" name="GetAccessionCountInEpQueueResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetErrorProcessingSummary">
      <wsdl:input message="tns:GetErrorProcessingSummaryRequest" name="GetErrorProcessingSummaryRequest"></wsdl:input>
      <wsdl:output message="tns:GetErrorProcessingSummaryResponse" name="GetErrorProcessingSummaryResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="errorProcessingSoap11" type="tns:errorProcessing">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetErrorProcessingAccessionsInclErrorDetails">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetErrorProcessingAccessionsInclErrorDetailsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetErrorProcessingAccessionsInclErrorDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetErrorProcessingAccession">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetErrorProcessingAccessionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetErrorProcessingAccessionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientsInEpQueue">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientsInEpQueueRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientsInEpQueueResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccessionCountInEpQueue">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAccessionCountInEpQueueRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAccessionCountInEpQueueResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetErrorProcessingSummary">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetErrorProcessingSummaryRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetErrorProcessingSummaryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="errorProcessingService">
    <wsdl:port binding="tns:errorProcessingSoap11" name="errorProcessingSoap11">
      <soap:address location="https://www.xifinqa.com/prod/accession/services"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://xapp-10:8080/accession/services</con:endpoint><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="GetAccessionCountInEpQueue" bindingOperationName="GetAccessionCountInEpQueue" type="Request-Response" outputName="GetAccessionCountInEpQueueResponse" inputName="GetAccessionCountInEpQueueRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="63091383-b334-4eba-a136-bbbd8f525fb8"><con:settings/><con:call name="Request 1" wssPasswordType="PasswordDigest" id="bb3dbb59-d2d3-498b-81d2-762e169d2266"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <err:GetAccessionCountInEpQueueRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <err:Payload>
            <err:ClientId>100</err:ClientId>
            <err:CorrespondanceType>Client</err:CorrespondanceType>
         </err:Payload>
      </err:GetAccessionCountInEpQueueRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetAccessionCountInEpQueueRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="GetClientsInEpQueue" bindingOperationName="GetClientsInEpQueue" type="Request-Response" outputName="GetClientsInEpQueueResponse" inputName="GetClientsInEpQueueRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0cfbd0d5-57cd-4268-9777-acd628d0ec1f"><con:settings/><con:call name="Request 1" wssPasswordType="PasswordDigest" id="0ca0a9cf-06af-4dd3-9f74-670eb7a5d56d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <err:GetClientsInEpQueueRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <err:Payload>
            <err:CorrespondanceType>Client</err:CorrespondanceType>
         </err:Payload>
      </err:GetClientsInEpQueueRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetClientsInEpQueueRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="GetErrorProcessingAccession" bindingOperationName="GetErrorProcessingAccession" type="Request-Response" outputName="GetErrorProcessingAccessionResponse" inputName="GetErrorProcessingAccessionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="5818de25-2890-4134-b47d-0940d9427f0d"><con:settings/><con:call name="Request 1" wssPasswordType="PasswordDigest" id="85d3d4fb-a9ab-47e3-b6c8-3e5bf867195b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <err:GetErrorProcessingAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <err:Payload>
            <err:ErrorProcessingAccessionMessage>
               <err:ClientId>100</err:ClientId>
               <err:CorrespondanceType>Client</err:CorrespondanceType>
            </err:ErrorProcessingAccessionMessage>
         </err:Payload>
      </err:GetErrorProcessingAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetErrorProcessingAccessionRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="GetErrorProcessingSummary" bindingOperationName="GetErrorProcessingSummary" type="Request-Response" outputName="GetErrorProcessingSummaryResponse" inputName="GetErrorProcessingSummaryRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b59e7b7d-1d8d-4811-add6-e64f16def679"><con:settings/><con:call name="Request 1" id="7024d907-01fe-4939-bb4a-80ac7a639fab"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <err:GetErrorProcessingSummaryRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <err:Payload>
            <err:EPSummaryRequestMessage>
               <err:ClientId>?</err:ClientId>
               <!--Optional:-->
               <err:PatientName>
                  <err:Order>?</err:Order>
               </err:PatientName>
               <!--Optional:-->
               <err:DateOfService>
                  <err:Order>?</err:Order>
               </err:DateOfService>
               <!--Optional:-->
               <err:PatientId>
                  <err:Order>?</err:Order>
               </err:PatientId>
               <!--Optional:-->
               <err:ErrorField>
                  <err:Order>?</err:Order>
               </err:ErrorField>
               <!--Optional:-->
               <err:OrderingPhysician>
                  <err:Order>?</err:Order>
               </err:OrderingPhysician>
               <err:CorrespondanceType>?</err:CorrespondanceType>
            </err:EPSummaryRequestMessage>
         </err:Payload>
      </err:GetErrorProcessingSummaryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetErrorProcessingSummaryRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 1" wssPasswordType="PasswordDigest" id="a8ba6462-26ff-4210-ac41-a1be83103726"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <err:GetErrorProcessingSummaryRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <err:Payload>
            <err:EPSummaryRequestMessage>
               <err:ClientId>100</err:ClientId>
               
               <err:CorrespondanceType>Client</err:CorrespondanceType>
            </err:EPSummaryRequestMessage>
         </err:Payload>
      </err:GetErrorProcessingSummaryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetErrorProcessingSummaryRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="GetErrorProcessingAccessionsInclErrorDetails" bindingOperationName="GetErrorProcessingAccessionsInclErrorDetails" type="Request-Response" outputName="GetErrorProcessingAccessionsInclErrorDetailsResponse" inputName="GetErrorProcessingAccessionsInclErrorDetailsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="c316441d-0c5f-4c8c-82d2-6c72392f7dcb"><con:settings/><con:call name="Request 1" id="1a988801-fe21-4809-b66b-8924aa2e30a5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <err:GetErrorProcessingAccessionsInclErrorDetailsRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <err:Payload>
            <err:ErrorProcessingAccessionsInclErrorDetailsMessage>
               <err:ClientId>?</err:ClientId>
               <!--Optional:-->
               <err:PatientName>
                  <!--Optional:-->
                  <typ:FirstName>?</typ:FirstName>
                  <!--Optional:-->
                  <typ:LastName>?</typ:LastName>
                  <!--Optional:-->
                  <typ:MiddleName>?</typ:MiddleName>
               </err:PatientName>
               <!--Optional:-->
               <err:DateOfService>?</err:DateOfService>
               <!--Optional:-->
               <err:PatientId>?</err:PatientId>
               <!--Optional:-->
               <err:ErrorField>?</err:ErrorField>
               <!--Optional:-->
               <err:OrderingPhysician>
                  <!--Optional:-->
                  <typ:FirstName>?</typ:FirstName>
                  <!--Optional:-->
                  <typ:LastName>?</typ:LastName>
                  <!--Optional:-->
                  <typ:MiddleName>?</typ:MiddleName>
               </err:OrderingPhysician>
               <err:CorrespondanceType>?</err:CorrespondanceType>
               <!--Optional:-->
               <err:PatientNameSortingOrder>
                  <err:Order>?</err:Order>
               </err:PatientNameSortingOrder>
               <!--Optional:-->
               <err:DateOfServiceSortingOrder>
                  <err:Order>?</err:Order>
               </err:DateOfServiceSortingOrder>
               <!--Optional:-->
               <err:IncludeAccessionError>true</err:IncludeAccessionError>
               <!--Optional:-->
               <err:IncludeAccessionTestError>true</err:IncludeAccessionTestError>
               <!--Optional:-->
               <err:IncludeAccessionProcedureError>true</err:IncludeAccessionProcedureError>
               <!--Optional:-->
               <err:IncludeAccessionPayorError>true</err:IncludeAccessionPayorError>
               <!--Optional:-->
               <err:StartRowNumber>1</err:StartRowNumber>
               <!--Optional:-->
               <err:EndRowNumber>100</err:EndRowNumber>
            </err:ErrorProcessingAccessionsInclErrorDetailsMessage>
         </err:Payload>
      </err:GetErrorProcessingAccessionsInclErrorDetailsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetErrorProcessingAccessionsInclErrorDetailsRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="accessionSearchPatientPortalSoap11" type="wsdl" bindingName="{http://www.xifin.com/schema/accessionSearchPatientPortal}accessionSearchPatientPortalSoap11" soapVersion="1_1" anonymous="optional" definition="https://www.xifinqa.com/prod/accessionv893/accessionSearchPatientPortal.wsdl" id="4cd1fc1d-5582-4ee9-b508-0afab81321b6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.xifinqa.com/prod/accessionv893/accessionSearchPatientPortal.wsdl"><con:part><con:url>https://www.xifinqa.com/prod/accessionv893/accessionSearchPatientPortal.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.xifin.com/schema/accessionSearchPatientPortal" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://www.xifin.com/schema/accessionSearchPatientPortal" xmlns:sch1="http://www.xifin.com/schema/types" xmlns:sch2="http://www.xifin.com/schema/msgHeader" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.xifin.com/schema/accessionSearchPatientPortal">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/accessionSearchPatientPortal" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/accessionSearchPatientPortal" xmlns:msgHeader="http://www.xifin.com/schema/msgHeader" xmlns:types="http://www.xifin.com/schema/types">
      <xs:import namespace="http://www.xifin.com/schema/types"/>
      <xs:import namespace="http://www.xifin.com/schema/msgHeader"/>
      <xs:element name="AccessionSearchPatientPortalRequest">
        <xs:annotation>
          <xs:documentation>Accession Search For Patient Portal Request Message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element ref="AccessionSearchPatientPortalRequestMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AccessionSearchPatientPortalResponse">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="Status" type="types:StatusType"/>
                  <xs:element minOccurs="0" name="TotalPatientDueAmount" type="types:AmountType"/>
                  <xs:element minOccurs="0" name="TotalBalanceDueAmount" type="types:AmountType"/>
                  <xs:element maxOccurs="unbounded" minOccurs="0" ref="AccessionSearchPatientPortalResponseMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AccessionSearchPatientPortalRequestMessage">
        <xs:annotation>
          <xs:documentation>By default response will contain maximum of 100 records, if more than one records need to
                be retrieved
                send the start and end row numbers.
                The data will returned between start and end record row numbers.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="AccessionId" type="xs:string"/>
            <xs:element minOccurs="0" name="PatientId" type="types:NameIdType"/>
            <xs:element minOccurs="0" name="SubmissionId" type="xs:string"/>
            <xs:element minOccurs="0" name="PatientDOB" type="xs:date"/>
            <xs:element minOccurs="0" name="PatientAddress" type="types:AddressType"/>
            <xs:element minOccurs="0" name="ClientId" type="types:IdType"/>
            <xs:element minOccurs="0" name="PatientSSN" type="xs:string"/>
            <xs:element default="1" minOccurs="0" name="StartRowNumber" type="xs:integer"/>
            <xs:element default="100" minOccurs="0" name="EndRowNumber" type="xs:integer"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AccessionSearchPatientPortalResponseMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RowId" type="xs:int"/>
            <xs:element minOccurs="0" name="AccessionId" type="types:AccessionIdType"/>
            <xs:element minOccurs="0" name="ClientId" type="types:IdType"/>
            <xs:element minOccurs="0" name="Dos" type="xs:date"/>
            <xs:element minOccurs="0" name="BalanceDueAmount" type="types:AmountType"/>
            <xs:element minOccurs="0" name="PatientDueAmount" type="types:AmountType"/>
            <xs:element minOccurs="0" name="PatientId" type="types:NameIdType"/>
            <xs:element minOccurs="0" name="PatientDOB" type="xs:date"/>
            <xs:element minOccurs="0" name="PatientName" type="types:NameType"/>
            <xs:element minOccurs="0" name="PatientAddress" type="types:AddressType"/>
            <xs:element minOccurs="0" name="PatientSSN" type="types:SSNType"/>
            <xs:element default="true" minOccurs="0" name="Priced" type="xs:boolean"/>
            <xs:element default="false" minOccurs="0" name="HasSpecialAdjustmentCodes" type="xs:boolean"/>
            <xs:element minOccurs="0" name="RequisitionId" type="types:DescriptionType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PriceInquiryInformationRequest">
        <xs:annotation>
          <xs:documentation>Request to retrieve the information needed to perform a price inquiry for an accession</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element ref="PriceInquiryInformationRequestMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PriceInquiryInformationRequestMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="AccessionIds" type="types:AccessionIdType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PriceInquiryInformationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element ref="PriceInquiryInformationResponseMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PriceInquiryInformationResponseMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="AccessionInformation" type="PriceInquiryInformationAccessionType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="PriceInquiryInformationAccessionType">
        <xs:annotation>
          <xs:documentation>Object to hold a single accession's tests or, in the case it is unpriceable, a flag marking it as such.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="AccessionId" type="types:AccessionIdType"/>
          <xs:choice>
            <xs:element name="Unpriceable" type="xs:boolean"/>
            <xs:sequence>
              <xs:element name="PayorId" type="types:PayorIdType"/>
              <xs:element maxOccurs="unbounded" name="Tests" type="TestIdType"/>
            </xs:sequence>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="TestIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/types">
      <xs:complexType name="AddressType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressLine1">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine2">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="City">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="State">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Region">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ZIP">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountryCode">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CardTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelayReasonCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmtType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="12"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccessionIdType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(([A-Za-z0-9][A-Za-z0-9-]*)|^)[A-Za-z0-9]"/>
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StatusType">
        <xs:sequence>
          <xs:element name="StatusCode" type="StatusCodeType"/>
          <xs:element minOccurs="0" name="StatusMessage" type="StatusMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusCodeType">
        <xs:restriction base="xs:integer">
          <xs:maxExclusive value="9999"/>
          <xs:minExclusive value="-9999"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatusMessageType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PhoneType">
        <xs:sequence>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="NPIType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SSNType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="9"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MSPTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TestNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EmailAddressType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[^@]+@[^\.]+\..+"/>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LongDescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="FirstName" type="NameIdType"/>
          <xs:element minOccurs="0" name="LastName" type="NameIdType"/>
          <xs:element minOccurs="0" name="MiddleName" type="NameIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UnitsType">
        <xs:restriction base="xs:integer">
          <xs:totalDigits value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NarrativeDiagTyp">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProcedureNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientProductType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommentsType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PersonType">
        <xs:sequence>
          <xs:element name="Name" type="NameType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="DescriptionType"/>
          <xs:element minOccurs="0" name="SSN" type="SSNType"/>
          <xs:element minOccurs="0" name="Address" type="AddressType"/>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Contact">
        <xs:sequence>
          <xs:element minOccurs="0" name="ContactName" type="DescriptionType"/>
          <xs:element minOccurs="0" name="Phone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Fax" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UserIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeOfService">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:int">
          <xs:totalDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AbbrevType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmountType">
        <xs:restriction base="xs:decimal">
          <xs:totalDigits value="12"/>
          <xs:fractionDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethodType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientStatusType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ShortStrType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SmallInt">
        <xs:restriction base="xs:integer">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorizationNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EpiType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DemonstrationProjectIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RenalType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(Y|N)?"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/msgHeader" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/msgHeader">
      <xs:element name="MessageHeader">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="OrganizationName" type="xs:string"/>
            <xs:element minOccurs="0" name="SequenceNumber" type="xs:positiveInteger"/>
            <xs:element name="UserId">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="20"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="SourceApplication" type="xs:string">
              <xs:annotation>
                <xs:documentation>Name of the source application</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="OrgAlias" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="PriceInquiryInformationRequest">
    <wsdl:part element="tns:PriceInquiryInformationRequest" name="PriceInquiryInformationRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PriceInquiryInformationResponse">
    <wsdl:part element="tns:PriceInquiryInformationResponse" name="PriceInquiryInformationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AccessionSearchPatientPortalResponse">
    <wsdl:part element="tns:AccessionSearchPatientPortalResponse" name="AccessionSearchPatientPortalResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AccessionSearchPatientPortalRequest">
    <wsdl:part element="tns:AccessionSearchPatientPortalRequest" name="AccessionSearchPatientPortalRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="accessionSearchPatientPortal">
    <wsdl:operation name="PriceInquiryInformation">
      <wsdl:input message="tns:PriceInquiryInformationRequest" name="PriceInquiryInformationRequest"></wsdl:input>
      <wsdl:output message="tns:PriceInquiryInformationResponse" name="PriceInquiryInformationResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AccessionSearchPatientPortal">
      <wsdl:input message="tns:AccessionSearchPatientPortalRequest" name="AccessionSearchPatientPortalRequest"></wsdl:input>
      <wsdl:output message="tns:AccessionSearchPatientPortalResponse" name="AccessionSearchPatientPortalResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="accessionSearchPatientPortalSoap11" type="tns:accessionSearchPatientPortal">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="PriceInquiryInformation">
      <soap:operation soapAction=""/>
      <wsdl:input name="PriceInquiryInformationRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="PriceInquiryInformationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AccessionSearchPatientPortal">
      <soap:operation soapAction=""/>
      <wsdl:input name="AccessionSearchPatientPortalRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AccessionSearchPatientPortalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="accessionSearchPatientPortalService">
    <wsdl:port binding="tns:accessionSearchPatientPortalSoap11" name="accessionSearchPatientPortalSoap11">
      <soap:address location="https://www.xifinqa.com/prod/accession/services"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://xapp-10:8080/accession/services</con:endpoint><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="AccessionSearchPatientPortal" bindingOperationName="AccessionSearchPatientPortal" type="Request-Response" outputName="AccessionSearchPatientPortalResponse" inputName="AccessionSearchPatientPortalRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0ef24cd8-9d8f-4456-9299-b9f7d01012a3"><con:settings/><con:call name="Request 1" id="5501772a-4478-4871-a030-6ebfb5ab7fa0"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accessionSearchPatientPortal" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:AccessionSearchPatientPortalRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionSearchPatientPortalRequestMessage>
               <!--Optional:-->
               <acc:AccessionId>?</acc:AccessionId>
               <!--Optional:-->
               <acc:PatientId>?</acc:PatientId>
               <!--Optional:-->
               <acc:SubmissionId>?</acc:SubmissionId>
               <!--Optional:-->
               <acc:PatientDOB>?</acc:PatientDOB>
               <!--Optional:-->
               <acc:PatientAddress>
                  <!--Optional:-->
                  <typ:AddressLine1>?</typ:AddressLine1>
                  <!--Optional:-->
                  <typ:AddressLine2>?</typ:AddressLine2>
                  <!--Optional:-->
                  <typ:City>?</typ:City>
                  <!--Optional:-->
                  <typ:State>?</typ:State>
                  <!--Optional:-->
                  <typ:ZIP>?</typ:ZIP>
                  <!--Optional:-->
                  <typ:CountryCode>?</typ:CountryCode>
               </acc:PatientAddress>
               <!--Optional:-->
               <acc:ClientId>?</acc:ClientId>
               <!--Optional:-->
               <acc:PatientSSN>?</acc:PatientSSN>
               <!--Optional:-->
               <acc:StartRowNumber>1</acc:StartRowNumber>
               <!--Optional:-->
               <acc:EndRowNumber>100</acc:EndRowNumber>
            </acc:AccessionSearchPatientPortalRequestMessage>
         </acc:Payload>
      </acc:AccessionSearchPatientPortalRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accessionSearchPatientPortal/accessionSearchPatientPortal/AccessionSearchPatientPortalRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="a871d053-7cb8-4f25-aed5-45749f5e0342" isOneWay="false" action="" name="PriceInquiryInformation" bindingOperationName="PriceInquiryInformation" type="Request-Response" outputName="PriceInquiryInformationResponse" inputName="PriceInquiryInformationRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="527a27ea-08ab-4517-b97f-e789f8ff1203" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://xapp-10:8080/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accessionSearchPatientPortal" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:PriceInquiryInformationRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <!--type: positiveInteger-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <!--anonymous type-->
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <!--type: string-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <!--type: string-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:PriceInquiryInformationRequestMessage>
               <!--1 or more repetitions:-->
               <!--type: AccessionIdType-->
               <acc:AccessionIds>?</acc:AccessionIds>
            </acc:PriceInquiryInformationRequestMessage>
         </acc:Payload>
      </acc:PriceInquiryInformationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accessionSearchPatientPortal/accessionSearchPatientPortal/PriceInquiryInformationRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="patientPaymentSoap11" type="wsdl" bindingName="{http://www.xifin.com/schema/patientPayment}patientPaymentSoap11" soapVersion="1_1" anonymous="optional" definition="https://www.xifinqa.com/prod/accessionv913/patientPayment.wsdl" id="c9dc7c03-b74c-40d9-9103-7d06c219675d" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.xifinqa.com/prod/accessionv913/patientPayment.wsdl"><con:part><con:url>https://www.xifinqa.com/prod/accessionv913/patientPayment.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.xifin.com/schema/patientPayment" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://www.xifin.com/schema/patientPayment" xmlns:sch1="http://www.xifin.com/schema/types" xmlns:sch2="http://www.xifin.com/schema/msgHeader" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.xifin.com/schema/patientPayment">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/patientPayment" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/patientPayment" xmlns:msgHeader="http://www.xifin.com/schema/msgHeader" xmlns:types="http://www.xifin.com/schema/types">
      <xs:import namespace="http://www.xifin.com/schema/types"/>
      <xs:import namespace="http://www.xifin.com/schema/msgHeader"/>
      <xs:element name="CashPaymentRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element ref="CashPayment"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AddPromisedPaymentRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element ref="PromisedPayment"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AddPromisedPaymentResponse">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Status" type="types:StatusType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckPaymentRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element ref="CheckPayment"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CashPaymentResponse">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element name="BusinessObject">
                    <xs:complexType>
                      <xs:choice>
                        <xs:element ref="CashOrCheckPaymentResp"/>
                      </xs:choice>
                    </xs:complexType>
                  </xs:element>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckPaymentResponse">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element name="BusinessObject">
                    <xs:complexType>
                      <xs:choice>
                        <xs:element ref="CashOrCheckPaymentResp"/>
                      </xs:choice>
                    </xs:complexType>
                  </xs:element>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="VoidCurrentPaymentPlanRequest">
        <xs:annotation>
          <xs:documentation>Void current ppromised payment plan Request message structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element ref="VoidCurrentPaymentPlan"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="VoidCurrentPaymentPlanResponse">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Status" type="types:StatusType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="VoidCurrentPaymentPlan">
        <xs:annotation>
          <xs:documentation>Void current ppromised payment plan message structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="AccessionId" type="types:AccessionIdType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Sale">
        <xs:annotation>
          <xs:documentation>Sale transaction request message structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="AccessionId" type="types:AccessionIdType"/>
            <xs:element name="PaymentMethod" type="types:PaymentMethodType"/>
            <xs:element name="CardType" type="types:CardTypeType"/>
            <xs:element name="AccountNumber" type="xs:integer">
              <xs:annotation>
                <xs:documentation>Credit card number.For the Pinless debit AccountNumber can be the bank account
                            number.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="ExpirationDate" type="ExpirationDateType"/>
            <xs:element name="PaymentAmount" type="types:AmountType"/>
            <xs:element minOccurs="0" name="Comment" type="types:NoteType"/>
            <xs:element minOccurs="0" name="SecurityCode" type="xs:string">
              <xs:annotation>
                <xs:documentation>Credit card security number for online transactions
                            (referred to also as CVV2, CVC2, CSC or CID). This is a 3-digit (Visa, Master, Discover) or
                            4-digit (Amex) number.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="AccountHolderFirstName" type="NameType"/>
            <xs:element minOccurs="0" name="AccountHolderLastName" type="NameType"/>
            <xs:element minOccurs="0" name="StreetAddress" type="NameType"/>
            <xs:element minOccurs="0" name="Zip" type="ZipType"/>
            <xs:element default="false" minOccurs="0" name="PrintOnPatientStatement" type="xs:boolean"/>
            <xs:element minOccurs="0" name="PaymentLocation" type="types:AbbrevType">
              <xs:annotation>
                <xs:documentation>If PSC is not provided system defaults to Main Lab</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SalePerPatient">
        <xs:annotation>
          <xs:documentation>Sale transaction request message structure. EPI or List of accessions are required.
                PaymentAmount is required when  EPI is sent in the request otherwise
                AccessionTyp will have payment amount per accession.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EPI" type="types:EpiType"/>
            <xs:element minOccurs="0" name="PaymentAmount" type="types:AmountType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="Accessions" type="AccessionTyp"/>
            <xs:element name="PaymentMethod" type="types:PaymentMethodType"/>
            <xs:element name="CardType" type="types:CardTypeType"/>
            <xs:element name="AccountNumber" type="xs:integer">
              <xs:annotation>
                <xs:documentation>Credit card number.For the Pinless debit AccountNumber can be the bank account
                            number.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="ExpirationDate" type="ExpirationDateType"/>
            <xs:element minOccurs="0" name="Comment" type="types:NoteType"/>
            <xs:element minOccurs="0" name="SecurityCode" type="xs:string">
              <xs:annotation>
                <xs:documentation>Credit card security number for online transactions
                            (referred to also as CVV2, CVC2, CSC or CID). This is a 3-digit (Visa, Master, Discover) or
                            4-digit (Amex) number.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="AccountHolderFirstName" type="NameType"/>
            <xs:element minOccurs="0" name="AccountHolderLastName" type="NameType"/>
            <xs:element minOccurs="0" name="StreetAddress" type="NameType"/>
            <xs:element minOccurs="0" name="Zip" type="ZipType"/>
            <xs:element default="false" minOccurs="0" name="PrintOnPatientStatement" type="xs:boolean"/>
            <xs:element minOccurs="0" name="PaymentLocation" type="types:AbbrevType">
              <xs:annotation>
                <xs:documentation>If PSC is not provided system defaults to Main Lab</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PromisedPayment">
        <xs:annotation>
          <xs:documentation>Recurring transaction request message structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="AccessionId" type="types:AccessionIdType"/>
            <xs:element default="false" minOccurs="0" name="PrintOnPatientStatement" type="xs:boolean"/>
            <xs:element name="DunningCycle" type="types:SmallInt"/>
            <xs:element minOccurs="0" name="Comment" type="types:NoteType"/>
            <xs:element name="RecurringPaymentAmount" type="types:AmountType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Credit">
        <xs:annotation>
          <xs:documentation>Credit transaction request message structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="TransactionId" type="types:DescriptionType">
              <xs:annotation>
                <xs:documentation>Original TransactionId returned from Original Transaction</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="TransactionAmount" type="types:AmountType"/>
            <xs:element minOccurs="0" name="Comment" type="types:NoteType"/>
            <xs:element minOccurs="0" name="PaymentLocation" type="types:AbbrevType">
              <xs:annotation>
                <xs:documentation>If PSC is not provided system defaults to Main Lab</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element default="false" minOccurs="0" name="PrintOnPatientStatement" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Void">
        <xs:annotation>
          <xs:documentation>Void transaction request message structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="TransactionId" type="types:DescriptionType"/>
            <xs:element minOccurs="0" name="Comment" type="types:NoteType"/>
            <xs:element minOccurs="0" name="PaymentLocation" type="types:AbbrevType">
              <xs:annotation>
                <xs:documentation>If PSC is not provided system defaults to Main Lab</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element default="false" minOccurs="0" name="PrintOnPatientStatement" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckPayment">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="AccessionId" type="types:AccessionIdType"/>
            <xs:element minOccurs="0" name="ReceiptId" type="types:DescriptionType"/>
            <xs:element name="CheckNumber" type="types:DescriptionType"/>
            <xs:element name="PaymentAmount" type="types:AmountType"/>
            <xs:element minOccurs="0" name="Comment" type="types:NoteType"/>
            <xs:element default="false" minOccurs="0" name="PrintOnPatientStatement" type="xs:boolean"/>
            <xs:element minOccurs="0" name="PaymentLocation" type="types:AbbrevType">
              <xs:annotation>
                <xs:documentation>If PSC is not provided system defaults to Main Lab</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CashPayment">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="AccessionId" type="types:AccessionIdType"/>
            <xs:element minOccurs="0" name="ReceiptId" type="types:DescriptionType"/>
            <xs:element name="PaymentAmount" type="types:AmountType"/>
            <xs:element minOccurs="0" name="Comment" type="types:NoteType"/>
            <xs:element default="false" minOccurs="0" name="PrintOnPatientStatement" type="xs:boolean"/>
            <xs:element minOccurs="0" name="PaymentLocation" type="types:AbbrevType">
              <xs:annotation>
                <xs:documentation>If PSC is not provided system defaults to Main Lab</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CashOrCheckPaymentResp">
        <xs:annotation>
          <xs:documentation>Payment response from Xifin</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="AccessionId" type="types:AccessionIdType"/>
            <xs:element name="ReceiptId" type="types:DescriptionType"/>
            <xs:element name="ResponseMessage" type="types:NoteType"/>
            <xs:element name="PaymentAmount" type="types:AmountType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ExpirationDateType">
        <xs:sequence>
          <xs:element name="Month">
            <xs:annotation>
              <xs:documentation>Credit card expiration month. Example: 02</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
                <xs:pattern value="0[1-9]|1[012]"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="Year">
            <xs:annotation>
              <xs:documentation>Last two digits of the credit card expiration year. Example: 06</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
                <xs:pattern value="[0-9][0-9]"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="AuthorizationCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TransactionId">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StreetAddressType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="30"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ZipType">
        <xs:restriction base="xs:string">
          <xs:pattern value="\d{5}(-\d{4})?"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="30"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CVV2MatchType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="1"/>
          <xs:enumeration value="Y"/>
          <xs:enumeration value="N"/>
          <xs:enumeration value="X"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="AccessionTyp">
        <xs:sequence>
          <xs:element name="AccessionId" type="types:AccessionIdType"/>
          <xs:element name="PaymentAmount" type="types:AmountType"/>
          <xs:element minOccurs="0" name="Comment" type="types:DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/types">
      <xs:complexType name="AddressType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressLine1">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine2">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="City">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="State">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Region">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ZIP">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountryCode">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CardTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelayReasonCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmtType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="12"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccessionIdType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(([A-Za-z0-9][A-Za-z0-9-]*)|^)[A-Za-z0-9]"/>
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StatusType">
        <xs:sequence>
          <xs:element name="StatusCode" type="StatusCodeType"/>
          <xs:element minOccurs="0" name="StatusMessage" type="StatusMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusCodeType">
        <xs:restriction base="xs:integer">
          <xs:maxExclusive value="9999"/>
          <xs:minExclusive value="-9999"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatusMessageType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PhoneType">
        <xs:sequence>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="NPIType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SSNType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="9"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MSPTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TestNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EmailAddressType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[^@]+@[^\.]+\..+"/>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LongDescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="FirstName" type="NameIdType"/>
          <xs:element minOccurs="0" name="LastName" type="NameIdType"/>
          <xs:element minOccurs="0" name="MiddleName" type="NameIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UnitsType">
        <xs:restriction base="xs:integer">
          <xs:totalDigits value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NarrativeDiagTyp">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProcedureNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientProductType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommentsType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PersonType">
        <xs:sequence>
          <xs:element name="Name" type="NameType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="DescriptionType"/>
          <xs:element minOccurs="0" name="SSN" type="SSNType"/>
          <xs:element minOccurs="0" name="Address" type="AddressType"/>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Contact">
        <xs:sequence>
          <xs:element minOccurs="0" name="ContactName" type="DescriptionType"/>
          <xs:element minOccurs="0" name="Phone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Fax" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UserIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeOfService">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:int">
          <xs:totalDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AbbrevType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmountType">
        <xs:restriction base="xs:decimal">
          <xs:totalDigits value="12"/>
          <xs:fractionDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethodType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientStatusType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ShortStrType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SmallInt">
        <xs:restriction base="xs:integer">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorizationNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EpiType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DemonstrationProjectIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RenalType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(Y|N)?"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/msgHeader" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/msgHeader">
      <xs:element name="MessageHeader">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="OrganizationName" type="xs:string"/>
            <xs:element minOccurs="0" name="SequenceNumber" type="xs:positiveInteger"/>
            <xs:element name="UserId">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="20"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="SourceApplication" type="xs:string">
              <xs:annotation>
                <xs:documentation>Name of the source application</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="OrgAlias" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="CashPaymentResponse">
    <wsdl:part element="tns:CashPaymentResponse" name="CashPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddPromisedPaymentResponse">
    <wsdl:part element="tns:AddPromisedPaymentResponse" name="AddPromisedPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VoidCurrentPaymentPlanResponse">
    <wsdl:part element="tns:VoidCurrentPaymentPlanResponse" name="VoidCurrentPaymentPlanResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CheckPaymentRequest">
    <wsdl:part element="tns:CheckPaymentRequest" name="CheckPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddPromisedPaymentRequest">
    <wsdl:part element="tns:AddPromisedPaymentRequest" name="AddPromisedPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CheckPaymentResponse">
    <wsdl:part element="tns:CheckPaymentResponse" name="CheckPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VoidCurrentPaymentPlanRequest">
    <wsdl:part element="tns:VoidCurrentPaymentPlanRequest" name="VoidCurrentPaymentPlanRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CashPaymentRequest">
    <wsdl:part element="tns:CashPaymentRequest" name="CashPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="patientPayment">
    <wsdl:operation name="CashPayment">
      <wsdl:input message="tns:CashPaymentRequest" name="CashPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:CashPaymentResponse" name="CashPaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddPromisedPayment">
      <wsdl:input message="tns:AddPromisedPaymentRequest" name="AddPromisedPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:AddPromisedPaymentResponse" name="AddPromisedPaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VoidCurrentPaymentPlan">
      <wsdl:input message="tns:VoidCurrentPaymentPlanRequest" name="VoidCurrentPaymentPlanRequest"></wsdl:input>
      <wsdl:output message="tns:VoidCurrentPaymentPlanResponse" name="VoidCurrentPaymentPlanResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckPayment">
      <wsdl:input message="tns:CheckPaymentRequest" name="CheckPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:CheckPaymentResponse" name="CheckPaymentResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="patientPaymentSoap11" type="tns:patientPayment">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="CashPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="CashPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CashPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddPromisedPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AddPromisedPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AddPromisedPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VoidCurrentPaymentPlan">
      <soap:operation soapAction=""/>
      <wsdl:input name="VoidCurrentPaymentPlanRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="VoidCurrentPaymentPlanResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="CheckPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CheckPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="patientPaymentService">
    <wsdl:port binding="tns:patientPaymentSoap11" name="patientPaymentSoap11">
      <soap:address location="https://www.xifinqa.com/prod/accession/services"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://xapp-10:8080/accession/services</con:endpoint><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:endpoint>https://www.{{ platform_domain }}/prod/accession/services</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="AddPromisedPayment" bindingOperationName="AddPromisedPayment" type="Request-Response" outputName="AddPromisedPaymentResponse" inputName="AddPromisedPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="17c510bb-195f-4d88-bf89-b21e21fe7f18"><con:settings/><con:call name="Request 1" id="34999c25-3df6-4d85-88ca-16711c374e52"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPayment" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:AddPromisedPaymentRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PromisedPayment>
               <pat:AccessionId>?</pat:AccessionId>
               <!--Optional:-->
               <pat:PrintOnPatientStatement>false</pat:PrintOnPatientStatement>
               <pat:DunningCycle>?</pat:DunningCycle>
               <!--Optional:-->
               <pat:Comment>?</pat:Comment>
               <pat:RecurringPaymentAmount>?</pat:RecurringPaymentAmount>
            </pat:PromisedPayment>
         </pat:Payload>
      </pat:AddPromisedPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPayment/patientPayment/AddPromisedPaymentRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="CashPayment" bindingOperationName="CashPayment" type="Request-Response" outputName="CashPaymentResponse" inputName="CashPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4e02a062-95d8-4481-9c2c-7590b0391542"><con:settings/><con:call name="Request 1" id="df0e7cda-f46e-4de1-9e83-07a1d673c6b1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPayment" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:CashPaymentRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:CashPayment>
               <pat:AccessionId>?</pat:AccessionId>
               <!--Optional:-->
               <pat:ReceiptId>?</pat:ReceiptId>
               <pat:PaymentAmount>?</pat:PaymentAmount>
               <!--Optional:-->
               <pat:Comment>?</pat:Comment>
               <!--Optional:-->
               <pat:PrintOnPatientStatement>false</pat:PrintOnPatientStatement>
               <!--Optional:-->
               <pat:PaymentLocation>?</pat:PaymentLocation>
            </pat:CashPayment>
         </pat:Payload>
      </pat:CashPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPayment/patientPayment/CashPaymentRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="CheckPayment" bindingOperationName="CheckPayment" type="Request-Response" outputName="CheckPaymentResponse" inputName="CheckPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="da399a56-65d8-45c0-bdb1-7417a035c810"><con:settings/><con:call name="Request 1" id="2d638bc4-fd7f-4c52-ba21-4a2f62289f89"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPayment" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:CheckPaymentRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:CheckPayment>
               <pat:AccessionId>?</pat:AccessionId>
               <!--Optional:-->
               <pat:ReceiptId>?</pat:ReceiptId>
               <pat:CheckNumber>?</pat:CheckNumber>
               <pat:PaymentAmount>?</pat:PaymentAmount>
               <!--Optional:-->
               <pat:Comment>?</pat:Comment>
               <!--Optional:-->
               <pat:PrintOnPatientStatement>false</pat:PrintOnPatientStatement>
               <!--Optional:-->
               <pat:PaymentLocation>?</pat:PaymentLocation>
            </pat:CheckPayment>
         </pat:Payload>
      </pat:CheckPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPayment/patientPayment/CheckPaymentRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="VoidCurrentPaymentPlan" bindingOperationName="VoidCurrentPaymentPlan" type="Request-Response" outputName="VoidCurrentPaymentPlanResponse" inputName="VoidCurrentPaymentPlanRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b2d56ffc-f831-4d90-9b8a-d4618d267c6c"><con:settings/><con:call name="Request 1" id="7041a576-e8ba-4fa7-9596-f419a4efa2bf"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPayment" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:VoidCurrentPaymentPlanRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:OrganizationName>?</msg:OrganizationName>
            <!--Optional:-->
            <msg:SequenceNumber>?</msg:SequenceNumber>
            <msg:UserId>?</msg:UserId>
            <!--Optional:-->
            <msg:SourceApplication>?</msg:SourceApplication>
            <!--Optional:-->
            <msg:OrgAlias>?</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:VoidCurrentPaymentPlan>
               <pat:AccessionId>?</pat:AccessionId>
            </pat:VoidCurrentPaymentPlan>
         </pat:Payload>
      </pat:VoidCurrentPaymentPlanRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPayment/patientPayment/VoidCurrentPaymentPlanRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="patientPaymentHistorySoap11" type="wsdl" bindingName="{http://www.xifin.com/schema/patientPaymentHistory}patientPaymentHistorySoap11" soapVersion="1_1" anonymous="optional" definition="https://www.xifinqa.com/prod/accessionv7191/patientPaymentHistory.wsdl" id="508f8417-2bd4-413e-af09-c98f0144c218" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.xifinqa.com/prod/accessionv7191/patientPaymentHistory.wsdl"><con:part><con:url>https://www.xifinqa.com/prod/accessionv7191/patientPaymentHistory.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.xifin.com/schema/patientPaymentHistory" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://www.xifin.com/schema/patientPaymentHistory" xmlns:sch1="http://www.xifin.com/schema/types" xmlns:sch2="http://www.xifin.com/schema/msgHeader" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.xifin.com/schema/patientPaymentHistory">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/patientPaymentHistory" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/patientPaymentHistory" xmlns:msgHeader="http://www.xifin.com/schema/msgHeader" xmlns:types="http://www.xifin.com/schema/types">
      <xs:import namespace="http://www.xifin.com/schema/types"/>
      <xs:import namespace="http://www.xifin.com/schema/msgHeader"/>
      <xs:element name="PatientPaymentHistoryRequest">
        <xs:annotation>
          <xs:documentation>Soap request message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:sequence>
                  <xs:element ref="PatientPaymentHistoryRequestMessage"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PatientPaymentHistoryResponse">
        <xs:annotation>
          <xs:documentation>Soap response message structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="msgHeader:MessageHeader"/>
            <xs:element name="Payload">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="Status" type="types:StatusType"/>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="PatientPaymentHistoryResponseMessage" type="PatientPaymentHistoryResponseMessage"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PatientPaymentHistoryRequestMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="PatientId" type="PatientIdType"/>
            <xs:element name="DateFrom" type="xs:date"/>
            <xs:element name="DateTo" type="xs:date"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="PatientPaymentHistoryResponseMessage">
        <xs:sequence>
          <xs:element name="DateOfService" type="xs:date"/>
          <xs:element name="PaymentDue" type="types:AmountType"/>
          <xs:element name="PaymentAmount" type="types:AmountType"/>
          <xs:element name="PaidDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/types">
      <xs:complexType name="AddressType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressLine1">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="AddressLine2">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="City">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="State">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Region">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="60"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="ZIP">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="CountryCode">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:length value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PayorIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CardTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelayReasonCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmtType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="12"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccessionIdType">
        <xs:restriction base="xs:string">
          <xs:pattern value="(([A-Za-z0-9][A-Za-z0-9-]*)|^)[A-Za-z0-9]"/>
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="StatusType">
        <xs:sequence>
          <xs:element name="StatusCode" type="StatusCodeType"/>
          <xs:element minOccurs="0" name="StatusMessage" type="StatusMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="StatusCodeType">
        <xs:restriction base="xs:integer">
          <xs:maxExclusive value="9999"/>
          <xs:minExclusive value="-9999"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatusMessageType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PhoneType">
        <xs:sequence>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="NPIType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SSNType">
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:totalDigits value="9"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MSPTypeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TestNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EmailAddressType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[^@]+@[^\.]+\..+"/>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LongDescriptionType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="FirstName" type="NameIdType"/>
          <xs:element minOccurs="0" name="LastName" type="NameIdType"/>
          <xs:element minOccurs="0" name="MiddleName" type="NameIdType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UnitsType">
        <xs:restriction base="xs:integer">
          <xs:totalDigits value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NarrativeDiagTyp">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProcedureNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientProductType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommentsType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PersonType">
        <xs:sequence>
          <xs:element name="Name" type="NameType"/>
          <xs:element minOccurs="0" name="DateOfBirth" type="xs:date"/>
          <xs:element minOccurs="0" name="Gender" type="DescriptionType"/>
          <xs:element minOccurs="0" name="SSN" type="SSNType"/>
          <xs:element minOccurs="0" name="Address" type="AddressType"/>
          <xs:element minOccurs="0" name="HomePhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="WorkPhone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="DescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Contact">
        <xs:sequence>
          <xs:element minOccurs="0" name="ContactName" type="DescriptionType"/>
          <xs:element minOccurs="0" name="Phone" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Fax" type="PhoneNumberType"/>
          <xs:element minOccurs="0" name="Email" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UserIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeOfService">
        <xs:restriction base="xs:string">
          <xs:maxLength value="20"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="5"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayorPriorityType">
        <xs:restriction base="xs:int">
          <xs:totalDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AbbrevType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AmountType">
        <xs:restriction base="xs:decimal">
          <xs:totalDigits value="12"/>
          <xs:fractionDigits value="2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethodType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientStatusType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="200"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ShortStrType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="10"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SmallInt">
        <xs:restriction base="xs:integer">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorizationNumberType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EpiType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SourceNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PatientIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="40"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountNameType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="60"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DemonstrationProjectIdType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.xifin.com/schema/msgHeader" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.xifin.com/schema/msgHeader">
      <xs:element name="MessageHeader">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="OrganizationName" type="xs:string"/>
            <xs:element minOccurs="0" name="SequenceNumber" type="xs:positiveInteger"/>
            <xs:element name="UserId">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="20"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="SourceApplication" type="xs:string">
              <xs:annotation>
                <xs:documentation>Name of the source application</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="OrgAlias" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="PatientPaymentHistoryResponse">
    <wsdl:part element="tns:PatientPaymentHistoryResponse" name="PatientPaymentHistoryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PatientPaymentHistoryRequest">
    <wsdl:part element="tns:PatientPaymentHistoryRequest" name="PatientPaymentHistoryRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="patientPaymentHistory">
    <wsdl:operation name="PatientPaymentHistory">
      <wsdl:input message="tns:PatientPaymentHistoryRequest" name="PatientPaymentHistoryRequest"></wsdl:input>
      <wsdl:output message="tns:PatientPaymentHistoryResponse" name="PatientPaymentHistoryResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="patientPaymentHistorySoap11" type="tns:patientPaymentHistory">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="PatientPaymentHistory">
      <soap:operation soapAction=""/>
      <wsdl:input name="PatientPaymentHistoryRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="PatientPaymentHistoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="patientPaymentHistoryService">
    <wsdl:port binding="tns:patientPaymentHistorySoap11" name="patientPaymentHistorySoap11">
      <soap:address location="https://www.xifinqa.com/prod/accession/services"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>/accession/services</con:endpoint><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="PatientPaymentHistory" bindingOperationName="PatientPaymentHistory" type="Request-Response" outputName="PatientPaymentHistoryResponse" inputName="PatientPaymentHistoryRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="edd95081-8a4b-4bef-8934-835457345a37"><con:settings/><con:call name="Request 1" wssPasswordType="PasswordDigest" id="4c726903-1806-4ad8-8e9f-705d6e31b648"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.xifinqa.com/prod/accession/services</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPaymentHistory" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:PatientPaymentHistoryRequest>
         <msg:MessageHeader>
            <msg:OrganizationName>${#Project#ORGANIZATION_NAME}</msg:OrganizationName>
            <msg:UserId>${#Project#userId}</msg:UserId>
            <msg:OrgAlias>${#Project#orgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientPaymentHistoryRequestMessage>
               <pat:PatientId>3820421</pat:PatientId>
               <pat:DateFrom>2010-08-05</pat:DateFrom>
               <pat:DateTo>2016-08-05</pat:DateTo>
            </pat:PatientPaymentHistoryRequestMessage>
         </pat:Payload>
      </pat:PatientPaymentHistoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>${#Project#username}</con:username><con:password>${#Project#password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPaymentHistory/patientPaymentHistory/PatientPaymentHistoryRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="790acaed-a281-4afc-b444-6e37490ce4f6" wadlVersion="http://wadl.dev.java.net/2009/02" name="accnREST" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://www.xifinqa.com</con:endpoint></con:endpoints><con:resource name="accession" path="/${#Project#RESTresource}/accession" id="581f34c8-dc31-4c0c-bd8b-0cb150e33133"><con:settings/><con:parameters><con:parameter><con:name>orgalias</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>accessionId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="accession-GET" id="a95bb2fd-d79e-4ed5-afff-37770eb3e773" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:acc="https://www.xifinqa.com/prod/accession912/restful/accession">acc:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:acc="http://www.xifin.com/schema/accession">acc:GetAccessionResponse</con:element></con:representation><con:request name="Request 1" id="26f746d3-c696-4b65-a975-376a34486dd9" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://www.xifinqa.com</con:endpoint><con:request/><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
    <con:entry key="accessionId" value="${#TestCase#accnId}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry><con:entry>accessionId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="createAccession" path="${#Project#RESTresource}/createAccession" id="c5eb8840-26a6-4b76-a435-3a301bf721b5"><con:settings/><con:parameters><con:parameter><con:name>orgalias</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="createAccession-POST" id="686887d8-7ecd-4d86-a946-429fb68c2b20" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:acc="http://www.xifin.com/schema/accession">acc:CreateAccessionRequest</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:acc="http://www.xifin.com/schema/accession">acc:CreateAccessionResponse</con:element></con:representation><con:request name="Request 1" id="1279647e-9a1f-45d4-a289-b76c052545cf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://www.xifinqa.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value=""/>
    <con:entry key="orgalias" value=""/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="updateAccession" path="/${#Project#RESTresource}/updateAccession" id="cca65dc9-68fe-4d70-9563-16f451dcd870"><con:settings/><con:parameters><con:parameter><con:name>orgalias</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="updateAccession-POST" id="e2498ba2-fca3-4b80-90de-395ff05f7dcf" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:acc="http://www.xifin.com/schema/accession">acc:UpdateAccessionRequest</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:acc="http://www.xifin.com/schema/accession">acc:UpdateAccessionResponse</con:element></con:representation><con:request name="Request 1" id="bebf7272-83aa-4475-adcf-28974f243915" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://www.xifinqa.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="validateAccession" path="/${#Project#RESTresource}/validateAccession" id="0caac0e1-f924-48c5-8f8a-6ada84a81e77"><con:settings/><con:parameters><con:parameter><con:name>orgalias</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="validateAccession-POST" id="f9f15ecb-937b-4afd-b6d5-71405ff7e753" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:acc="http://www.xifin.com/schema/accession">acc:ValidateAccessionResponse</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:acc="http://www.xifin.com/schema/accession">acc:ValidateAccessionRequest</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:acc="http://www.xifin.com/schema/accession">acc:ValidateAccessionRequest</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:val="https://www.xifinqa.com/prod/accessionv913/restful/validateAccession">val:Response</con:element></con:representation><con:request name="Request 1" id="da4b9844-dad6-47df-b6e7-04cc65b77950" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://www.xifinqa.com</con:endpoint><con:request/><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="accessionSearch" path="/${#Project#RESTresource}/accessionSearch" id="f47342c0-c1d1-43d8-bddd-62ee4dd91cf0"><con:settings/><con:parameters><con:parameter><con:name>orgalias</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="accessionSearch-POST" id="0f11fb5f-9d79-44db-91ee-94a9cc269e2f" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:acc="http://www.xifin.com/schema/accessionSearch">acc:AccessionSearchResponse</con:element></con:representation><con:request name="Request 1" id="d2bbcac7-6fd6-4c1b-893b-ccdc78ebb0ed" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request/><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="checkPayment" path="/${#Project#RESTresource}/patientPayment/checkPayment" id="67442ae5-4a9e-47dc-a858-504d338da1a1"><con:settings/><con:parameters><con:parameter><con:name>orgalias</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="patientPayment-checkPayment-POST" id="06791524-f99d-4d98-80f8-3cb180defe8a" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:pat="http://www.xifin.com/schema/patientPayment">pat:CheckPaymentResponse</con:element></con:representation><con:request name="Request 1" id="efaf0677-fdd8-4a47-b41f-50ba7d825ac6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request/><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite name="Accession WS-GetAccession" id="9f7e8a12-9c40-4a7b-b1ea-ea6463009a62"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-1:Accession WS-Get Accession-GetExistingAccn" searchProperties="true" id="1e7b9358-c874-44ca-a518-1f3ed9dc5159"><con:settings/><con:testStep type="groovy" name="AWS-1:Step1:Accession WS-GetExistingAccession-TestDataSetup" id="39ef8408-75da-439e-a6dc-0b8a155b249f"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //======== Get values =========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get AccnID1 value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def accnId1 = daoManagerAccnWS.getExistingAccnId(dbEnv)

    //======== Set TestCase level property values ========
    //Set AccnID1 TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnID1", accnId1)
    log.info "AccnID1=" + accnId1

    //Set PtFName TestCase-level value
    def ptFName = daoManagerAccnWS.getFnameByAccnId(accnId1, dbEnv)
    testRunner.testCase.setPropertyValue ("PtFName", ptFName)
    log.info "PtFName = " + ptFName

    //Set PtLName TestCase-level value
    def ptLName = daoManagerAccnWS.getLnameByAccnId(accnId1, dbEnv)
    testRunner.testCase.setPropertyValue ("PtLName", ptLName)
    log.info "PtLName = " + ptLName

    //Set PtDOB TestCase-level value
    def ptDOB = daoManagerAccnWS.getDobByAccnId(accnId1, dbEnv)
    testRunner.testCase.setPropertyValue ("PtDOB", ptDOB)
    log.info "PtDOB = " + ptDOB

    //Set AccnDOS TestCase-level value
    def accnDOS = daoManagerAccnWS.getDOSByAccnId(accnId1, dbEnv)
    testRunner.testCase.setPropertyValue ("accnDOS", accnDOS)
    log.info "AccnDOS = " + accnDOS</script></con:config></con:testStep><con:testStep type="request" name="AWS-1:Step2:Accession WS-GetAccession-GetExistingAccession" id="a1421405-3555-41b6-8d07-890da2310bba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>GetAccession</con:operation><con:request name="AWS-1:Step2:Accession WS-GetAccession-GetExistingAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="e77feca7-a825-47f9-8052-15442b2400ce"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:GetAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionId>${#TestCase#AccnID1}</acc:AccessionId>
         </acc:Payload>
      </acc:GetAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c7f83d3f-e9d6-4287-b532-ece3d2933f94"/><con:assertion type="XPath Match" name="ValidateDOS" id="baedf379-1eef-42f6-9c96-c89fabfe24b5"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:GetAccessionResponseMessage[1]/ns4:DateOfService[1]/text()</path><content>${#TestCase#AccnDOS}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="ValidatePatientFirstName" id="e6ebcd7c-7d87-480c-98f0-0bccd48523d1"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:GetAccessionResponseMessage[1]/ns4:PatientInfo[1]/ns4:Person[1]/ns3:Name[1]/ns3:FirstName[1]/text()</path><content>${#TestCase#PtFname}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="ValidatePatientLastName" id="9f68e3f6-aa77-40dd-9e04-d1fde4a3e0fc"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:GetAccessionResponseMessage[1]/ns4:PatientInfo[1]/ns4:Person[1]/ns3:Name[1]/ns3:LastName[1]/text()</path><content>${#TestCase#PtLname}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="ValidatePatientDOB" id="6db02cc3-8172-4060-81ee-e473015c0648"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:GetAccessionResponseMessage[1]/ns4:PatientInfo[1]/ns4:Person[1]/ns3:DateOfBirth[1]/text()</path><content>${#TestCase#PtDOB}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/GetAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>AccnID1</con:name><con:value>QATESTERAXIUW20161107043112796</con:value></con:property><con:property><con:name>PtFName</con:name><con:value>PTFNAMEYMJIL</con:value></con:property><con:property><con:name>PtLName</con:name><con:value>PTLNAMEJPPIV</con:value></con:property><con:property><con:name>PtDOB</con:name><con:value>1986-11-07</con:value></con:property><con:property><con:name>AccnDOS</con:name><con:value>2016-11-07</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-3:Accession WS-GetAccession-GetNonExistingAccession" searchProperties="true" id="24986071-bbc9-4f02-8cff-b444cd087df7"><con:settings/><con:testStep type="request" name="AWS-3:Accession WS-GetAccession-GetNonExistingAccession" id="41a43ca9-05c4-4b87-8a9b-b359a19516e9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>GetAccession</con:operation><con:request name="AWS-3:Accession WS-GetAccession-GetNonExistingAccession" wssPasswordType="PasswordDigest" id="a0133808-2cdb-415f-a230-c1c30783948e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:GetAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionId>${#TestCase#AccnID2}</acc:AccessionId>
         </acc:Payload>
      </acc:GetAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="57659d4d-a117-48de-a1c3-e91a69c811e4"/><con:assertion type="XPath Match" name="StatusMessage Validation" id="c4453528-ddfe-4c33-89f3-8416c45cbccd"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Data Not Found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>AccnID2</con:name><con:value>NonExistingAccnID</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-198:AccessionWS-GetAccession-Namespaces check" searchProperties="true" id="370e3261-c781-461e-a223-40ac41fb22e2"><con:settings/><con:testStep type="groovy" name="AWS-198:Step1:Accession WS-GetExistingAccession-TestDataSetup" id="eff2f3ef-b086-40f2-8e38-44d2a23f5c07"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //======== Get values =========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get AccnID1 value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def accnId1 = daoManagerAccnWS.getExistingAccnId(dbEnv)

    //======== Set TestCase level property values ========
    //Set AccnID1 TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnID1", accnId1)
    log.info "AccnID1=" + accnId1

    //Set PtFName TestCase-level value
    def ptFName = daoManagerAccnWS.getFnameByAccnId(accnId1, dbEnv)
    testRunner.testCase.setPropertyValue ("PtFName", ptFName)
    log.info "PtFName = " + ptFName

    //Set PtLName TestCase-level value
    def ptLName = daoManagerAccnWS.getLnameByAccnId(accnId1, dbEnv)
    testRunner.testCase.setPropertyValue ("PtLName", ptLName)
    log.info "PtLName = " + ptLName

    //Set PtDOB TestCase-level value
    def ptDOB = daoManagerAccnWS.getDobByAccnId(accnId1, dbEnv)
    testRunner.testCase.setPropertyValue ("PtDOB", ptDOB)
    log.info "PtDOB = " + ptDOB

    //Set AccnDOS TestCase-level value
    def accnDOS = daoManagerAccnWS.getDOSByAccnId(accnId1, dbEnv)
    testRunner.testCase.setPropertyValue ("accnDOS", accnDOS)
    log.info "AccnDOS = " + accnDOS</script></con:config></con:testStep><con:testStep type="request" name="AWS-198:Step2:Accession WS-GetAccession-GetExistingAccession-Namespaces check" id="957aaeb9-5e8f-48f3-9183-a72c4b1132f5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>GetAccession</con:operation><con:request name="AWS-198:Step2:Accession WS-GetAccession-GetExistingAccession-Namespaces check" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="e77feca7-a825-47f9-8052-15442b2400ce"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:GetAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionId>${#TestCase#AccnID1}</acc:AccessionId>
         </acc:Payload>
      </acc:GetAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c7f83d3f-e9d6-4287-b532-ece3d2933f94"/><con:assertion type="XPath Match" name="Namespace-SOAP-ENV-check" id="baedf379-1eef-42f6-9c96-c89fabfe24b5"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('SOAP-ENV', //ns4:GetAccessionResponse[1])</path><content>http://schemas.xmlsoap.org/soap/envelope/</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Namespace-ns2-check" id="baedf379-1eef-42f6-9c96-c89fabfe24b5"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('ns2', //ns4:GetAccessionResponse[1])</path><content>http://www.xifin.com/schema/msgHeader</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Namespace-ns3-check" id="baedf379-1eef-42f6-9c96-c89fabfe24b5"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('ns3', //ns4:GetAccessionResponse[1])</path><content>http://www.xifin.com/schema/types</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Namespace-ns4-check" id="baedf379-1eef-42f6-9c96-c89fabfe24b5"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('ns4', //ns4:GetAccessionResponse[1])</path><content>http://www.xifin.com/schema/accession</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/GetAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>AccnID1</con:name><con:value>A2014071302030239</con:value></con:property><con:property><con:name>PtFName</con:name><con:value>JENNIFER</con:value></con:property><con:property><con:name>PtLName</con:name><con:value>CHRISTIAN</con:value></con:property><con:property><con:name>PtDOB</con:name><con:value>2002-07-28</con:value></con:property><con:property><con:name>AccnDOS</con:name><con:value>2014-07-13</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Accession WS-CreateAccession" id="1bf3fdcb-1080-42ff-8232-c62baeaa706c"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-5:Accession WS-CreateAccession-CreateNewAccession" searchProperties="true" id="60595438-2db4-4b04-8dfc-e05d2e6269ce"><con:settings/><con:testStep type="groovy" name="AWS-5:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="2abfd820-6146-49c7-8745-971e601804f9"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + randomCharacter.getRandomAlphaString(5) + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + randomCharacter.getRandomAlphaString(5) + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="request" name="AWS-5:Step2:Accession WS-CreateNewAccession" id="a79560ed-48f2-41c7-a060-4917422896ff"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-5:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="bfd61d29-4266-49ed-a62b-9cca82b1be85"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="f90365b9-05a3-492d-a689-e3f160349055"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="d9f37ac6-a726-4899-89d5-64c56c9fc4e4"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-5:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="246c2bbc-616b-4311-b053-d0d8c43d2ae0"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-5:Accession WS-CreateAccession-CreateNewAccession was failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-5:Accession WS-CreateAccession-CreateNewAccession was failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-5:Accession WS-CreateAccession-CreateNewAccession was failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-5:Accession WS-CreateAccession-CreateNewAccession was failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-5:Step2:Accession WS-CreateNewAccession#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-5:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"


</script></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTERGPTAC20170824135315864</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20170824135315864</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEYRKNP</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEXWNJZ</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A172501837</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1114927050</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>300</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>T47.2X3A</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1987-08-24</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-6:Accession WS-CreateAccession-CreateDuplicateAccession" searchProperties="true" id="d6e11a11-8ffb-4563-a539-104b4e2a80dd"><con:settings/><con:testStep type="groovy" name="AWS-6:Step1:Accession WS-CreateAccession-TestDataSetup" id="9437bfef-2c6b-44d4-bae6-414164b515a0"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.clientportal.dao.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def existingAccnId = daoManagerAccnWS.getExistingAccnId(dbEnv)

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI

    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set DuplicateAccnId TestCase-level value
    testRunner.testCase.setPropertyValue ("DuplicateAccnId", existingAccnId)
    log.info "DuplicateAccnId=" + existingAccnId

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev
</script></con:config></con:testStep><con:testStep type="request" name="AWS-6:Step2:Accession WS-CreateAccession-CreateDuplicateAccession" id="50e398eb-f99a-44ec-8ecb-6138bea81cee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-6:Step2:Accession WS-CreateAccession-CreateDuplicateAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="d09553a4-a928-4714-8b56-ae085c264427"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#DuplicateAccnId}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewDOS}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0accb32c-1ef1-4bef-a6bb-3e096af47412"/><con:assertion type="XPath Match" name="ValidateCreateDuplicateAccnStatus" id="592a1a43-6191-454e-bc1c-e45391fb3fc5"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    contains(//ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text(), 'already exists in the system')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>DuplicateAccnId</con:name><con:value>A2014112502030215</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20170824135320664</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMENSNHW</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEZGATZ</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A178371696</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1114927050</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>300</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>T25.291</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-83:Accession WS-CreateAccession-CreateNewAccessionWithAllFields(Old)" searchProperties="true" id="5204a0a5-0d45-478f-baf0-e35d09d7d6a0" disabled="true"><con:settings/><con:testStep type="groovy" name="AWS-83:Step1:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-TestDataSetup" id="dc7a7a20-c931-474e-9990-578756a603ac"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.mars.dao.*;
    import com.xifin.platform.dao.*;
    import com.xifin.filemaintenancews.dao.*
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    timeStamp = new TimeStamp()
    randomCharacter = new RandomCharacter()
    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())
    daoManagerPlatform = new DaoManagerPlatform(configuration.getRpmDatabase())
    daoManagerFileMaintenanceWS = new DaoManagerFileMaintenanceWS(configuration.getRpmDatabase())

    //Get an existing Priced 3rd payor accnId and clnId
    def existAccnIdClnIdList = []
    existAccnIdClnIdList = daoManagerAccnWS.getPricedThirdPartyAccnWOErrorFromACCNAndACCNPYR(dbEnv)
    def existAccnId = existAccnIdClnIdList[0]
    log.info "existAccnId = " + existAccnId

    //Get existing cln id
    def existClnId = existAccnIdClnIdList[1]
    def existClnAbbrev = daoManagerXifinRpm.getClientAbbrevIdByClientId(existClnId, dbEnv)
    log.info "existClnAbbrev = " + existClnAbbrev

    //Get timeStamp value
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Generate random ptEPI
    def newPtEPI = "EPI" + currentDateTime
    log.info "newPtEPI = " + newPtEPI

    //Generate random ptFName, ptLName
    def newPtFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def newPtLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    log.info "newPtFName = " + newPtFName
    log.info "newPtLName = " + newPtLName

    //Get existing primary pyr abbrev and subsId and relationship abbrev
    def existPyrInfoList = []
    existPyrInfoList = daoManagerAccnWS.getPyrAbbrevSubsIdRelshpTypFromAccnPyrByAccnIdPyrPrio(existAccnId, "1", dbEnv)
    def existPyrAbbrev = existPyrInfoList[0]
    def existSubsId = existPyrInfoList[1]
    def existRelshpAbbrev = existPyrInfoList[2]
    log.info "existPyrAbbrev = " + existPyrAbbrev
    log.info "existSubsId = " + existSubsId
    log.info "existRelshpAbbrev = " + existRelshpAbbrev

    //Get Ordering Physician NPI
    //def existPhysNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    def physInfoList = []
    physInfoList = daoManagerPlatform.getPhysicianInfoFromPHYS(dbEnv)
    existPhysNPI = physInfoList[3]
    log.info "existPhysNPI = " + existPhysNPI

    //Get Ordered Test Abbrev
    def testInfoList = []
    testInfoList = daoManagerAccnWS.getTestIdFacIdFromAccnTestByAccnId(existAccnId, dbEnv)
    def existTestId = testInfoList[0]
    def existTestAbbrev = daoManagerAccnWS.getTestAbbrevFromTESTByTestId(existTestId, dbEnv)
    log.info "existTestAbbrev = " + existTestAbbrev

    //Get test POS from the component in case of profile
    def existTestFacId = testInfoList[1]
    log.info "existTestFacId = " + existTestFacId
    if (	existTestFacId == "0" ) {
    existTestFacId = daoManagerAccnWS.getFacIdFromACCNTESTByAccnIdProfId(existAccnId, existTestId, dbEnv)
    }
    //Get Test POS
    def existTestPOS = daoManagerAccnWS.getFacAbbrevFromFACByFacId(existTestFacId, dbEnv)
    log.info "existTestPOS = " + existTestPOS

    //Get Accn POS
    def existAccnPOS = daoManagerAccnWS.getPOSFromCLNFACByClnId(existClnId, dbEnv)
    log.info "existAccnPOS = " + existAccnPOS

    //Get Accn Diagnosis Code
    //def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCodeByAccnIdUserDiagOrder(existAccnId, 1, dbEnv)
    def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)
    log.info "existAccnDiagCd = " + existAccnDiagCd

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set new DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClnAbbrev", existClnAbbrev)
    log.info "ClnAbbrev = " + existClnAbbrev

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", newPtEPI)
    log.info "NewEPI = " + newPtEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", newPtFName)
    log.info "NewPtFName = " + newPtFName
    testRunner.testCase.setPropertyValue ("NewPtLName", newPtLName)
    log.info "NewPtLName = " + newPtLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", existSubsId)
    log.info "NewSubsId = " + existSubsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", existPhysNPI)
    log.info "PhysNPI = " + existPhysNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", existTestAbbrev)
    log.info "TestAbbrev = " + existTestAbbrev

    //set accn POS TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnPOS", existAccnPOS)
    log.info "AccnPOS = " + existAccnPOS

    //set test POS TestCase-level value
    testRunner.testCase.setPropertyValue ("TestPOS", existTestPOS)
    log.info "TestPOS = " + existTestPOS

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", existAccnDiagCd)
    log.info "DiagCD = " + existAccnDiagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", existPyrAbbrev)
    log.info "PayorAbbrev = " + existPyrAbbrev

    //set RelshpType TestCase-level value
    testRunner.testCase.setPropertyValue ("Relshp", existRelshpAbbrev)
    log.info "Relshp = " + existRelshpAbbrev

    //Get and Set RequisitionId
    def reqId = randomCharacter.getNonZeroRandomNumericString(10);
    testRunner.testCase.setPropertyValue ("RequisitionId", reqId)
    log.info "RequisitionId = " + context.expand('${#TestCase#RequisitionId}')

    //Get and Set Ordering Physician name (lName, fName)
    orderingPhysName = physInfoList[1] + ", " + physInfoList[2]
    testRunner.testCase.setPropertyValue ("OrderingPhysName", orderingPhysName)
    log.info "OrderingPhysName = " + context.expand('${#TestCase#OrderingPhysName}')

    //Get and Set Ordering Physician UPIN
    orderingPhysUPIN = physInfoList[4]
    testRunner.testCase.setPropertyValue ("OrderingPhysUPIN", orderingPhysUPIN)
    log.info "OrderingPhysUPIN = " + context.expand('${#TestCase#OrderingPhysUPIN}')

    //Get and Set a Random String (8 characters long)
    def randomStr = randomCharacter.getRandomAlphaString(8)
    testRunner.testCase.setPropertyValue ("RandomStr", randomStr)
    log.info "RandomStr = " + context.expand('${#TestCase#RandomStr}')

    //Get and Set DocumentId
    def docInfoList = []
    docInfoList = daoManagerFileMaintenanceWS.getDocByDocType('Notes - Client', dbEnv)
    def docId = docInfoList[0][0]
    testRunner.testCase.setPropertyValue ("DocumentId", docId)
    log.info "DocumentId = " + context.expand('${#TestCase#DocumentId}')

    //Get and Set PhlebotomistUserId
    def phlebotomistInfoList = []
    phlebotomistInfoList = daoManagerAccnWS.getGrpMemberInfoFromUSERSByGrpName('Phlebotomist', dbEnv)
    def phlebotomistUserId = phlebotomistInfoList[0]
    testRunner.testCase.setPropertyValue ("PhlebotomistUserId", phlebotomistUserId)
    log.info "PhlebotomistUserId = " + context.expand('${#TestCase#PhlebotomistUserId}')

    //Get and Set PscLocationId
    def pscLocationInfoList = []
    //'2' = Draw Station
    pscLocationInfoList = daoManagerAccnWS.getPSCInfoFromFACByFacTypId('2', dbEnv)
    def pscLocationId = pscLocationInfoList[0]
    testRunner.testCase.setPropertyValue ("PscLocationId", pscLocationId)
    log.info "PscLocationId = " + context.expand('${#TestCase#PscLocationId}')

</script></con:config></con:testStep><con:testStep type="request" name="AWS-83:Step2:Accession WS-CreateAccession-CreateNewAccessionWithAllFields" id="b90de54b-b109-4027-b6cb-4adf9bdce72f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-83:Step2:Accession WS-CreateAccession-CreateNewAccessionWithAllFields" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="0b8a8e3c-b31c-4b0b-b3b4-16db0816e436"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <!--type: AccessionIdType-->
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <!--type: boolean-->
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:ReturnErrors>false</acc:ReturnErrors>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:RequisitionId>${#TestCase#RequisitionId}</acc:RequisitionId>
               <!--Optional:-->
               <!--type: date-->
               <acc:ReceiptDate>${#TestCase#NewDOS}</acc:ReceiptDate>
               <!--type: date-->
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <!--type: TimeOfService-->
               <acc:TimeOfService>${#TestCase#NewDOS}</acc:TimeOfService>
               <!--Optional:-->
               <!--type: date-->
               <acc:AdmitDate>${#TestCase#NewDOS}</acc:AdmitDate>
               <!--Optional:-->
               <!--type: date-->
               <acc:DischargeDate>${#TestCase#NewDOS}</acc:DischargeDate>
               <!--Optional:-->
               <!--type: IdType-->
               <acc:ClientId>${#TestCase#ClnAbbrev}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--Optional:-->
                  <!--type: NameIdType-->
                  <acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <!--type: NameIdType-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <!--type: date-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <!--type: SSNType-->
                     <typ:SSN>678051120</typ:SSN>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>San Diego</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>CA</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region/>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>92111</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>US</typ:CountryCode>
                     </typ:Address>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:HomePhone>6193334327</typ:HomePhone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:WorkPhone>8583334327</typ:WorkPhone>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:Email>accnwstest@xifin.com</typ:Email>
                  </acc:Person>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PatientType>Inpatient</acc:PatientType>
                  <!--Optional:-->
                  <!--type: PatientFastingType-->
                  <acc:Fasting>Not Fasting</acc:Fasting>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PatientLocation>PSC</acc:PatientLocation>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:IndigentPercent>2</acc:IndigentPercent>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:OnsetDate>${#TestCase#NewDOS}</acc:OnsetDate>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <!--<acc:OnsetType>Initital Treatment</acc:OnsetType>-->
                  <acc:OnsetType>454</acc:OnsetType>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:AdmissionSource>1</acc:AdmissionSource>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:AdmissionType>3</acc:AdmissionType>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AccidentCause>AA</acc:AccidentCause>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:AccidentState>CA</acc:AccidentState>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <!--Optional:-->
                  <!--type: SmallInt-->
                  <acc:GravidaNumber>2</acc:GravidaNumber>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Pregnancy>false</acc:Pregnancy>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:MaritalStatus>M</acc:MaritalStatus>
                  <!--Optional:-->
                  <!--type: CommentsType-->
                  <acc:Comments>COMMENTS${#TestCase#NewAccnID}</acc:Comments>
                  <!--Optional:-->
                  <!--type: PatientStatusType-->
                  <acc:PatientStatusType>01</acc:PatientStatusType>
                  <!--Optional:-->
                  <!--type: PatientIdType-->
                  <acc:ClientSpecificPatientId>CLIENT${#TestCase#NewEPI}</acc:ClientSpecificPatientId>
                  <!--Optional:-->
                  <!--type: PatientIdType-->
                  <acc:FacilitySpecificPatientId>FACILITY${#TestCase#NewEPI}</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <!--Optional:-->
               <!--type: date-->
               <acc:PatientDemoEffectiveDate>${#TestCase#NewDOS}</acc:PatientDemoEffectiveDate>
               <!--Optional:-->
               <!--type: date-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>${#TestCase#OrderingPhysName}</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>${#TestCase#OrderingPhysUPIN}</acc:UPIN>
                  </acc:Ordering>
                  <!--Optional:-->
                  <acc:Referring>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>${#TestCase#OrderingPhysName}</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>${#TestCase#OrderingPhysUPIN}</acc:UPIN>
                  </acc:Referring>
                  <!--Optional:-->
                  <acc:Primary>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>${#TestCase#OrderingPhysName}</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>${#TestCase#OrderingPhysUPIN}</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PatientSignatureOnFile>true</acc:PatientSignatureOnFile>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PhysicianSignatureOnFile>true</acc:PhysicianSignatureOnFile>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:ReportCopyToPatient>true</acc:ReportCopyToPatient>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CallBack>false</acc:CallBack>
               <!--Optional:-->
               <!--type: PhoneNumberType-->
               <acc:CallBackPhone>212345678</acc:CallBackPhone>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:STAT>false</acc:STAT>
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:UserId>${#Project#UserId}</acc:UserId>
                  <!--type: date-->
                  <acc:ContactDate>${#TestCase#NewDOS}</acc:ContactDate>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:ContactInfo>CONTACTINFO${#TestCase#NewAccnID}</acc:ContactInfo>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:FollowUpDate>${#TestCase#NewDOS}</acc:FollowUpDate>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:FollowUpUserId>${#Project#UserId}</acc:FollowUpUserId>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:PrintableNotes>PRINTABLENOTES${#TestCase#NewAccnID}</acc:PrintableNotes>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:PrintOnStatement>false</acc:PrintOnStatement>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:FollowUpComplete>false</acc:FollowUpComplete>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Voided>false</acc:Voided>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:AdditionalReportCopy>
                  <!--type: IdType-->
                  <acc:ClientId>${#TestCase#ClnAbbrev}</acc:ClientId>
                  <!--type: DescriptionType-->
                  <acc:ContactMethodType>Call</acc:ContactMethodType>
                  <!--type: NameIdType-->
                  <acc:Name>${#TestCase#NewPtFName}</acc:Name>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>ADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>ADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>San Diego</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>CA</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region/>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>92130</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>US</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <!--type: PhoneNumberType-->
                  <acc:Phone>8587778965</acc:Phone>
                  <!--Optional:-->
                  <!--type: PhoneNumberType-->
                  <acc:Fax>8587778965</acc:Fax>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:Email>autotest@xifin.com</acc:Email>
               </acc:AdditionalReportCopy>
               <!--Zero or more repetitions:-->
               <acc:ClientQuestions>
                  <!--type: QuestionType-->
                  <acc:Question>Comments</acc:Question>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Response>RESPONSE${#TestCase#NewAccnID}</acc:Response>
               </acc:ClientQuestions>
               <!--Optional:-->
               <acc:ClinicalTrial>
                  <!--type: DescriptionType-->
                  <acc:TrialName>TRIALNAME${#TestCase#NewAccnID}</acc:TrialName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:EncounterName>ENCOUNTERNAME${#TestCase#NewAccnID}</acc:EncounterName>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:EncounterDate>${#TestCase#NewDOS}</acc:EncounterDate>
               </acc:ClinicalTrial>
               <!--Optional:-->
               <acc:ChainOfCustody>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:MroName>MRONAME${#TestCase#RandomStr}</acc:MroName>
                  <!--Optional:-->
                  <acc:MroAddress>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>MROADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>MROADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>San Diego</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>CA</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region/>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>92127</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>US</typ:CountryCode>
                  </acc:MroAddress>
                  <!--Optional:-->
                  <acc:MroContact>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <typ:ContactName>${#Project#UserId}</typ:ContactName>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:Phone>8586543213</typ:Phone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:Fax>8586543213</typ:Fax>
                     <!--Optional:-->
                     <!--type: string-->
                     <typ:Email>mrocontact@xifin.com</typ:Email>
                  </acc:MroContact>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <!--type: DescriptionType-->
                     <acc:EmployerName>XIFIN</acc:EmployerName>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:EmployerId>5566</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>EMPADD1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>EMPADD2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>SAN DIEGO</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>CA</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region/>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>92126</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>US</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Status>1</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <!--type: DescriptionType-->
                        <typ:ContactName>${#TestCase#NewPtFName}</typ:ContactName>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Phone>8585464321</typ:Phone>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Fax>8585464321</typ:Fax>
                        <!--Optional:-->
                        <!--type: string-->
                        <typ:Email>EMP@XIFIN.COM</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:ChainOfCustodyReasonType>Random</acc:ChainOfCustodyReasonType>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:SpecimenTemp>10</acc:SpecimenTemp>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SplitSpecimenCollection>false</acc:SplitSpecimenCollection>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenCollector>${#Project#UserId}</acc:SpecimenCollector>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenCollectorSignatureOnFile>false</acc:SpecimenCollectorSignatureOnFile>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenTemperatureInRange>true</acc:SpecimenTemperatureInRange>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:SpecimenTemperatureNotInRange>false</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <!--Optional:-->
               <acc:DialysisInfo>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:DialysisType>IPD</acc:DialysisType>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:Medication>Epogen</acc:Medication>
               </acc:DialysisInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <!--type: positiveInteger-->
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <!--type: ShortStrType-->
                  <acc:TransactionType>D</acc:TransactionType>
                  <!--type: TestCodeIdType-->
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <!--type: TestNameType-->
                  <acc:AlternativeTestName/>
                  <!--Optional:-->
                  <acc:Modifiers>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod1>1A</acc:Mod1>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod2>2A</acc:Mod2>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod3>3A</acc:Mod3>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Mod4>4A</acc:Mod4>
                  </acc:Modifiers>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:ManualPrice>5.88</acc:ManualPrice>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:ClientBilled>true</acc:ClientBilled>
                  <!--Zero or more repetitions:-->
                  <acc:LabMessages>
                     <!--type: IdType-->
                     <acc:Code>TNP</acc:Code>
                  </acc:LabMessages>
                  <!--Zero or more repetitions:-->
                  <acc:DiagnosisCodes>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
                     <!--Optional:-->
                     <!--type: NarrativeDiagTyp-->
                     <!--<acc:NarrativeDiag></acc:NarrativeDiag>-->
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:UserId>${#Project#UserId}</acc:UserId>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:ClientContact>${#Project#UserId}</acc:ClientContact>
                     <!--Optional:-->
                     <!--type: date-->
                     <acc:ClientContactDate>${#TestCase#NewDOS}</acc:ClientContactDate>
                     <!--Optional:-->
                     <!--type: NoteType-->
                     <acc:Comment>DXCODECOMMENT${#TestCase#NewAccnID}</acc:Comment>
                     <!--Optional:-->
                     <!--type: positiveInteger-->
                     <acc:DiagnosisCodeOrder>1</acc:DiagnosisCodeOrder>
                     <!--Optional:-->
                     <!--type: boolean-->
                     <acc:Deleted>false</acc:Deleted>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:DocumentId>${#TestCase#DocumentId}</acc:DocumentId>
                  </acc:DiagnosisCodes>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Note>NOTES${#TestCase#NewAccnID}</acc:Note>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PlaceOfService>${#TestCase#TestPOS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:RenderingPhysician>
                     <!--Optional:-->
                     <!--type: NPIType-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Name>${#TestCase#OrderingPhysName}</acc:Name>
                     <!--Optional:-->
                     <!--type: string-->
                     <acc:UPIN>${#TestCase#OrderingPhysUPIN}</acc:UPIN>
                  </acc:RenderingPhysician>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:StandingOrderId/>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:AbnReceived>true</acc:AbnReceived>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AbnReason>Routine</acc:AbnReason>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AbnComment>ABNCOMMENT${#TestCase#NewAccnID}</acc:AbnComment>
                  <!--Optional:-->
                  <!--type: UnitsType-->
                  <acc:Units>1</acc:Units>
                  <!--Optional:-->
                  <!--type: TestCodeIdType-->
                  <acc:ProfileId/>
                  <!--Zero or more repetitions:-->
                  <acc:TestQuestions>
                     <!--type: DescriptionType-->
                     <acc:Question>Visit Number</acc:Question>
                     <!--type: NoteType-->
                     <acc:Response>${#TestCase#RandomStr}</acc:Response>
                     <!--Optional:-->
                     <!--type: NoteType-->
                     <acc:ContactMethod>Call</acc:ContactMethod>
                  </acc:TestQuestions>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Result>RESULT${#TestCase#NewAccnID}</acc:Result>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SplitPayorId/>
                  <!--Optional:-->
                  <!--type: AuthorizationNumberType-->
                  <acc:AuthorizationNumber>${#TestCase#RandomStr}</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Optional:-->
               <acc:TravelFee>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:RoundTripFromLab>true</acc:RoundTripFromLab>
                  <!--Optional:-->
                  <!--type: AmountType-->
                  <acc:TripMiles>10</acc:TripMiles>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:TripStops>2</acc:TripStops>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:TripPatientCount>2</acc:TripPatientCount>
               </acc:TravelFee>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
                  <!--Optional:-->
                  <!--type: NarrativeDiagTyp-->
                  <!--<acc:NarrativeDiag></acc:NarrativeDiag>-->
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:UserId>${#Project#UserId}</acc:UserId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:ClientContact>${#Project#UserId}</acc:ClientContact>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:ClientContactDate>${#TestCase#NewDOS}</acc:ClientContactDate>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Comment>ACCNDXCODECOMMENT${#TestCase#NewAccnID}</acc:Comment>
                  <!--Optional:-->
                  <!--type: positiveInteger-->
                  <acc:DiagnosisCodeOrder>1</acc:DiagnosisCodeOrder>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <acc:Deleted>false</acc:Deleted>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:DocumentId>${#TestCase#DocumentId}</acc:DocumentId>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <!--type: DescriptionType-->
               <acc:PhlebotomistUserId>${#TestCase#PhlebotomistUserId}</acc:PhlebotomistUserId>
               <!--Optional:-->
               <!--type: string-->
               <acc:PscLocationId>${#TestCase#AccnPOS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:SpecimenInfo>
                  <!--Optional:-->
                  <!--type: nonNegativeInteger-->
                  <acc:Count>1</acc:Count>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecimenContainerCode>TYL</acc:SpecimenContainerCode>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenSourceDescription>Yellow Top Urinalysis Tube</acc:SpecimenSourceDescription>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SpecimenTempType>ROOM</acc:SpecimenTempType>
                  <!--Zero or more repetitions:-->
                  <acc:SpecimenQuestion>
                     <!--type: QuestionType-->
                     <acc:QuestionId>Comments</acc:QuestionId>
                     <!--type: DescriptionType-->
                     <acc:Response>SPECQRESPN${#TestCase#NewAccnID}</acc:Response>
                     <!--type: DescriptionType-->
                     <acc:SpecimenType>RDUL</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <!--type: PayorPriorityType-->
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <!--type: IdType-->
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PayorName>?</acc:PayorName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:DateOfBirth>${#TestCase#NewPtDOB}</acc:DateOfBirth>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:Gender>MALE</acc:Gender>
                  <!--Optional:-->
                  <!--type: string-->
                  <acc:InsuredRelationship>${#TestCase#Relshp}</acc:InsuredRelationship>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:GroupId>${#TestCase#RandomStr}</acc:GroupId>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:PlanId>${#TestCase#RandomStr}</acc:PlanId>
                  <!--Optional:-->
                  <acc:InsuredName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                     <!--Optional:-->
                     <!--type: NameIdType-->
                     <typ:MiddleName>M</typ:MiddleName>
                  </acc:InsuredName>
                  <!--Optional:-->
                  <acc:Address>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:City>San Diego</typ:City>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:State>CA</typ:State>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:Region/>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:ZIP>92111</typ:ZIP>
                     <!--Optional:-->
                     <!--anonymous type-->
                     <typ:CountryCode>US</typ:CountryCode>
                  </acc:Address>
                  <!--Optional:-->
                  <acc:Phone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:HomePhone>6193334327</typ:HomePhone>
                     <!--Optional:-->
                     <!--type: PhoneNumberType-->
                     <typ:WorkPhone>8583334327</typ:WorkPhone>
                  </acc:Phone>
                  <!--Optional:-->
                  <!--type: SSNType-->
                  <acc:InsuredSSN>678051120</acc:InsuredSSN>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:AuthorizationNumber>${#TestCase#RandomStr}</acc:AuthorizationNumber>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:ClaimNotes>CLAIMNOTES${#TestCase#NewAccnID}</acc:ClaimNotes>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:Comments>COMMENTS${#TestCase#NewAccnID}</acc:Comments>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo1>OTHERINFO1${#TestCase#NewAccnID}</acc:OtherInfo1>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo2>OTHERINFO2${#TestCase#NewAccnID}</acc:OtherInfo2>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo3>OTHERINFO3${#TestCase#NewAccnID}</acc:OtherInfo3>
                  <!--Optional:-->
                  <!--type: NoteType-->
                  <acc:OtherInfo4>OTHERINFO4${#TestCase#NewAccnID}</acc:OtherInfo4>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:GroupName>GRPNAME${#TestCase#RandomStr}</acc:GroupName>
                  <!--Optional:-->
                  <!--type: DescriptionType-->
                  <acc:CaseId>CASEID${#TestCase#RandomStr}</acc:CaseId>
                  <!--Optional:-->
                  <!--type: DelayReasonCodeType-->
                  <acc:DelayReasonCode>1</acc:DelayReasonCode>
                  <!--Optional:-->
                  <acc:EmployerInfo>
                     <!--type: DescriptionType-->
                     <acc:EmployerName>XIFIN</acc:EmployerName>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:EmployerId>5566</acc:EmployerId>
                     <!--Optional:-->
                     <acc:Address>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine1>EMPADD1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:AddressLine2>EMPADD2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:City>SAN DIEGO</typ:City>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:State>CA</typ:State>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:Region/>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:ZIP>92126</typ:ZIP>
                        <!--Optional:-->
                        <!--anonymous type-->
                        <typ:CountryCode>US</typ:CountryCode>
                     </acc:Address>
                     <!--Optional:-->
                     <!--type: DescriptionType-->
                     <acc:Status>1</acc:Status>
                     <!--Optional:-->
                     <acc:EmployerContact>
                        <!--Optional:-->
                        <!--type: DescriptionType-->
                        <typ:ContactName>${#TestCase#NewPtFName}</typ:ContactName>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Phone>8585464321</typ:Phone>
                        <!--Optional:-->
                        <!--type: PhoneNumberType-->
                        <typ:Fax>8585464321</typ:Fax>
                        <!--Optional:-->
                        <!--type: string-->
                        <typ:Email>EMP@XIFIN.COM</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <!--type: DescriptionType-->
                     <acc:EligibilityStatus>Eligible</acc:EligibilityStatus>
                     <!--type: DescriptionType-->
                     <acc:EligibilityService>XIFIN</acc:EligibilityService>
                     <!--type: date-->
                     <acc:EligibilityCheckedDate>${#TestCase#NewDOS}</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <!--type: positiveInteger-->
                     <!--<acc:EligibilityTransactionId></acc:EligibilityTransactionId>-->
                  </acc:EligibilityInfo>
                  <!--Optional:-->
                  <!--type: DemonstrationProjectIdType-->
                  <acc:DemonstrationProjectId>${#TestCase#RandomStr}</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <!--Zero or more repetitions:-->
               <acc:OccurrenceCode>
                  <!--type: IdType-->
                  <acc:OccurrenceCode>01</acc:OccurrenceCode>
                  <!--Optional:-->
                  <!--type: date-->
                  <acc:OccurrenceDate>${#TestCase#NewDOS}</acc:OccurrenceDate>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecificPyrId>ALL PAYORS</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <!--Zero or more repetitions:-->
               <acc:ValueCode>
                  <!--type: IdType-->
                  <acc:ValueCode>01</acc:ValueCode>
                  <!--Optional:-->
                  <!--type: ShortStrType-->
                  <acc:ValueAmt>1</acc:ValueAmt>
                  <!--Optional:-->
                  <!--type: IdType-->
                  <acc:SpecificPyrId>ALL PAYORS</acc:SpecificPyrId>
               </acc:ValueCode>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CheckClientBillingRules>true</acc:CheckClientBillingRules>
               <!--Optional:-->
               <!--type: ClientProductType-->
               <acc:ClientProductId>${#TestCase#RandomStr}</acc:ClientProductId>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:NoCharge>true</acc:NoCharge>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:PaidInFull>false</acc:PaidInFull>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:CreateOrUpdatePatientDemo>true</acc:CreateOrUpdatePatientDemo>
               <!--Optional:-->
               <!--type: boolean-->
               <acc:MspForm>true</acc:MspForm>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5d764021-6b37-4ed6-9ac1-294f138ef7ea"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="80462fcc-c893-4827-a221-791eb036aacb"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB" id="4517f50a-dae7-4b61-b2f0-91f8891473a3"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.mars.dao.*
    import com.xifin.utils.*
    import com.xifin.platform.dao.*
    import java.util.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-83:Step2:Accession WS-CreateAccession-CreateNewAccessionWithAllFields#Response" )

    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    //**************************************************
    //Validate PtDemoInfo
    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())
    def ptDemoInfoList = []
    ptDemoInfoList = daoManagerXifinRpm.getPtDemoInfoFromPTByEPI(context.expand('${#TestCase#NewEPI}'), dbEnv)

    ptGenderInDB = ptDemoInfoList[3]
    log.info "ptGenderInDB = " + ptGenderInDB
    //'1'=Male
    assert ptGenderInDB == '1' : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptCommentsInDB = ptDemoInfoList[13].trim()
    log.info "ptCommentsInDB = " + ptCommentsInDB
    def ptCommentsInRQ = 'COMMENTS' + context.expand('${#TestCase#NewAccnID}')
    log.info "ptCommentsInRQ = " + ptCommentsInRQ
    assert ptCommentsInDB == ptCommentsInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptMaritalStaInDB = ptDemoInfoList[14]
    log.info "ptMaritalStaInDB = " + ptMaritalStaInDB
    //'2'=Married
    assert ptMaritalStaInDB == '2' : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptSSNInDB = ptDemoInfoList[19]
    log.info "ptSSNInDB = " + ptSSNInDB
    assert ptSSNInDB == '678051120' : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptZipInDB = ptDemoInfoList[26]
    log.info "ptZipInDB = " + ptZipInDB
    assert ptZipInDB == '92111' : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    ptFNameInDB = ptDemoInfoList[20]
    log.info "ptFNameInDB = " + ptFNameInDB
    def ptFNameInRQ = context.expand('${#TestCase#NewPtFName}')
    log.info "ptFNameInRQ = " + ptFNameInRQ
    assert ptFNameInDB == ptFNameInRQ + ' M' : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    ptLNameInDB = ptDemoInfoList[21]
    log.info "ptLNameInDB = " + ptLNameInDB
    def ptLNameInRQ = context.expand('${#TestCase#NewPtLName}')
    log.info "ptLNameInRQ = " + ptLNameInRQ
    assert ptLNameInDB == ptLNameInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    timeStamp = new TimeStamp()
    ptDOBInDB = timeStamp.getConvertedDate("MM/dd/yyyy","yyyy-MM-dd",ptDemoInfoList[22])
    log.info "ptDOBInDB = " + ptDOBInDB
    def ptDOBInRQ = context.expand('${#TestCase#NewPtDOB}')
    log.info "ptDOBInRQ = " + ptDOBInRQ
    assert ptDOBInDB == ptDOBInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptADDR1InDB = ptDemoInfoList[23].trim()
    log.info "ptADDR1InDB = " + ptADDR1InDB
    def  ptADDR1InRQ = 'PTADDR1' + context.expand('${#TestCase#NewAccnID}')
    log.info "ptADDR1InRQ = " + ptADDR1InRQ
    assert ptADDR1InDB == ptADDR1InRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptADDR2InDB = ptDemoInfoList[24].trim()
    log.info "ptADDR2InDB = " + ptADDR2InDB
    def  ptADDR2InRQ = 'PTADDR2' + context.expand('${#TestCase#NewAccnID}')
    log.info "ptADDR2InRQ = " + ptADDR2InRQ
    assert ptADDR2InDB == ptADDR2InRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptHPhoneInDB = ptDemoInfoList[27].trim()
    log.info "ptHPhoneInDB = " + ptHPhoneInDB
    def ptHPhoneInRQ = '6193334327'
    log.info "ptHPhoneInRQ = " + ptHPhoneInRQ
    assert ptHPhoneInDB == ptHPhoneInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptWPhoneInDB = ptDemoInfoList[28].trim()
    log.info "ptWPhoneInDB = " + ptWPhoneInDB
    def ptWPhoneInRQ = '8583334327'
    log.info "ptWPhoneInRQ = " + ptWPhoneInRQ
    assert ptWPhoneInDB == ptWPhoneInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptEmailInDB = ptDemoInfoList[29].trim()
    log.info "ptEmailInDB = " + ptEmailInDB
    def ptEmailInRQ = 'accnwstest@xifin.com'
    log.info "ptEmailInRQ = " + ptEmailInRQ
    assert ptEmailInDB == ptEmailInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    //**************************************************
    //Validate AccnInfo

    daoManagerPlatform = new DaoManagerPlatform(configuration.getRpmDatabase())
    def accnInfoList = []
    accnInfoList = daoManagerPlatform.getAccnInfoFromACCNByAccnId(context.expand('${#TestCase#NewAccnID}'), dbEnv)

    def phlebFacAbbrevInDB = daoManagerAccnWS.getFacAbbrevFromFACByFacId(accnInfoList[45], dbEnv)
    log.info "phlebFacAbbrevInDB = " + phlebFacAbbrevInDB
    def phlebFacAbbrevInRQ = context.expand('${#TestCase#AccnPOS}')
    log.info "phlebFacAbbrevInRQ = " + phlebFacAbbrevInRQ
    assert phlebFacAbbrevInDB == phlebFacAbbrevInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def fastingTypInDB = accnInfoList[46].trim()
    log.info "fastingTypInDB = " + fastingTypInDB
    //'1' = Not Fasting
    assert fastingTypInDB == "1" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptLocInDB = accnInfoList[47].trim()
    log.info "ptLocInDB = " + ptLocInDB
    //'1' = PSC
    assert ptLocInDB == "1" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def clnAbbrevInDB = daoManagerXifinRpm.getClientAbbrevIdByClientId(accnInfoList[1], dbEnv)
    log.info "clnAbbrevInDB = " + clnAbbrevInDB
    def clnAbbrevInRQ = context.expand('${#TestCase#ClnAbbrev}')
    log.info "clnAbbrevInRQ = " + clnAbbrevInRQ
    assert clnAbbrevInDB == clnAbbrevInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def phlebIdInDB = accnInfoList[48].trim()
    log.info "phlebIdInDB = " + phlebIdInDB
    def phlebIdInRQ = context.expand('${#TestCase#PhlebotomistUserId}')
    log.info "phlebIdInRQ = " + phlebIdInRQ
    assert phlebIdInDB == phlebIdInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def reqIdInDB = accnInfoList[3].trim()
    log.info "reqIdInDB = " + reqIdInDB
    def reqIdInRQ = context.expand('${#TestCase#RequisitionId}')
    log.info "reqIdInRQ = " + reqIdInRQ
    assert reqIdInDB == reqIdInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    dosInDB = accnInfoList[4].trim()
    date = Date.parse('yyyy-MM-dd HH:mm:ss.S', dosInDB).format('yyyy-MM-dd')
    log.info "dosInDB = " + date
    def dosInRQ = context.expand('${#TestCase#NewDOS}')
    log.info "dosInRQ = " + dosInRQ
    assert date == dosInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    convertUtil = new ConvertUtil()
    def physSOFInDB = accnInfoList[13].trim()
    log.info "physSOFInDB = " + physSOFInDB
    assert convertUtil.getBoolean(physSOFInDB, false) == true : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def ptSOFInDB = accnInfoList[14].trim()
    log.info "ptSOFInDB = " + ptSOFInDB
    assert convertUtil.getBoolean(ptSOFInDB, false) == true : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def callBackInDB = accnInfoList[50].trim()
    log.info "callBackInDB = " + callBackInDB
    assert convertUtil.getBoolean(callBackInDB, false) == false : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def callBackPhnInDB = accnInfoList[51].trim()
    log.info "callBackPhnInDB = " + callBackPhnInDB
    def callBackPhnInRQ = "212345678"
    log.info "callBackPhnInRQ = " + callBackPhnInRQ
    assert callBackPhnInDB == callBackPhnInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def reportCopyPtInDB = accnInfoList[52].trim()
    log.info "reportCopyPtInDB = " + reportCopyPtInDB
    assert convertUtil.getBoolean(reportCopyPtInDB, false) == true : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def indegentInDB = accnInfoList[19].trim()
    log.info "indegentInDB = " + indegentInDB
    def indegentInRQ = "2"
    log.info "indegentInRQ = " + indegentInRQ
    assert indegentInDB == indegentInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def paidInFullInDB = accnInfoList[54].trim()
    log.info "paidInFullInDB = " + paidInFullInDB
    assert convertUtil.getBoolean(paidInFullInDB, false) == false : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def noChargeInDB = accnInfoList[55].trim()
    log.info "noChargeInDB = " + noChargeInDB
    assert convertUtil.getBoolean(noChargeInDB, false) == true : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def tripStopsInDB = accnInfoList[33].trim()
    log.info "tripStopsInDB = " + tripStopsInDB
    def tripStopsInRQ = "2"
    log.info "tripStopsInRQ = " + tripStopsInRQ
    assert tripStopsInDB == tripStopsInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def tripMilesInDB = accnInfoList[34].trim()
    log.info "tripMilesInDB = " + tripMilesInDB
    def tripMilesInRQ = "10"
    log.info "tripMilesInRQ = " + tripMilesInRQ
    assert tripMilesInDB == tripMilesInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def roundTripInDB = accnInfoList[35].trim()
    log.info "roundTripInDB = " + roundTripInDB
    assert convertUtil.getBoolean(roundTripInDB, false) == true : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def tripPtCountInDB = accnInfoList[36].trim()
    log.info "tripPtCountInDB = " + tripPtCountInDB
    def tripPtCountInRQ = "2"
    log.info "tripPtCountInRQ = " + tripPtCountInRQ
    assert tripPtCountInDB == tripPtCountInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def adminSRCInDB = accnInfoList[56].trim()
    log.info "adminSRCInDB = " + adminSRCInDB
    def adminSRCInRQ = "1"
    log.info "adminSRCInRQ = " + adminSRCInRQ
    assert adminSRCInDB == adminSRCInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def adminTypInDB = accnInfoList[60].trim()
    log.info "adminTypInDB = " + adminTypInDB
    def adminTypInRQ = "3"
    log.info "adminTypInRQ = " + adminTypInRQ
    assert adminTypInDB == adminTypInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def maritalStaInDB = accnInfoList[57].trim()
    log.info "maritalStaInDB = " + maritalStaInDB
    //'2' = Married
    assert maritalStaInDB == "2" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def emergencyInDB = accnInfoList[58].trim()
    log.info "emergencyInDB = " + emergencyInDB
    assert convertUtil.getBoolean(emergencyInDB, false) == false : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def accidentCauseInDB = accnInfoList[59].trim()
    log.info "accidentCauseInDB = " + accidentCauseInDB
    //'1' = AA
    assert accidentCauseInDB == "1" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def accidentStInDB = accnInfoList[63].trim()
    log.info "accidentStInDB = " + accidentStInDB
    assert accidentStInDB == "CA" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def pregnancyInDB = accnInfoList[64].trim()
    log.info "pregnancyInDB = " + pregnancyInDB
    assert convertUtil.getBoolean(pregnancyInDB, false) == false : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def gravidaInDB = accnInfoList[65].trim()
    log.info "gravidaInDB = " + gravidaInDB
    def gravidaInRQ = "2"
    log.info "gravidaInRQ = " + gravidaInRQ
    assert gravidaInDB == gravidaInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def dischargeDtInDB = accnInfoList[41].trim()
    def date = Date.parse('yyyy-MM-dd HH:mm:ss.S', dischargeDtInDB).format('yyyy-MM-dd')
    log.info "dischargeDtInDB = " + date
    def dischargeDtInRQ = context.expand('${#TestCase#NewDOS}')
    log.info "dischargeDtInRQ = " + dischargeDtInRQ
    assert date == dischargeDtInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def adminDtInDB = accnInfoList[40].trim()
    date = Date.parse('yyyy-MM-dd HH:mm:ss.S', adminDtInDB).format('yyyy-MM-dd')
    log.info "adminDtInDB = " + date
    def adminDtInRQ = context.expand('${#TestCase#NewDOS}')
    log.info "adminDtInRQ = " + adminDtInRQ
    assert date == adminDtInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def onsetDtInDB = accnInfoList[61].trim()
    date = Date.parse('yyyy-MM-dd HH:mm:ss.S', onsetDtInDB).format('yyyy-MM-dd')
    log.info "onsetDtInDB = " + date
    def onsetDtInRQ = context.expand('${#TestCase#NewDOS}')
    log.info "onsetDtInRQ = " + onsetDtInRQ
    assert date == onsetDtInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    def onsetTypInDB = accnInfoList[62].trim()
    log.info "onsetTypInDB = " + onsetTypInDB
    assert onsetTypInDB == "2" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

    //**************************************************
    //Validate Accn_Pyr Info

    // TO-DO

    //************** Need to complete later ****************//
    /*
    select * from accn_pyr where pk_accn_id = 'QATESTER20160518133905104'

    select * from accn_test where fk_accn_id = 'QATESTER20160518133905104'

    select * from accn_test_msg where fk_accn_id = 'QATESTER20160518133905104'

    select * from accn_diag where pk_accn_id = 'QATESTER20160518133905104'

    select * from ACCN_CNTCT where pk_accn_id = 'QATESTER20160518133905104'

    select * from accn_phys where fk_accn_id = 'QATESTER20160518133905104'

    select * from ACCN_CLN_Q where pk_accn_id = 'QATESTER20160518133905104'

    //below are lower priorities
    select * from ACCN_OCCURRENCE  where fk_accn_id = 'QATESTER20160518133905104'  //

    select * from ACCN_VALUE_CODE   where fk_accn_id = 'QATESTER20160518133905104'  //

    select * from ACCN_CLINTRL where pk_accn_id = 'QATESTER20160518133905104'//

    select * from ACCN_COC where pk_accn_id = 'QATESTER20160518133905104'//

    select * from ACCN_SPCMN where pk_accn_id = 'QATESTER20160518133905104'//
    */

</script></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20160620103715169</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2016-06-20</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1986-06-20</con:value></con:property><con:property><con:name>ClnAbbrev</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20160620103715169</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMENPCJM</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMETBJHZ</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A239714416</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1316944119</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>300</con:value></con:property><con:property><con:name>AccnPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>TestPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>S37.022D</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>XYZ</con:value></con:property><con:property><con:name>Relshp</con:name><con:value>18</con:value></con:property><con:property><con:name>RequisitionId</con:name><con:value>9516637485</con:value></con:property><con:property><con:name>OrderingPhysName</con:name><con:value>SMITH, JON ANTHONY</con:value></con:property><con:property><con:name>OrderingPhysUPIN</con:name><con:value>A34303</con:value></con:property><con:property><con:name>RandomStr</con:name><con:value>SXCEKNVL</con:value></con:property><con:property><con:name>DocumentId</con:name><con:value>100</con:value></con:property><con:property><con:name>PhlebotomistUserId</con:name><con:value>xthammond</con:value></con:property><con:property><con:name>PscLocationId</con:name><con:value>2062</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-83:AccessionWS-CreateAccession-CreatedNewAccessionWithAllFields" searchProperties="true" id="7bf62ec9-6cb2-49eb-abb4-8246cfad54f5"><con:settings/><con:testStep type="groovy" name="AWS-83:Step1:AccessionWS-CreateAccession-CreatedNewAccessionWithAllFields-SetupData" id="8599c688-2201-46e9-b2b7-4923e96bb442"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.filemaintenancews.dao.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.mars.dao.*;
    import com.xifin.payorws.dao.*;
    import static java.util.Calendar.*
    import com.xifin.platform.dao.*;

    //======== Get values ==========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    RandomCharacter randomCharacter = new RandomCharacter();
    TimeStamp timeStamp = new TimeStamp();
    DaoManagerAccnWS
    DaoManagerFileMaintenanceWS daoManagerFileMaintenanceWS = new DaoManagerFileMaintenanceWS(configuration.getRpmDatabase());
    DaoManagerXifinRpm
    DaoManagerPayorWS daoManagerPayorWS = new DaoManagerPayorWS(configuration.getRpmDatabase());


    //Get timeStamp value
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get an existing Priced 3rd payor accnId and clnId
    def existAccnIdClnIdList = []
    existAccnIdClnIdList = daoManagerAccnWS.getPricedThirdPartyAccnWOErrorFromACCNAndACCNPYR(dbEnv)
    def existAccnId = existAccnIdClnIdList[0]
    log.info "existAccnId = " + existAccnId

    //Get existing cln id
    def existClnId = existAccnIdClnIdList[1]
    def existClnAbbrev = daoManagerXifinRpm.getClientAbbrevIdByClientId(existClnId, dbEnv)
    log.info "existClnAbbrev = " + existClnAbbrev





    //def listPTClnLnk = daoManagerAccnWS.getRandomPTClnLnkFromPT_CLN_LNK(dbEnv)
    //def AccessionId = randomCharacter.getRandomAlphaNumericString(10)
    testRunner.testCase.setPropertyValue ("AccessionId", "QATESTER" + currentDateTime)
    log.info "AccessionId = " + "QATESTER" + currentDateTime
    //setProperty("AccessionId",AccessionId)

    def RequisitionId = randomCharacter.getNonZeroRandomNumericString(10);//randomCharacter.getNonZeroRandomNumericString(2)
    setProperty("RequisitionId",RequisitionId)

    def ReceiptDate = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",2)
    setProperty("ReceiptDate",ReceiptDate)

    //def DateOfService = timeStamp.getPreviousDate("yyyy-MM-dd",3)
    testRunner.testCase.setPropertyValue ("DateOfServiceate", currentDate)
    log.info "DateOfServiceate = " + currentDate
    //setProperty("DateOfServiceate",DateOfService)

    def TimeOfService = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("TimeOfService",TimeOfService)

    def AdmitDate = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("AdmitDate",AdmitDate)

    def DischargeDate = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("DischargeDate",DischargeDate)

    def ClientId = existClnAbbrev//listPTClnLnk.get(0)
    setProperty("ClientId",ClientId)

    def patientInfo = daoManagerAccnWS.getExistingPatientId(dbEnv)

    //def PatientId = patientInfo.get(0)
    def PatientId = "EPI" + currentDateTime
    setProperty("PatientId",PatientId)

    def PatientFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)//randomCharacter.getRandomAlphaNumericString(10)
    setProperty("PatientFName",PatientFName)

    def PatientLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)//randomCharacter.getRandomAlphaNumericString(10)
    setProperty("PatientLName",PatientLName)

    def PatientMName = "M"//randomCharacter.getRandomAlphaNumericString(10)
    setProperty("PatientMName",PatientMName)

    def PatientDateOfBirth = timeStamp.getPreviousDate("yyyy-MM-dd",8999)
    setProperty("PatientDateOfBirth",PatientDateOfBirth)

    def PatientGender = "2"
    setProperty("PatientGender",PatientGender)

    def PatientSSN = daoManagerAccnWS.getExistingPtSSN(dbEnv)
    setProperty("PatientSSN",PatientSSN)

    def AddressLine1 = "PTADDR1" + randomCharacter.getRandomAlphaNumericString(10)
    setProperty("AddressLine1",AddressLine1)

    def AddressLine2 = "PTADDR1" + randomCharacter.getRandomAlphaNumericString(10)
    setProperty("AddressLine2",AddressLine2)

    def zipInfo = daoManagerFileMaintenanceWS.getFullZipCodeInfoFromZIP(dbEnv)

    def City = zipInfo.get(1)
    setProperty("City",City)

    def State = zipInfo.get(2)
    setProperty("State",State)

    def ZIP = zipInfo.get(0)
    setProperty("ZIP",ZIP)

    def Region = zipInfo.get(2)
    setProperty("Region",Region)

    def CountryCode = zipInfo.get(4)
    setProperty("CountryCode",CountryCode)

    def HomePhone = "6193334327"//randomCharacter.getNonZeroRandomNumericString(10)
    setProperty("HomePhone",HomePhone)

    def WorkPhone = "8583334327"//randomCharacter.getNonZeroRandomNumericString(10)
    setProperty("WorkPhone",WorkPhone)

    def Email = randomCharacter.getRandomAlphaString(5)+"@GMAIL.COM"
    setProperty("Email",Email)

    def PatientType = daoManagerAccnWS.getRandomPatientTypeFromPT_TYP(dbEnv).get(0)
    setProperty("PatientType",PatientType)

    def FastingType = "Not Fasting"//daoManagerAccnWS.getRandomFastingTypeFromFASTING_TYP(dbEnv).get(0)
    setProperty("FastingType",FastingType)

    def PatientLocation = "PSC"//Region
    setProperty("PatientLocation",PatientLocation)

    def IndigentPercent = "2"
    setProperty("IndigentPercent",IndigentPercent)

    def OnsetDate = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("OnsetDate",OnsetDate)

    def OnsetType = daoManagerAccnWS.getRandomOnsetTypeFromONSET_TYP(dbEnv).get(1)
    setProperty("OnsetType",OnsetType)

    def AdmissionSource = daoManagerAccnWS.getRandomAdmissionSourceTypeFromADMISSION_SRC_TYP(dbEnv).get(1)
    setProperty("AdmissionSource",AdmissionSource)

    def AdmissionType = "3"//daoManagerAccnWS.getRandomAdmissionTypeFromADMISSION_TYPE_TYP(dbEnv).get(1)
    setProperty("AdmissionType",AdmissionType)

    def AccidentCause = daoManagerAccnWS.getRandomAccidentCauseTypeFromACCIDENT_CAUSE_TYP(dbEnv).get(1)
    setProperty("AccidentCause",AccidentCause)

    def AccidentState = Region
    setProperty("AccidentState",AccidentState)

    def GravidaNumber = randomCharacter.getNonZeroRandomNumericString(1)
    setProperty("GravidaNumber",GravidaNumber)

    def Pregnancy = "false"//randomCharacter.getNonZeroRandomNumericString(2)
    setProperty("Pregnancy",Pregnancy)

    def MaritalStatus = daoManagerAccnWS.getRandomMaritalStatusTypeFromMARITAL_STATUS_TYP(dbEnv).get(0)
    setProperty("MaritalStatus",MaritalStatus)

    def Comments = "AUTOMCOMMENTS" + randomCharacter.getRandomAlphaString(10)
    setProperty("Comments",Comments)

    def PatientStatusType = daoManagerAccnWS.getRandomPatientStatusTypeFromPT_STA_TYP(dbEnv).get(0)
    setProperty("PatientStatusType",PatientStatusType)

    def ClientSpecificPatientId = PatientId//listPTClnLnk.get(1)
    setProperty("ClientSpecificPatientId",ClientSpecificPatientId)

    def FacilitySpecificPatientId = PatientId//daoManagerAccnWS.getRandomPatientTypeFromPT_TYP(dbEnv).get(1)
    setProperty("FacilitySpecificPatientId",FacilitySpecificPatientId)

    def PatientDemoEffectiveDate = timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("PatientDemoEffectiveDate",PatientDemoEffectiveDate)

    def FinalReportedDate = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("FinalReportedDate",FinalReportedDate)


    //Get Ordering Physician NPI
    def physInfoList = []
    physInfoList = daoManagerPlatform.getPhysicianInfoFromPHYS(dbEnv)
    existPhysNPI = physInfoList[3]
    log.info "existPhysNPI = " + existPhysNPI

    def NPI = existPhysNPI//daoManagerAccnWS.getPhysicianNPI(dbEnv)
    setProperty("NPI",NPI)

    def Name = physInfoList[1] + ", " + physInfoList[2]//randomCharacter.getRandomAlphaString(10)
    setProperty("Name",Name)

    def UPIN = physInfoList[4]//randomCharacter.getRandomAlphaString(8)
    setProperty("UPIN",UPIN)

    def ReferringNPI = existPhysNPI//daoManagerAccnWS.getPhysicianNPI(dbEnv)
    setProperty("ReferringNPI",ReferringNPI)

    def ReferringName = physInfoList[1] + ", " + physInfoList[2]//randomCharacter.getRandomAlphaString(10)
    setProperty("ReferringName",ReferringName)

    def ReferringUPIN = physInfoList[4]//randomCharacter.getRandomAlphaString(8)
    setProperty("ReferringUPIN",ReferringUPIN)

    def PrimaryNPI = existPhysNPI//daoManagerAccnWS.getPhysicianNPI(dbEnv)
    setProperty("PrimaryNPI",PrimaryNPI)

    def PrimaryName = physInfoList[1] + ", " + physInfoList[2]//randomCharacter.getRandomAlphaString(10)
    setProperty("PrimaryName",PrimaryName)

    def PrimaryUPIN = physInfoList[4]//randomCharacter.getRandomAlphaString(8)
    setProperty("PrimaryUPIN",PrimaryUPIN)

    def CallBackPhone = "6193334327"//randomCharacter.getNonZeroRandomNumericString(10)
    setProperty("CallBackPhone",CallBackPhone)

    def UserId = "QATESTER"//daoManagerAccnWS.getRandomUserFromUSERS(dbEnv).get(11)
    setProperty("UserId",UserId)

    def ContactDate = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("ContactDate",ContactDate)

    def ContactInfo =  "AUTOTESTCONTACT" + randomCharacter.getNonZeroRandomNumericString(10)
    setProperty("ContactInfo",ContactInfo)

    def FollowUpDate =  currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("FollowUpDate",FollowUpDate)

    def FollowUpUserId =  daoManagerAccnWS.getRandomUserFromUSERS(dbEnv).get(11)
    setProperty("FollowUpUserId",FollowUpUserId)

    def PrintableNotes =  "AUTOTESTNOTES" + randomCharacter.getNonZeroRandomNumericString(10)
    setProperty("PrintableNotes",PrintableNotes)

    def ContactMethodType =  daoManagerAccnWS.getRandomContactMethodFromCNTCT_MTHD(dbEnv).get(0)
    setProperty("ContactMethodType",ContactMethodType)

    def AdditionalReportCopyName = randomCharacter.getRandomAlphaString(10)
    setProperty("AdditionalReportCopyName",AdditionalReportCopyName)

    def Question = daoManagerAccnWS.getRandomQuestionFromQUESTION(dbEnv).get(0)
    setProperty("Question",Question)

    def Response = "AUTORESPONSE" + randomCharacter.getRandomAlphaString(8)
    setProperty("Response",Response)

    def TrialName = "AUTOTRIAL" + randomCharacter.getRandomAlphaString(8)
    setProperty("TrialName",TrialName)

    def EncounterName = "AUTOENCOUNTER" + randomCharacter.getRandomAlphaString(8)
    setProperty("EncounterName",EncounterName)

    def EncounterDate =  currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("EncounterDate",EncounterDate)

    def MroName = "AUTOMRO" + randomCharacter.getRandomAlphaString(8)
    setProperty("MroName",MroName)

    def ContactName = "AUTOCONTACT" + randomCharacter.getRandomAlphaString(8)
    setProperty("ContactName",ContactName)

    def Phone =  "8583334327"//randomCharacter.getNonZeroRandomNumericString(10)
    setProperty("Phone",Phone)

    def Fax =  "8583334327"//randomCharacter.getNonZeroRandomNumericString(10)
    setProperty("Fax",Fax)

    def EmployerName = "AUTOEMP" + randomCharacter.getRandomAlphaString(8)
    setProperty("EmployerName",EmployerName)

    def EmployerId = randomCharacter.getNonZeroRandomNumericString(3)
    setProperty("EmployerId",EmployerId)

    def EmployerStatus = daoManagerAccnWS.getRandomEmploymentStatusTYPFromEMPLOYMENT_STA_TYP(dbEnv).get(0)
    setProperty("EmployerStatus",EmployerStatus)

    def ChainOfCustodyReasonType = "Random"//randomCharacter.getRandomAlphaString(8)
    setProperty("ChainOfCustodyReasonType",ChainOfCustodyReasonType)

    def SpecimenTemp = daoManagerAccnWS.getRandomSpecTempTypFromSPEC_TEMP_TYP(dbEnv).get(1)
    setProperty("SpecimenTemp",SpecimenTemp)

    def SpecimenCollector = "QATESTER"//randomCharacter.getRandomAlphaString(8)
    setProperty("SpecimenCollector",SpecimenCollector)

    def DialysisType = daoManagerAccnWS.getRandomDialTypFromDIAL_TYP(dbEnv).get(0)
    setProperty("DialysisType",DialysisType)

    def Medication = daoManagerAccnWS.getRandomMedicationTypFromMED_TYP(dbEnv).get(0)
    setProperty("Medication",Medication)

    def TestSequenceNumber = "1"//randomCharacter.getNonZeroRandomNumericString(6)
    setProperty("TestSequenceNumber",TestSequenceNumber)

    def TransactionType = "D"//"D/+"
    setProperty("TransactionType",TransactionType)

    //Get Ordered Test Abbrev
    def testInfoList = []
    testInfoList = daoManagerAccnWS.getTestIdFacIdFromAccnTestByAccnId(existAccnId, dbEnv)
    def existTestId = testInfoList[0]
    def existTestAbbrev = daoManagerAccnWS.getTestAbbrevFromTESTByTestId(existTestId, dbEnv)
    log.info "existTestAbbrev = " + existTestAbbrev

    def TestId = existTestAbbrev//daoManagerAccnWS.getTestAbbrev(dbEnv)
    setProperty("TestId",TestId)

    def AlternativeTestName = randomCharacter.getRandomAlphaString(8)
    setProperty("AlternativeTestName",AlternativeTestName)

    def Mod1 = "1A"//randomCharacter.getRandomAlphaString(2)
    setProperty("Mod1",Mod1)

    def Mod2 = "2A"//randomCharacter.getRandomAlphaString(2)
    setProperty("Mod2",Mod2)

    def Mod3 = "3A"//randomCharacter.getRandomAlphaString(2)
    setProperty("Mod3",Mod3)

    def Mod4 = "4A"//randomCharacter.getRandomAlphaString(2)
    setProperty("Mod4",Mod4)

    def ManualPrice = randomCharacter.getNonZeroRandomNumericString(2)
    setProperty("ManualPrice",ManualPrice)

    def LabMessagesCode = "TNP"//randomCharacter.getNonZeroRandomNumericString(8)
    setProperty("LabMessagesCode",LabMessagesCode)

    def DiagnosisCode = daoManagerAccnWS.getDiagnosisCode(dbEnv)
    setProperty("DiagnosisCode",DiagnosisCode)

    //def NarrativeDiag = randomCharacter.getRandomAlphaString(2)
    //setProperty("NarrativeDiag",NarrativeDiag)

    def DiagnosisCodeOrder = "1"//randomCharacter.getNonZeroRandomNumericString(2)
    setProperty("DiagnosisCodeOrder",DiagnosisCodeOrder)



    //Get and Set DocumentId
    def docInfoList = []
    docInfoList = daoManagerFileMaintenanceWS.getDocByDocType('Notes - Client', dbEnv)
    def docId = docInfoList[0][0]
    testRunner.testCase.setPropertyValue ("DocumentId", docId)
    log.info "DocumentId = " + context.expand('${#TestCase#DocumentId}')


    //def DocumentId = randomCharacter.getNonZeroRandomNumericString(5)
    //setProperty("DocumentId",DocumentId)

    def Note = "AUTONOTES" + randomCharacter.getRandomAlphaString(15)
    setProperty("Note",Note)


    //Get test POS from the component in case of profile
    def existTestFacId = testInfoList[1]
    log.info "existTestFacId = " + existTestFacId
    if (	existTestFacId == "0" ) {
    existTestFacId = daoManagerAccnWS.getFacIdFromACCNTESTByAccnIdProfId(existAccnId, existTestId, dbEnv)
    }
    //Get Test POS
    def existTestPOS = daoManagerAccnWS.getFacAbbrevFromFACByFacId(existTestFacId, dbEnv)
    log.info "existTestPOS = " + existTestPOS

    //Get Accn POS
    def existAccnPOS = daoManagerAccnWS.getPOSFromCLNFACByClnId(existClnId, dbEnv)
    log.info "existAccnPOS = " + existAccnPOS

    def PlaceOfService = existTestPOS//randomCharacter.getRandomAlphaString(10)
    setProperty("PlaceOfService",PlaceOfService)

    def FinalReportDate = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("FinalReportDate",FinalReportDate)

    def StandingOrderId = randomCharacter.getRandomAlphaString(10)
    setProperty("StandingOrderId",StandingOrderId)

    def AbnReason = "Routine"//randomCharacter.getRandomAlphaString(10)
    setProperty("AbnReason",AbnReason)

    def AbnComment = "ABNCOMMENT" + randomCharacter.getRandomAlphaString(10)
    setProperty("AbnComment",AbnComment)

    def Units = "1"//randomCharacter.getNonZeroRandomNumericString(3)
    setProperty("Units",Units)

    //def ProfileId = daoManagerXifinRpm.getProfileTest(dbEnv).get(0)
    //setProperty("ProfileId",ProfileId)

    def ContactMethod = daoManagerAccnWS.getRandomContactMethodFromCNTCT_MTHD(dbEnv).get(0)
    setProperty("ContactMethod",ContactMethod)

    def Result = "AUTORESULT" + randomCharacter.getRandomAlphaString(10)
    setProperty("Result",Result)

    def SplitPayorId = daoManagerFileMaintenanceWS.getPayorHaveFeeSchedule(dbEnv)
    setProperty("SplitPayorId",SplitPayorId)

    def AuthorizationNumber = randomCharacter.getNonZeroRandomNumericString(5)
    setProperty("AuthorizationNumber",AuthorizationNumber)

    def TripMiles = randomCharacter.getNonZeroRandomNumericString(2)
    setProperty("TripMiles",TripMiles)

    def TripStops = randomCharacter.getNonZeroRandomNumericString(1)
    setProperty("TripStops",TripStops)

    def TripPatientCount = TripStops//randomCharacter.getNonZeroRandomNumericString(3)
    setProperty("TripPatientCount",TripPatientCount)


    //Get and Set PhlebotomistUserId
    def phlebotomistInfoList = []
    phlebotomistInfoList = daoManagerAccnWS.getGrpMemberInfoFromUSERSByGrpName('Phlebotomist', dbEnv)
    def phlebotomistUserId = phlebotomistInfoList[0]
    testRunner.testCase.setPropertyValue ("PhlebotomistUserId", phlebotomistUserId)
    log.info "PhlebotomistUserId = " + context.expand('${#TestCase#PhlebotomistUserId}')

    //Get and Set PscLocationId
    def pscLocationInfoList = []
    //'2' = Draw Station
    pscLocationInfoList = daoManagerAccnWS.getPSCInfoFromFACByFacTypId('2', dbEnv)
    def pscLocationId = pscLocationInfoList[0]
    testRunner.testCase.setPropertyValue ("PscLocationId", pscLocationId)
    log.info "PscLocationId = " + context.expand('${#TestCase#PscLocationId}')

    //def PhlebotomistUserId = randomCharacter.getRandomAlphaString(3)
    //setProperty("PhlebotomistUserId",PhlebotomistUserId)

    //def PscLocationId = randomCharacter.getRandomAlphaString(5)
    //setProperty("PscLocationId",PscLocationId)

    def SpecimenInfoCount = "1"//randomCharacter.getNonZeroRandomNumericString(2)
    setProperty("SpecimenInfoCount",SpecimenInfoCount)

    def SpecimenContainerCode = "TYL"//randomCharacter.getNonZeroRandomNumericString(4)
    setProperty("SpecimenContainerCode",SpecimenContainerCode)

    def SpecimenSourceDescription = "Yellow Top Urinalysis Tube"//randomCharacter.getNonZeroRandomNumericString(10)
    setProperty("SpecimenSourceDescription",SpecimenSourceDescription)

    def SpecimenTempType = daoManagerAccnWS.getRandomSpecTempTypFromSPEC_TEMP_TYP(dbEnv).get(0)
    setProperty("SpecimenTempType",SpecimenTempType)

    def SpecimenType = daoManagerAccnWS.getRandomSpecTypFromSPCMN_TYP(dbEnv).get(0)
    setProperty("SpecimenType",SpecimenType)

    def PayorPriority = "1"
    setProperty("PayorPriority",PayorPriority)

    //def PayorPriorityType = randomCharacter.getNonZeroRandomNumericString(2)
    //setProperty("PayorPriorityType",PayorPriorityType)

    //Get existing primary pyr abbrev and subsId and relationship abbrev
    def existPyrInfoList = []
    existPyrInfoList = daoManagerAccnWS.getPyrAbbrevSubsIdRelshpTypFromAccnPyrByAccnIdPyrPrio(existAccnId, "1", dbEnv)
    def existPyrAbbrev = existPyrInfoList[0]
    def existSubsId = existPyrInfoList[1]
    def existRelshpAbbrev = existPyrInfoList[2]
    log.info "existPyrAbbrev = " + existPyrAbbrev
    log.info "existSubsId = " + existSubsId
    log.info "existRelshpAbbrev = " + existRelshpAbbrev








    def PayorId = existPyrAbbrev//daoManagerFileMaintenanceWS.getPayorHaveFeeSchedule(dbEnv)
    setProperty("PayorId",PayorId)

    //def PayorName = randomCharacter.getRandomAlphaString(5)
    //setProperty("PayorName",PayorName)

    def SubscriberId = existSubsId//randomCharacter.getRandomAlphaString(2)
    setProperty("SubscriberId",SubscriberId)

    def InsuredRelationship = existRelshpAbbrev//randomCharacter.getRandomAlphaString(2)
    setProperty("InsuredRelationship",InsuredRelationship)

    def GroupId = randomCharacter.getRandomAlphaString(2)
    setProperty("GroupId",GroupId)

    def PlanId = randomCharacter.getRandomAlphaString(2)
    setProperty("PlanId",PlanId)

    def InsuredSSN = "678051120"//randomCharacter.getNonZeroRandomNumericString(2)
    setProperty("InsuredSSN",InsuredSSN)

    def GroupName = randomCharacter.getRandomAlphaString(5)
    setProperty("GroupName",GroupName)

    def CaseId = randomCharacter.getRandomAlphaString(5)
    setProperty("CaseId",CaseId)

    def DelayReasonCode = "1" //randomCharacter.getRandomAlphaString(5)
    setProperty("DelayReasonCode",DelayReasonCode)

    def EligibilityStatus =daoManagerAccnWS.getRandomEligibilityStatusTypFromELIG_STA_TYP(dbEnv).get(0)
    setProperty("EligibilityStatus",EligibilityStatus)

    def EligibilityService = "XIFIN" //randomCharacter.getRandomAlphaString(5)
    setProperty("EligibilityService",EligibilityService)

    def EligibilityCheckedDate = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("EligibilityCheckedDate",EligibilityCheckedDate)

    //def EligibilityTransactionId = randomCharacter.getNonZeroRandomNumericString(5)
    //setProperty("EligibilityTransactionId",EligibilityTransactionId)

    def DemonstrationProjectId =randomCharacter.getRandomAlphaString(5)
    setProperty("DemonstrationProjectId",DemonstrationProjectId)

    def OccurrenceCode = daoManagerAccnWS.getRandomOccurrenceCodeTypFromOCCURRENCE_CODE_TYP(dbEnv).get(2)
    setProperty("OccurrenceCode",OccurrenceCode)

    def OccurrenceDate = currentDate//timeStamp.getPreviousDate("yyyy-MM-dd",3)
    setProperty("OccurrenceDate",OccurrenceDate)

    def ValueCode = daoManagerAccnWS.getRandomValueCodeTypFromVALUE_CODE_TYP(dbEnv).get(2)
    setProperty("ValueCode",ValueCode)

    def ValueAmt = randomCharacter.getNonZeroRandomNumericString(1)
    setProperty("ValueAmt",ValueAmt)

    def ClientProductId = randomCharacter.getRandomAlphaString(5)//daoManagerAccnWS.getRandomClientProductTypFromCLN_PRODUCT_TYP(dbEnv).get(2)
    setProperty("ClientProductId",ClientProductId)




    public void setProperty(String key, String value){
    log.info "$key = $value"
    testRunner.testCase.setPropertyValue (key, value)
    }
</script></con:config></con:testStep><con:testStep type="request" name="AWS-83:Step2:AccessionWS-CreateAccession-CreatedNewAccessionWithAllFields-SendRequest" id="d17339b8-a7df-44a1-bcdc-800962062164"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-83:Step2:AccessionWS-CreateAccession-CreatedNewAccessionWithAllFields-SendRequest" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="9b9d36e5-3398-414d-9f48-445641ed6083"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#AccessionId}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:RequisitionId>${#TestCase#RequisitionId}</acc:RequisitionId>
               <acc:ReceiptDate>${#TestCase#ReceiptDate}</acc:ReceiptDate>
               <acc:DateOfService>${#TestCase#DateOfServiceate}</acc:DateOfService>
               <acc:TimeOfService>${#TestCase#TimeOfService}</acc:TimeOfService>
               <acc:AdmitDate>${#TestCase#AdmitDate}</acc:AdmitDate>
               <acc:DischargeDate>${#TestCase#DischargeDate}</acc:DischargeDate>
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <acc:PatientInfo>
                  <acc:PatientId>${#TestCase#PatientId}</acc:PatientId>
                  <acc:Person>
                     <typ:Name>
                        <typ:FirstName>${#TestCase#PatientFName}</typ:FirstName>
                        <typ:LastName>${#TestCase#PatientLName}</typ:LastName>
                        <typ:MiddleName>${#TestCase#PatientMName}</typ:MiddleName>
                     </typ:Name>
                     <typ:DateOfBirth>${#TestCase#PatientDateOfBirth}</typ:DateOfBirth>
                     <typ:Gender>${#TestCase#PatientGender}</typ:Gender>
                     <typ:SSN>${#TestCase#PatientSSN}</typ:SSN>
                     <typ:Address>
                        <typ:AddressLine1>${#TestCase#AddressLine1}</typ:AddressLine1>
                        <typ:AddressLine2>${#TestCase#AddressLine2}</typ:AddressLine2>
                        <typ:City>${#TestCase#City}</typ:City>
                        <typ:State>${#TestCase#State}</typ:State>
                        <typ:Region>${#TestCase#Region}</typ:Region>
                        <typ:ZIP>${#TestCase#ZIP}</typ:ZIP>
                        <typ:CountryCode>${#TestCase#CountryCode}</typ:CountryCode>
                     </typ:Address>
                     <typ:HomePhone>${#TestCase#HomePhone}</typ:HomePhone>
                     <typ:WorkPhone>${#TestCase#WorkPhone}</typ:WorkPhone>
                     <typ:Email>${#TestCase#Email}</typ:Email>
                  </acc:Person>
                  <acc:PatientType>${#TestCase#PatientType}</acc:PatientType>
                  <acc:Fasting>${#TestCase#FastingType}</acc:Fasting>
                  <acc:PatientLocation>${#TestCase#PatientLocation}</acc:PatientLocation>
                  <acc:IndigentPercent>${#TestCase#IndigentPercent}</acc:IndigentPercent>
                  <acc:OnsetDate>${#TestCase#OnsetDate}</acc:OnsetDate>
                  <acc:OnsetType>${#TestCase#OnsetType}</acc:OnsetType>
                  <acc:AdmissionSource>${#TestCase#AdmissionSource}</acc:AdmissionSource>
                  <acc:AdmissionType>${#TestCase#AdmissionType}</acc:AdmissionType>
                  <acc:AccidentCause>${#TestCase#AccidentCause}</acc:AccidentCause>
                  <acc:AccidentState>${#TestCase#AccidentState}</acc:AccidentState>
                  <acc:EmergencyIndicator>false</acc:EmergencyIndicator>
                  <acc:GravidaNumber>${#TestCase#GravidaNumber}</acc:GravidaNumber>
                  <acc:Pregnancy>false</acc:Pregnancy>
                  <acc:MaritalStatus>${#TestCase#MaritalStatus}</acc:MaritalStatus>
                  <acc:Comments>${#TestCase#Comments}</acc:Comments>
                  <acc:PatientStatusType>${#TestCase#PatientStatusType}</acc:PatientStatusType>
                  <acc:ClientSpecificPatientId>${#TestCase#ClientSpecificPatientId}</acc:ClientSpecificPatientId>
                  <acc:FacilitySpecificPatientId>${#TestCase#FacilitySpecificPatientId}</acc:FacilitySpecificPatientId>
               </acc:PatientInfo>
               <acc:PatientDemoEffectiveDate>${#TestCase#PatientDemoEffectiveDate}</acc:PatientDemoEffectiveDate>
               <acc:FinalReportedDate>${#TestCase#FinalReportedDate}</acc:FinalReportedDate>
               <acc:Physicians>
                  <acc:Ordering>
                     <acc:NPI>${#TestCase#NPI}</acc:NPI>
                     <acc:Name>${#TestCase#Name}</acc:Name>
                     <acc:UPIN>${#TestCase#UPIN}</acc:UPIN>
                  </acc:Ordering>
                  <acc:Referring>
                     <acc:NPI>${#TestCase#ReferringNPI}</acc:NPI>
                     <acc:Name>${#TestCase#ReferringName}</acc:Name>
                     <acc:UPIN>${#TestCase#ReferringUPIN}</acc:UPIN>
                  </acc:Referring>
                  <acc:Primary>
                     <acc:NPI>${#TestCase#PrimaryNPI}</acc:NPI>
                     <acc:Name>${#TestCase#PrimaryName}</acc:Name>
                     <acc:UPIN>${#TestCase#PrimaryUPIN}</acc:UPIN>
                  </acc:Primary>
               </acc:Physicians>
               <acc:PatientSignatureOnFile>false</acc:PatientSignatureOnFile>
               <acc:PhysicianSignatureOnFile>false</acc:PhysicianSignatureOnFile>
               <acc:ReportCopyToPatient>false</acc:ReportCopyToPatient>
               <acc:CallBack>false</acc:CallBack>
               <acc:CallBackPhone>${#TestCase#CallBackPhone}</acc:CallBackPhone>
               <acc:STAT>false</acc:STAT>
               <acc:AccessionContactInfo>
                  <acc:UserId>${#TestCase#UserId}</acc:UserId>
                  <acc:ContactDate>${#TestCase#ContactDate}</acc:ContactDate>
                  <acc:ContactInfo>${#TestCase#ContactInfo}</acc:ContactInfo>
                  <acc:FollowUpDate>${#TestCase#FollowUpDate}</acc:FollowUpDate>
                  <acc:FollowUpUserId>${#TestCase#FollowUpUserId}</acc:FollowUpUserId>
                  <acc:PrintableNotes>${#TestCase#PrintableNotes}</acc:PrintableNotes>
                  <acc:PrintOnStatement>false</acc:PrintOnStatement>
                  <acc:FollowUpComplete>false</acc:FollowUpComplete>
                  <acc:Voided>false</acc:Voided>
               </acc:AccessionContactInfo>
               <acc:AdditionalReportCopy>
                  <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
                  <acc:ContactMethodType>${#TestCase#ContactMethodType}</acc:ContactMethodType>
                  <acc:Name>${#TestCase#AdditionalReportCopyName}</acc:Name>
                  <acc:Address>
                     <typ:AddressLine1>${#TestCase#AddressLine1}</typ:AddressLine1>
                     <typ:AddressLine2>${#TestCase#AddressLine2}</typ:AddressLine2>
                     <typ:City>${#TestCase#City}</typ:City>
                     <typ:State>${#TestCase#State}</typ:State>
                     <typ:Region>${#TestCase#Region}</typ:Region>
                     <typ:ZIP>${#TestCase#ZIP}</typ:ZIP>
                     <typ:CountryCode>${#TestCase#CountryCode}</typ:CountryCode>
                  </acc:Address>
                  <acc:Phone>${#TestCase#WorkPhone}</acc:Phone>
                  <acc:Fax>${#TestCase#WorkPhone}</acc:Fax>
                  <acc:Email>${#TestCase#Email}</acc:Email>
               </acc:AdditionalReportCopy>
               <acc:ClientQuestions>
                  <acc:Question>${#TestCase#Question}</acc:Question>
                  <acc:Response>${#TestCase#Response}</acc:Response>
               </acc:ClientQuestions>
               <acc:ClinicalTrial>
                  <acc:TrialName>${#TestCase#TrialName}</acc:TrialName>
                  <acc:EncounterName>${#TestCase#EncounterName}</acc:EncounterName>
                  <acc:EncounterDate>${#TestCase#EncounterDate}</acc:EncounterDate>
               </acc:ClinicalTrial>
               <acc:ChainOfCustody>
                  <acc:MroName>${#TestCase#MroName}</acc:MroName>
                  <acc:MroAddress>
                     <typ:AddressLine1>${#TestCase#AddressLine1}</typ:AddressLine1>
                     <typ:AddressLine2>${#TestCase#AddressLine2}</typ:AddressLine2>
                     <typ:City>${#TestCase#City}</typ:City>
                     <typ:State>${#TestCase#State}</typ:State>
                     <typ:Region>${#TestCase#Region}</typ:Region>
                     <typ:ZIP>${#TestCase#ZIP}</typ:ZIP>
                     <typ:CountryCode>${#TestCase#CountryCode}</typ:CountryCode>
                  </acc:MroAddress>
                  <acc:MroContact>
                     <typ:ContactName>${#TestCase#ContactName}</typ:ContactName>
                     <typ:Phone>${#TestCase#Phone}</typ:Phone>
                     <typ:Fax>${#TestCase#Fax}</typ:Fax>
                     <typ:Email>${#TestCase#Email}</typ:Email>
                  </acc:MroContact>
                  <acc:EmployerInfo>
                     <acc:EmployerName>${#TestCase#EmployerName}</acc:EmployerName>
                     <acc:EmployerId>${#TestCase#EmployerId}</acc:EmployerId>
                     <acc:Address>
                        	 <typ:AddressLine1>${#TestCase#AddressLine1}</typ:AddressLine1>
	                     <typ:AddressLine2>${#TestCase#AddressLine2}</typ:AddressLine2>
	                     <typ:City>${#TestCase#City}</typ:City>
	                     <typ:State>${#TestCase#State}</typ:State>
	                     <typ:Region>${#TestCase#Region}</typ:Region>
	                     <typ:ZIP>${#TestCase#ZIP}</typ:ZIP>
	                     <typ:CountryCode>${#TestCase#CountryCode}</typ:CountryCode>
                     </acc:Address>
                     <acc:Status>${#TestCase#EmployerStatus}</acc:Status>
                     <acc:EmployerContact>
                        <typ:ContactName>${#TestCase#ContactName}</typ:ContactName>
	                     <typ:Phone>${#TestCase#Phone}</typ:Phone>
	                     <typ:Fax>${#TestCase#Fax}</typ:Fax>
	                     <typ:Email>${#TestCase#Email}</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <acc:ChainOfCustodyReasonType>${#TestCase#ChainOfCustodyReasonType}</acc:ChainOfCustodyReasonType>
                  <acc:SpecimenTemp>${#TestCase#SpecimenTemp}</acc:SpecimenTemp>
                  <acc:SplitSpecimenCollection>false</acc:SplitSpecimenCollection>
                  <acc:SpecimenCollector>${#TestCase#SpecimenCollector}</acc:SpecimenCollector>
                  <acc:SpecimenCollectorSignatureOnFile>false</acc:SpecimenCollectorSignatureOnFile>
                  <acc:SpecimenTemperatureInRange>false</acc:SpecimenTemperatureInRange>
                  <acc:SpecimenTemperatureNotInRange>false</acc:SpecimenTemperatureNotInRange>
               </acc:ChainOfCustody>
               <acc:DialysisInfo>
                  <acc:DialysisType>${#TestCase#DialysisType}</acc:DialysisType>
                  <acc:Medication>${#TestCase#Medication}</acc:Medication>
               </acc:DialysisInfo>
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>${#TestCase#TestSequenceNumber}</acc:TestSequenceNumber>
                  <acc:TransactionType>${#TestCase#TransactionType}</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestId}</acc:TestId>
                  <acc:AlternativeTestName>${#TestCase#AlternativeTestName}</acc:AlternativeTestName>
                  <acc:Modifiers>
                     <acc:Mod1>${#TestCase#Mod1}</acc:Mod1>
                     <acc:Mod2>${#TestCase#Mod2}</acc:Mod2>
                     <acc:Mod3>${#TestCase#Mod3}</acc:Mod3>
                     <acc:Mod4>${#TestCase#Mod4}</acc:Mod4>
                  </acc:Modifiers>
                  <acc:ManualPrice>${#TestCase#ManualPrice}</acc:ManualPrice>
                  <acc:ClientBilled>false</acc:ClientBilled>
                  <acc:LabMessages>
                     <acc:Code>${#TestCase#LabMessagesCode}</acc:Code>
                  </acc:LabMessages>
                  <acc:DiagnosisCodes>
                     <acc:DiagnosisCode>${#TestCase#DiagnosisCode}</acc:DiagnosisCode>
<!--                     <acc:NarrativeDiag>${#TestCase#NarrativeDiag}</acc:NarrativeDiag>-->
                     <acc:UserId>${#TestCase#UserId}</acc:UserId>
                     <acc:ClientContact>${#TestCase#Name}</acc:ClientContact>
                     <acc:ClientContactDate>${#TestCase#ContactDate}</acc:ClientContactDate>
                     <acc:Comment>${#TestCase#Comment}</acc:Comment>
                     <acc:DiagnosisCodeOrder>${#TestCase#DiagnosisCodeOrder}</acc:DiagnosisCodeOrder>
                     <acc:Deleted>false</acc:Deleted>
                     <acc:DocumentId>${#TestCase#DocumentId}</acc:DocumentId>
                  </acc:DiagnosisCodes>
                  <acc:Note>${#TestCase#Note}</acc:Note>
                  <acc:PlaceOfService>${#TestCase#PlaceOfService}</acc:PlaceOfService>
                  <acc:FinalReportDate>${#TestCase#FinalReportDate}</acc:FinalReportDate>
                  <acc:RenderingPhysician>
                     <acc:NPI>${#TestCase#NPI}</acc:NPI>
                     <acc:Name>${#TestCase#Name}</acc:Name>
                     <acc:UPIN>${#TestCase#UPIN}</acc:UPIN>
                  </acc:RenderingPhysician>
                  <acc:StandingOrderId>${#TestCase#StandingOrderId}</acc:StandingOrderId>
                  <acc:AbnReceived>false</acc:AbnReceived>
                  <acc:AbnReason>${#TestCase#AbnReason}</acc:AbnReason>
                  <acc:AbnComment>${#TestCase#AbnComment}</acc:AbnComment>
                  <acc:Units>${#TestCase#Units}</acc:Units>
<!--                  <acc:ProfileId>${#TestCase#ProfileId}</acc:ProfileId>-->
                  <acc:TestQuestions>
                     <acc:Question>${#TestCase#Question}</acc:Question>
                     <acc:Response>${#TestCase#Response}</acc:Response>
                     <acc:ContactMethod>${#TestCase#ContactMethod}</acc:ContactMethod>
                  </acc:TestQuestions>
                  <acc:Result>${#TestCase#Result}</acc:Result>
                  <acc:SplitPayorId>${#TestCase#SplitPayorId}</acc:SplitPayorId>
                  <acc:AuthorizationNumber>${#TestCase#AuthorizationNumber}</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <acc:TravelFee>
                  <acc:RoundTripFromLab>false</acc:RoundTripFromLab>
                  <acc:TripMiles>${#TestCase#TripMiles}</acc:TripMiles>
                  <acc:TripStops>${#TestCase#TripStops}</acc:TripStops>
                  <acc:TripPatientCount>${#TestCase#TripPatientCount}</acc:TripPatientCount>
               </acc:TravelFee>
               <acc:AccessionLevelDiagnosisCodes>
                  	<acc:DiagnosisCode>${#TestCase#DiagnosisCode}</acc:DiagnosisCode>
<!--	                <acc:NarrativeDiag>${#TestCase#NarrativeDiag}</acc:NarrativeDiag>-->
	                <acc:UserId>${#TestCase#UserId}</acc:UserId>
	                <acc:ClientContact>${#TestCase#Name}</acc:ClientContact>
	                <acc:ClientContactDate>${#TestCase#ContactDate}</acc:ClientContactDate>
	                <acc:Comment>${#TestCase#Comment}</acc:Comment>
	                <acc:DiagnosisCodeOrder>${#TestCase#DiagnosisCodeOrder}</acc:DiagnosisCodeOrder>
	                <acc:Deleted>false</acc:Deleted>
	                <acc:DocumentId>${#TestCase#DocumentId}</acc:DocumentId>
               </acc:AccessionLevelDiagnosisCodes>
               <acc:PhlebotomistUserId>${#TestCase#PhlebotomistUserId}</acc:PhlebotomistUserId>
               <acc:PscLocationId>${#TestCase#PscLocationId}</acc:PscLocationId>
               <acc:SpecimenInfo>
                  <acc:Count>${#TestCase#SpecimenInfoCount}</acc:Count>
                  <acc:SpecimenContainerCode></acc:SpecimenContainerCode>
                  <acc:SpecimenSourceDescription></acc:SpecimenSourceDescription>
                  <acc:SpecimenTempType></acc:SpecimenTempType>
                  <acc:SpecimenQuestion>
                     <acc:QuestionId>${#TestCase#Question}</acc:QuestionId>
                     <acc:Response>${#TestCase#Response}</acc:Response>
                     <acc:SpecimenType>${#TestCase#SpecimenType}</acc:SpecimenType>
                  </acc:SpecimenQuestion>
               </acc:SpecimenInfo>
               <acc:InsuranceInfo>
                  <acc:PayorPriority>${#TestCase#PayorPriority}</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorId}</acc:PayorId>
<!--                  <acc:PayorName>${#TestCase#PayorName}</acc:PayorName>-->
                  <acc:SubscriberId>${#TestCase#SubscriberId}</acc:SubscriberId>
                  <acc:DateOfBirth>${#TestCase#PatientDateOfBirth}</acc:DateOfBirth>
                  <acc:Gender>male</acc:Gender>
                  <acc:InsuredRelationship>${#TestCase#InsuredRelationship}</acc:InsuredRelationship>
                  <acc:GroupId>${#TestCase#GroupId}</acc:GroupId>
                  <acc:PlanId>${#TestCase#PlanId}</acc:PlanId>
                  <acc:InsuredName>
                     <typ:FirstName>${#TestCase#PatientFName}</typ:FirstName>
                     <typ:LastName>${#TestCase#PatientLName}</typ:LastName>
                     <typ:MiddleName>${#TestCase#PatientMName}</typ:MiddleName>
                  </acc:InsuredName>
                  <acc:Address>
                        	 <typ:AddressLine1>${#TestCase#AddressLine1}</typ:AddressLine1>
	                     <typ:AddressLine2>${#TestCase#AddressLine2}</typ:AddressLine2>
	                     <typ:City>${#TestCase#City}</typ:City>
	                     <typ:State>${#TestCase#State}</typ:State>
	                     <typ:Region>${#TestCase#Region}</typ:Region>
	                     <typ:ZIP>${#TestCase#ZIP}</typ:ZIP>
	                     <typ:CountryCode>${#TestCase#CountryCode}</typ:CountryCode>
                     </acc:Address>
                  <acc:Phone>
                     <typ:HomePhone>${#TestCase#HomePhone}</typ:HomePhone>
                     <typ:WorkPhone>${#TestCase#WorkPhone}</typ:WorkPhone>
                  </acc:Phone>
                  <acc:InsuredSSN>${#TestCase#InsuredSSN}</acc:InsuredSSN>
                  <acc:AuthorizationNumber>${#TestCase#AuthorizationNumber}</acc:AuthorizationNumber>
                  <acc:ClaimNotes>${#TestCase#Note}</acc:ClaimNotes>
                  <acc:Comments>${#TestCase#Comments}</acc:Comments>
                  <acc:OtherInfo1>${#TestCase#Comments}</acc:OtherInfo1>
                  <acc:OtherInfo2>${#TestCase#Comments}</acc:OtherInfo2>
                  <acc:OtherInfo3>${#TestCase#Comments}</acc:OtherInfo3>
                  <acc:OtherInfo4>${#TestCase#Comments}</acc:OtherInfo4>
                  <acc:GroupName>${#TestCase#GroupName}</acc:GroupName>
                  <acc:CaseId>${#TestCase#CaseId}</acc:CaseId>
                  <acc:DelayReasonCode>${#TestCase#DelayReasonCode}</acc:DelayReasonCode>
                  <acc:EmployerInfo>
                     <acc:EmployerName>${#TestCase#PatientFName}</acc:EmployerName>
                     <acc:EmployerId>${#TestCase#EmployerId}</acc:EmployerId>
                     <acc:Address>
                        <typ:AddressLine1>${#TestCase#AddressLine1}</typ:AddressLine1>
	                     <typ:AddressLine2>${#TestCase#AddressLine2}</typ:AddressLine2>
	                     <typ:City>${#TestCase#City}</typ:City>
	                     <typ:State>${#TestCase#State}</typ:State>
	                     <typ:Region>${#TestCase#Region}</typ:Region>
	                     <typ:ZIP>${#TestCase#ZIP}</typ:ZIP>
	                     <typ:CountryCode>${#TestCase#CountryCode}</typ:CountryCode>
                     </acc:Address>
                     <acc:Status>true</acc:Status>
                     <acc:EmployerContact>
                        <typ:ContactName>${#TestCase#ContactName}</typ:ContactName>
	                     <typ:Phone>${#TestCase#Phone}</typ:Phone>
	                     <typ:Fax>${#TestCase#Fax}</typ:Fax>
	                     <typ:Email>${#TestCase#Email}</typ:Email>
                     </acc:EmployerContact>
                  </acc:EmployerInfo>
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>${#TestCase#EligibilityStatus}</acc:EligibilityStatus>
                     <acc:EligibilityService>${#TestCase#EligibilityService}</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>${#TestCase#EligibilityCheckedDate}</acc:EligibilityCheckedDate>
<!--                     <acc:EligibilityTransactionId>${#TestCase#EligibilityTransactionId}</acc:EligibilityTransactionId>-->
                  </acc:EligibilityInfo>
                  <acc:DemonstrationProjectId>${#TestCase#DemonstrationProjectId}</acc:DemonstrationProjectId>
               </acc:InsuranceInfo>
               <acc:OccurrenceCode>
                  <acc:OccurrenceCode>${#TestCase#OccurrenceCode}</acc:OccurrenceCode>
                  <acc:OccurrenceDate>${#TestCase#OccurrenceDate}</acc:OccurrenceDate>
                  <acc:SpecificPyrId>${#TestCase#PayorId}</acc:SpecificPyrId>
               </acc:OccurrenceCode>
               <acc:ValueCode>
                  <acc:ValueCode>${#TestCase#ValueCode}</acc:ValueCode>
                  <acc:ValueAmt>${#TestCase#ValueAmt}</acc:ValueAmt>
                  <acc:SpecificPyrId>${#TestCase#PayorId}</acc:SpecificPyrId>
               </acc:ValueCode>
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
               <acc:ClientProductId>${#TestCase#ClientProductId}</acc:ClientProductId>
               <acc:NoCharge>false</acc:NoCharge>
               <acc:PaidInFull>false</acc:PaidInFull>
               <acc:CreateOrUpdatePatientDemo>false</acc:CreateOrUpdatePatientDemo>
               <acc:MspForm>false</acc:MspForm>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="1a1720ea-1ef0-44f2-9b0b-6207d7da6276"/><con:assertion type="XPath Match" name="Verify StatusCode" id="4a1d970d-dd0f-4844-ab7a-a9b73e88b2c7"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';
    //ns3:StatusCode/text()</path><content>100</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Verify StatusMessage" id="49c02027-eae1-4a09-afaa-9baa7e89593c"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';
    //ns3:StatusMessage/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-83:Step3:AccessionWS-CreateAccession-CreatedNewAccessionWithAllFields-VerifyData" id="f0d4a0e3-202b-4ba0-af29-d7bc3b003df4"><con:settings/><con:config><script><![CDATA[import com.xifin.accnws.dao.*;
import com.xifin.qa.config.*;
import com.xifin.mars.dao.*;
import com.xifin.utils.*;
import com.xifin.platform.dao.*;

//======== Get values ==========
//Get dbEnv Project-level property value
def errorMessage = "AWS-83:AccessionWS-CreateAccession-CreatedNewAccessionWithAllFields"
def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

DaoManagerAccnWS

def AccessionId = context.expand('${#TestCase#AccessionId}')
setProperty("AccessionId",AccessionId)

def PatientFName = context.expand('${#TestCase#PatientFName}')
setProperty("PatientFName",PatientFName)

def PatientLName = context.expand('${#TestCase#PatientLName}')
setProperty("PatientLName",PatientLName)

def PatientMName = context.expand('${#TestCase#PatientMName}')
setProperty("PatientMName",PatientMName)

def FNameDB = daoManagerAccnWS.getFnameByAccnId(AccessionId,dbEnv)
log.info "FNameDB:$FNameDB"
def LNameDB = daoManagerAccnWS.getLnameByAccnId(AccessionId,dbEnv)

assert verifyData(PatientFName, FNameDB)==true : errorMessage
assert verifyData(PatientLName, LNameDB)==true : errorMessage

//======== Verify pt's fName by accn id ========
//Get the Pt's fName in db by referencing TestCase level properlty - AccessionId
daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
//======== Verify pt's DOB and accn's DOS by accn id ========
//Get the Pt's DOB in db by referencing TestCase level properlty - AccessionId
daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(AccessionId, dbEnv)
log.info ("ptDOBInDB = " + ptDOBInDB)
//Get Pt's DOB from TestCase level property - NewPtDOB
def ptDOB = context.expand('${#TestCase#PatientDateOfBirth}')
assert ptDOBInDB == ptDOB : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

//*****************
//Set StatusMessage value
//Create groovyUtils and XmlHolder for response
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( "AWS-83:Step2:AccessionWS-CreateAccession-CreatedNewAccessionWithAllFields-SendRequest#Response" )

//If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
//Set DOS TestCase-level value
testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
log.info "StatusMessage = " + StatusMessage
assert StatusMessage == "Success" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

//**************************************************
//Validate PtDemoInfo
daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())
def ptDemoInfoList = []
ptDemoInfoList = daoManagerXifinRpm.getPtDemoInfoFromPTByEPI(context.expand('${#TestCase#PatientId}'), dbEnv)

ptGenderInDB = ptDemoInfoList[3]
log.info "ptGenderInDB = " + ptGenderInDB
//'1'=Male
//assert ptGenderInDB == '2' : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptCommentsInDB = ptDemoInfoList[13].trim()
log.info "ptCommentsInDB = " + ptCommentsInDB
//assert ptCommentsInDB == "" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptMaritalStaInDB = ptDemoInfoList[14]
log.info "ptMaritalStaInDB = " + ptMaritalStaInDB
//'2'=Married
//assert ptMaritalStaInDB == '0' : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptSSNInDB = ptDemoInfoList[19]
log.info "ptSSNInDB = " + ptSSNInDB
def ptSSNInRQ = context.expand('${#TestCase#PatientSSN}')
//assert ptSSNInDB == ptSSNInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptZipInDB = ptDemoInfoList[26]
log.info "ptZipInDB = " + ptZipInDB
def ZIPRQ = context.expand('${#TestCase#ZIP}')
log.info "ZIPRQ = " + ZIPRQ
//assert ptZipInDB == ZIPRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

timeStamp = new TimeStamp()
//ptDOBInDB = timeStamp.getConvertedDate("MM/dd/yyyy","yyyy-MM-dd",ptDemoInfoList[22])
//log.info "ptDOBInDB = " + ptDOBInDB
//def ptDOBInRQ = context.expand('${#TestCase#PatientDateOfBirth}')
//log.info "ptDOBInRQ = " + ptDOBInRQ
//assert ptDOBInDB == ptDOBInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptADDR1InDB = ptDemoInfoList[23].trim()
log.info "ptADDR1InDB = " + ptADDR1InDB
def  ptADDR1InRQ = context.expand('${#TestCase#AddressLine1}')
log.info "ptADDR1InRQ = " + ptADDR1InRQ
//assert ptADDR1InDB == ptADDR1InRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptADDR2InDB = ptDemoInfoList[24].trim()
log.info "ptADDR2InDB = " + ptADDR2InDB
def  ptADDR2InRQ = context.expand('${#TestCase#AddressLine2}')
log.info "ptADDR2InRQ = " + ptADDR2InRQ
//assert ptADDR2InDB == ptADDR2InRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptHPhoneInDB = ptDemoInfoList[27].trim()
log.info "ptHPhoneInDB = " + ptHPhoneInDB
def ptHPhoneInRQ = context.expand('${#TestCase#HomePhone}')
log.info "ptHPhoneInRQ = " + ptHPhoneInRQ
//assert ptHPhoneInDB == ptHPhoneInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptWPhoneInDB = ptDemoInfoList[28].trim()
log.info "ptWPhoneInDB = " + ptWPhoneInDB
def ptWPhoneInRQ = context.expand('${#TestCase#WorkPhone}')
log.info "ptWPhoneInRQ = " + ptWPhoneInRQ
//assert ptWPhoneInDB == ptWPhoneInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptEmailInDB = ptDemoInfoList[29].trim()
log.info "ptEmailInDB = " + ptEmailInDB
def ptEmailInRQ = context.expand('${#TestCase#Email}')
log.info "ptEmailInRQ = " + ptEmailInRQ
//assert ptEmailInDB == ptEmailInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

//**************************************************
//Validate AccnInfo

daoManagerPlatform = new DaoManagerPlatform(configuration.getRpmDatabase())
def accnInfoList = []
accnInfoList = daoManagerPlatform.getAccnInfoFromACCNByAccnId(context.expand('${#TestCase#AccessionId}'), dbEnv)

def phlebFacAbbrevInDB = daoManagerAccnWS.getFacAbbrevFromFACByFacId(accnInfoList[45], dbEnv)
log.info "phlebFacAbbrevInDB = " + phlebFacAbbrevInDB
assert phlebFacAbbrevInDB.trim() == "" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def fastingTypInDB = accnInfoList[46].trim()//daoManagerPlatform.getFastingTypeFromFASTING_TYP(accnInfoList[46].trim(), dbEnv).get(0)
log.info "fastingTypInDB = " + fastingTypInDB
def fastingTypeInRQ = context.expand('${#TestCase#FastingType}')
//assert fastingTypInDB == fastingTypeInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"
assert fastingTypInDB == "1" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptLocInDB = accnInfoList[47].trim()
log.info "ptLocInDB = " + ptLocInDB
//'0' = No Loc
//assert ptLocInDB == "0" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def clnAbbrevInDB = daoManagerXifinRpm.getClientAbbrevIdByClientId(accnInfoList[1], dbEnv)
log.info "clnAbbrevInDB = " + clnAbbrevInDB
def clnAbbrevInRQ = context.expand('${#TestCase#ClientId}')
log.info "clnAbbrevInRQ = " + clnAbbrevInRQ
assert clnAbbrevInDB == clnAbbrevInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def phlebIdInDB = accnInfoList[48].trim()
log.info "phlebIdInDB = " + phlebIdInDB
def phlebIdInRQ = context.expand('${#TestCase#PhlebotomistUserId}')
log.info "phlebIdInRQ = " + phlebIdInRQ
//assert phlebIdInDB == null : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"
assert phlebIdInDB == phlebIdInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def reqIdInDB = accnInfoList[3].trim()
log.info "reqIdInDB = " + reqIdInDB
def reqIdInRQ = context.expand('${#TestCase#RequisitionId}')
log.info "reqIdInRQ = " + reqIdInRQ
assert reqIdInDB == reqIdInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

dosInDB = accnInfoList[4].trim()
date = Date.parse('yyyy-MM-dd HH:mm:ss.S', dosInDB).format('yyyy-MM-dd')
log.info "dosInDB = " + date
def dosInRQ = context.expand('${#TestCase#DateOfServiceate}')
log.info "dosInRQ = " + dosInRQ
assert date == dosInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

convertUtil = new ConvertUtil()
def physSOFInDB = accnInfoList[13].trim()
log.info "physSOFInDB = " + physSOFInDB
assert physSOFInDB == '0' : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def ptSOFInDB = accnInfoList[14].trim()
log.info "ptSOFInDB = " + ptSOFInDB
assert ptSOFInDB == "0" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def callBackInDB = accnInfoList[50].trim()
log.info "callBackInDB = " + callBackInDB
assert convertUtil.getBoolean(callBackInDB, false) == false : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def callBackPhnInDB = accnInfoList[51].trim()
log.info "callBackPhnInDB = " + callBackPhnInDB
def callBackPhnInRQ = context.expand('${#TestCase#CallBackPhone}')
log.info "callBackPhnInRQ = " + callBackPhnInRQ
assert callBackPhnInDB == callBackPhnInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def reportCopyPtInDB = accnInfoList[52].trim()
log.info "reportCopyPtInDB = " + reportCopyPtInDB
assert reportCopyPtInDB == "0" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def indegentInDB = accnInfoList[19].trim()
log.info "indegentInDB = " + indegentInDB
def indegentInRQ = context.expand('${#TestCase#IndigentPercent}')
log.info "indegentInRQ = " + indegentInRQ
assert indegentInDB == indegentInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def paidInFullInDB = accnInfoList[54].trim()
log.info "paidInFullInDB = " + paidInFullInDB
assert convertUtil.getBoolean(paidInFullInDB, false) == false : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def noChargeInDB = accnInfoList[55].trim()
log.info "noChargeInDB = " + noChargeInDB
assert noChargeInDB == "0" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def tripStopsInDB = accnInfoList[33].trim()
log.info "tripStopsInDB = " + tripStopsInDB
def tripStopsInRQ = context.expand('${#TestCase#TripStops}')
log.info "tripStopsInRQ = " + tripStopsInRQ
assert tripStopsInDB == tripStopsInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def tripMilesInDB = accnInfoList[34].trim()
log.info "tripMilesInDB = " + tripMilesInDB
def tripMilesInRQ = context.expand('${#TestCase#TripMiles}')
log.info "tripMilesInRQ = " + tripMilesInRQ
assert tripMilesInDB == tripMilesInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def roundTripInDB = accnInfoList[35].trim()
log.info "roundTripInDB = " + roundTripInDB
assert roundTripInDB == "0" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def tripPtCountInDB = accnInfoList[36].trim()
log.info "tripPtCountInDB = " + tripPtCountInDB
def tripPtCountInRQ = context.expand('${#TestCase#TripPatientCount}')
log.info "tripPtCountInRQ = " + tripPtCountInRQ
assert tripPtCountInDB == tripPtCountInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def adminSRCInDB = daoManagerAccnWS.getAdmissionSrcTypeFromADMISSION_SRC_TYP(accnInfoList[56].trim(), dbEnv).get(1)
log.info "adminSRCInDB = " + adminSRCInDB
def adminSRCInRQ = context.expand('${#TestCase#AdmissionSource}')
log.info "adminSRCInRQ = " + adminSRCInRQ
assert adminSRCInDB == adminSRCInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def adminTypInDB = accnInfoList[60].trim()
log.info "adminTypInDB = " + adminTypInDB
def adminTypInRQ = "3"//context.expand('${#TestCase#AdmissionType}')
log.info "adminTypInRQ = " + adminTypInRQ
assert adminTypInDB == adminTypInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def maritalStaInDB = accnInfoList[57].trim()
log.info "maritalStaInDB = " + maritalStaInDB
//'2' = Married
assert maritalStaInDB == "0" : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def emergencyInDB = accnInfoList[58].trim()
log.info "emergencyInDB = " + emergencyInDB
assert convertUtil.getBoolean(emergencyInDB, false) == false : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def accidentCauseInDB = daoManagerAccnWS.getAccidentCauseTypeFromACCIDENT_CAUSE_TYP(accnInfoList[59].trim().toString(),dbEnv).get(1);
log.info "accidentCauseInDB = " + accidentCauseInDB
accidentCauseInRQ = context.expand('${#TestCase#AccidentCause}');
log.info "accidentCauseInRQ = " + accidentCauseInRQ
assert accidentCauseInDB == accidentCauseInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def accidentStInDB = accnInfoList[63].trim()
log.info "accidentStInDB = " + accidentStInDB
accidentStInRQ = context.expand('${#TestCase#AccidentState}');
assert accidentStInDB == accidentStInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def pregnancyInDB = accnInfoList[64].trim()
log.info "pregnancyInDB = " + pregnancyInDB
assert convertUtil.getBoolean(pregnancyInDB, false) == false : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def gravidaInDB = accnInfoList[65].trim()
log.info "gravidaInDB = " + gravidaInDB
def gravidaInRQ = context.expand('${#TestCase#GravidaNumber}');
log.info "gravidaInRQ = " + gravidaInRQ
assert gravidaInDB == gravidaInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def dischargeDtInDB = accnInfoList[41].trim()
def date = Date.parse('yyyy-MM-dd HH:mm:ss.S', dischargeDtInDB).format('yyyy-MM-dd')
log.info "dischargeDtInDB = " + date
def dischargeDtInRQ = context.expand('${#TestCase#DischargeDate}')
log.info "dischargeDtInRQ = " + dischargeDtInRQ
assert date == dischargeDtInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def adminDtInDB = accnInfoList[40].trim()
date = Date.parse('yyyy-MM-dd HH:mm:ss.S', adminDtInDB).format('yyyy-MM-dd')
log.info "adminDtInDB = " + date
def adminDtInRQ = context.expand('${#TestCase#AdmitDate}')
log.info "adminDtInRQ = " + adminDtInRQ
assert date == adminDtInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def onsetDtInDB = accnInfoList[61].trim()
date = Date.parse('yyyy-MM-dd HH:mm:ss.S', onsetDtInDB).format('yyyy-MM-dd')
log.info "onsetDtInDB = " + date
def onsetDtInRQ = context.expand('${#TestCase#OnsetDate}')
log.info "onsetDtInRQ = " + onsetDtInRQ
assert date == onsetDtInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

def onsetTypInDB = daoManagerAccnWS.getOnsetTypeFromONSET_TYP(accnInfoList[62].trim(),dbEnv).get(1)
log.info "onsetTypInDB = " + onsetTypInDB
def onsetTypInRQ = context.expand('${#TestCase#OnsetType}')
log.info "onsetTypInRQ = " + onsetTypInRQ
assert onsetTypInDB == onsetTypInRQ : "AWS-83:Step3:Accession WS-CreateAccession-CreateNewAccessionWithAllFields-VerifyNewlyCreatedAccnInDB failed"

// verify data in DB
def contactDB = daoManagerAccnWS.getAccnFromACCN_CNTCT(AccessionId, dbEnv);
log.info "contactDB : $contactDB"

def contactInfDB = contactDB.get(0)
log.info "contactInfDB : $contactInfDB"
def contactInfRQ = context.expand('${#TestCase#ContactInfo}')
log.info "contactInfRQ : $contactInfRQ"
assert contactInfDB == contactInfRQ : errorMessage

def ContactDateDB = contactDB.get(2)
log.info "ContactDateDB : $ContactDateDB"
def ContactDateRQ = context.expand('${#TestCase#ContactDate}')
log.info "ContactDateRQ : $ContactDateRQ"
//assert ContactDateDB == ContactDateRQ : errorMessage

def FollowUpDateDB = contactDB.get(1)
log.info "ContactDateDB : $ContactDateDB"
def FollowUpDateRQ = context.expand('${#TestCase#FollowUpDate}')
log.info "FollowUpDateRQ : $FollowUpDateRQ"
assert FollowUpDateRQ == FollowUpDateDB : errorMessage

def phys = daoManagerAccnWS.getAccnFromAccn_phys(AccessionId,dbEnv);
def NPI = context.expand('${#TestCase#NPI}')
log.info "NPI : $NPI"
def ReferringNPI = context.expand('${#TestCase#ReferringNPI}')
log.info "ReferringNPI : $ReferringNPI"
assert verifyItemInList(phys,NPI) : errorMessage
assert verifyItemInList(phys,ReferringNPI) : errorMessage

def Response = context.expand('${#TestCase#Response}')
log.info "Response : $Response"
def ResponseDB = daoManagerAccnWS.getAccnFromACCN_CLN_Q(AccessionId,dbEnv).get(1)
log.info "ResponseDB : $ResponseDB"
assert ResponseDB == Response : errorMessage

def OccurrenceCodeDB = daoManagerAccnWS.getAccnFromACCN_OCCURRENCE(AccessionId,dbEnv).get(1)
def OccurrenceDateDB = daoManagerAccnWS.getAccnFromACCN_OCCURRENCE(AccessionId,dbEnv).get(2)
log.info "OccurrenceCodeDB : $OccurrenceCodeDB"
log.info "OccurrenceDateDB : $OccurrenceDateDB"

def OccurrenceCode = context.expand('${#TestCase#OccurrenceCode}')
def OccurrenceDate = context.expand('${#TestCase#OccurrenceDate}')
log.info "OccurrenceCode : $OccurrenceCode"
log.info "OccurrenceDate : $OccurrenceDate"
assert OccurrenceCode == OccurrenceCodeDB : errorMessage
assert OccurrenceDate == OccurrenceDateDB: errorMessage


def ValueCodeDB = daoManagerAccnWS.getAccnFromACCN_VALUE_CODE(AccessionId,dbEnv).get(1)
def ValueAmtDB = daoManagerAccnWS.getAccnFromACCN_VALUE_CODE(AccessionId,dbEnv).get(2)
log.info "ValueCodeDB : $ValueCodeDB"
log.info "ValueAmtDB : $ValueAmtDB"

def ValueCode = context.expand('${#TestCase#ValueCode}')
def ValueAmt = context.expand('${#TestCase#ValueAmt}')
log.info "ValueCode : $ValueCode"
log.info "ValueAmt : $ValueAmt"
assert ValueCode == ValueCodeDB : errorMessage
assert ValueAmt == ValueAmtDB : errorMessage

def TrialNameDB = daoManagerAccnWS.getAccnFromACCN_CLINTRL(AccessionId,dbEnv).get(0)
def EncounterNameDB = daoManagerAccnWS.getAccnFromACCN_CLINTRL(AccessionId,dbEnv).get(1)
def EncounterDateDB = daoManagerAccnWS.getAccnFromACCN_CLINTRL(AccessionId,dbEnv).get(2)
log.info "TrialNameDB : $TrialNameDB"
log.info "EncounterNameDB : $EncounterNameDB"
log.info "EncounterDateDB : $EncounterDateDB"

def TrialName = context.expand('${#TestCase#TrialName}')
def EncounterName = context.expand('${#TestCase#EncounterName}')
def EncounterDate = context.expand('${#TestCase#EncounterDate}')
log.info "TrialName : $TrialName"
log.info "EncounterName : $EncounterName"
log.info "EncounterDate : $EncounterDate"
assert TrialName == TrialNameDB : errorMessage
assert EncounterName == EncounterNameDB : errorMessage
assert EncounterDate == EncounterDateDB : errorMessage

daoManagerAccnWS.getAccnFromACCN_COC(AccessionId,dbEnv).get(1)
def AddressLine1DB = daoManagerAccnWS.getAccnFromACCN_COC(AccessionId,dbEnv).get(2)
def AddressLine2DB = daoManagerAccnWS.getAccnFromACCN_COC(AccessionId,dbEnv).get(3)
def ContactNameDB = daoManagerAccnWS.getAccnFromACCN_COC(AccessionId,dbEnv).get(4)
log.info "AddressLine1DB : $AddressLine1DB"
log.info "AddressLine2DB : $AddressLine2DB"
log.info "ContactNameDB : $ContactNameDB"

def AddressLine1 = context.expand('${#TestCase#AddressLine1}')
def AddressLine2 = context.expand('${#TestCase#AddressLine2}')
def ContactName = context.expand('${#TestCase#ContactName}')
log.info "AddressLine1 : $AddressLine1"
log.info "AddressLine2 : $AddressLine2"
log.info "ContactName : $ContactName"

assert AddressLine1 == AddressLine1DB : errorMessage
assert AddressLine2 == AddressLine2DB : errorMessage
assert ContactName == ContactNameDB : errorMessage

public boolean verifyItemInList(listList , valueCheck){
	for (int i=0; i< listList.size(); i++){
		List<String> item = listList.get(i);
		for (int j=0; j< item.size(); j++){
			if (item.get(j).equalsIgnoreCase(valueCheck))
			return true;
		}
	}

	return false;
}
public boolean verifyData(String data, String exData){

	log.info "Data : $data"
	log.info "Expected data : $exData"

	if(data==null && exData==null) return true;
	if(data==null && exData!=null && exData.trim().length()==0) return true;
	if(data!=null && exData==null && data.trim().length()==0) return true;
	if(data==null && exData!=null && exData.trim().length()>0) return false;
	if(data!=null && exData==null && data.trim().length()>0) return false;
	if(data!=null && exData!=null) return data.trim().equalsIgnoreCase(exData.trim());
	return false;
}
//Delete data
assert daoManagerAccnWS.deleteAccnFromACCNByAccnID(AccessionId,dbEnv) > 0 : errorMessage
]]></script></con:config></con:testStep><con:properties><con:property><con:name>AbnComment</con:name><con:value>ABNCOMMENTFBSPJBJVFB</con:value></con:property><con:property><con:name>AbnReason</con:name><con:value>Routine</con:value></con:property><con:property><con:name>AccessionId</con:name><con:value>QATESTER20170824135323943</con:value></con:property><con:property><con:name>AccidentCause</con:name><con:value>EM</con:value></con:property><con:property><con:name>AccidentState</con:name><con:value>SD</con:value></con:property><con:property><con:name>AdditionalReportCopyName</con:name><con:value>RIABGIVLKK</con:value></con:property><con:property><con:name>AddressLine1</con:name><con:value>PTADDR16RDYHXPTOO</con:value></con:property><con:property><con:name>AddressLine2</con:name><con:value>PTADDR1SWYLXK4OIK</con:value></con:property><con:property><con:name>AdmissionSource</con:name><con:value>5</con:value></con:property><con:property><con:name>AdmissionType</con:name><con:value>3</con:value></con:property><con:property><con:name>AdmitDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>AlternativeTestName</con:name><con:value>YNZUVQKK</con:value></con:property><con:property><con:name>AuthorizationNumber</con:name><con:value>21687</con:value></con:property><con:property><con:name>CallBackPhone</con:name><con:value>6193334327</con:value></con:property><con:property><con:name>CaseId</con:name><con:value>YIPTY</con:value></con:property><con:property><con:name>ChainOfCustodyReasonType</con:name><con:value>Random</con:value></con:property><con:property><con:name>City</con:name><con:value>NISLAND</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>ESPHYS</con:value></con:property><con:property><con:name>ClientProductId</con:name><con:value>TTKAC</con:value></con:property><con:property><con:name>ClientSpecificPatientId</con:name><con:value>EPI20170824135323943</con:value></con:property><con:property><con:name>Comments</con:name><con:value>AUTOMCOMMENTSOAJYMMSMSX</con:value></con:property><con:property><con:name>ContactDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>ContactInfo</con:name><con:value>AUTOTESTCONTACT1362913576</con:value></con:property><con:property><con:name>ContactMethod</con:name><con:value>Courier</con:value></con:property><con:property><con:name>ContactMethodType</con:name><con:value>Mail</con:value></con:property><con:property><con:name>ContactName</con:name><con:value>AUTOCONTACTKKTZIHMQ</con:value></con:property><con:property><con:name>CountryCode</con:name><con:value>GA</con:value></con:property><con:property><con:name>DateOfServiceate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>DelayReasonCode</con:name><con:value>1</con:value></con:property><con:property><con:name>DemonstrationProjectId</con:name><con:value>BARQZ</con:value></con:property><con:property><con:name>DiagnosisCode</con:name><con:value>S25.51</con:value></con:property><con:property><con:name>DiagnosisCodeOrder</con:name><con:value>1</con:value></con:property><con:property><con:name>DialysisType</con:name><con:value>IPD</con:value></con:property><con:property><con:name>DischargeDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>DocumentId</con:name><con:value>100</con:value></con:property><con:property><con:name>EligibilityCheckedDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>EligibilityService</con:name><con:value>XIFIN</con:value></con:property><con:property><con:name>EligibilityStatus</con:name><con:value>Eligibility Undetermined</con:value></con:property><con:property><con:name>EligibilityTransactionId</con:name><con:value>83153</con:value></con:property><con:property><con:name>Email</con:name><con:value>TYFZR@GMAIL.COM</con:value></con:property><con:property><con:name>EmployerId</con:name><con:value>449</con:value></con:property><con:property><con:name>EmployerName</con:name><con:value>AUTOEMPRKPDWIAA</con:value></con:property><con:property><con:name>EmployerStatus</con:name><con:value>Retired</con:value></con:property><con:property><con:name>EncounterDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>EncounterName</con:name><con:value>AUTOENCOUNTERIIOTQXKC</con:value></con:property><con:property><con:name>FacilitySpecificPatientId</con:name><con:value>EPI20170824135323943</con:value></con:property><con:property><con:name>FastingType</con:name><con:value>Not Fasting</con:value></con:property><con:property><con:name>Fax</con:name><con:value>8583334327</con:value></con:property><con:property><con:name>FinalReportDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>FinalReportedDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>FollowUpDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>FollowUpUserId</con:name><con:value>xjlin</con:value></con:property><con:property><con:name>GravidaNumber</con:name><con:value>9</con:value></con:property><con:property><con:name>GroupId</con:name><con:value>RS</con:value></con:property><con:property><con:name>GroupName</con:name><con:value>KUROV</con:value></con:property><con:property><con:name>HomePhone</con:name><con:value>6193334327</con:value></con:property><con:property><con:name>IndigentPercent</con:name><con:value>2</con:value></con:property><con:property><con:name>InsuredRelationship</con:name><con:value>18</con:value></con:property><con:property><con:name>InsuredSSN</con:name><con:value>678051120</con:value></con:property><con:property><con:name>LabMessagesCode</con:name><con:value>TNP</con:value></con:property><con:property><con:name>ManualPrice</con:name><con:value>19</con:value></con:property><con:property><con:name>MaritalStatus</con:name><con:value>Unknown</con:value></con:property><con:property><con:name>Medication</con:name><con:value>Epogen</con:value></con:property><con:property><con:name>Mod1</con:name><con:value>1A</con:value></con:property><con:property><con:name>Mod2</con:name><con:value>2A</con:value></con:property><con:property><con:name>Mod3</con:name><con:value>3A</con:value></con:property><con:property><con:name>Mod4</con:name><con:value>4A</con:value></con:property><con:property><con:name>MroName</con:name><con:value>AUTOMROVMSDLCFH</con:value></con:property><con:property><con:name>Name</con:name><con:value>FRANKSSS, MMMADAM M</con:value></con:property><con:property><con:name>NarrativeDiag</con:name><con:value>HB</con:value></con:property><con:property><con:name>Note</con:name><con:value>AUTONOTESLGKEWAVENPHDZNW</con:value></con:property><con:property><con:name>NPI</con:name><con:value>1063473072</con:value></con:property><con:property><con:name>OccurrenceCode</con:name><con:value>A2</con:value></con:property><con:property><con:name>OccurrenceDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>OnsetDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>OnsetType</con:name><con:value>431</con:value></con:property><con:property><con:name>PatientDateOfBirth</con:name><con:value>1993-01-03</con:value></con:property><con:property><con:name>PatientDemoEffectiveDate</con:name><con:value>2017-08-21</con:value></con:property><con:property><con:name>PatientFName</con:name><con:value>PTFNAMEURDMC</con:value></con:property><con:property><con:name>PatientGender</con:name><con:value>2</con:value></con:property><con:property><con:name>PatientId</con:name><con:value>EPI20170824135323943</con:value></con:property><con:property><con:name>PatientLName</con:name><con:value>PTLNAMEXOEXL</con:value></con:property><con:property><con:name>PatientLocation</con:name><con:value>PSC</con:value></con:property><con:property><con:name>PatientMName</con:name><con:value>M</con:value></con:property><con:property><con:name>PatientSSN</con:name><con:value>123456789</con:value></con:property><con:property><con:name>PatientStatusType</con:name><con:value>Discharged/transferred to another short-term general hospital for inpatient care</con:value></con:property><con:property><con:name>PatientType</con:name><con:value>Non-patient</con:value></con:property><con:property><con:name>PayorId</con:name><con:value>AETNA</con:value></con:property><con:property><con:name>PayorName</con:name><con:value>LEBCM</con:value></con:property><con:property><con:name>PayorPriority</con:name><con:value>1</con:value></con:property><con:property><con:name>PayorPriorityType</con:name><con:value>93</con:value></con:property><con:property><con:name>PhlebotomistUserId</con:name><con:value>xrmarble</con:value></con:property><con:property><con:name>Phone</con:name><con:value>8583334327</con:value></con:property><con:property><con:name>PlaceOfService</con:name><con:value>ACME</con:value></con:property><con:property><con:name>PlanId</con:name><con:value>RH</con:value></con:property><con:property><con:name>Pregnancy</con:name><con:value>false</con:value></con:property><con:property><con:name>PrimaryName</con:name><con:value>FRANKSSS, MMMADAM M</con:value></con:property><con:property><con:name>PrimaryNPI</con:name><con:value>1063473072</con:value></con:property><con:property><con:name>PrimaryUPIN</con:name><con:value>H36533</con:value></con:property><con:property><con:name>PrintableNotes</con:name><con:value>AUTOTESTNOTES7285828547</con:value></con:property><con:property><con:name>ProfileId</con:name><con:value>12654</con:value></con:property><con:property><con:name>PscLocationId</con:name><con:value>2716</con:value></con:property><con:property><con:name>Question</con:name><con:value>Scanned Response</con:value></con:property><con:property><con:name>ReceiptDate</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>ReferringName</con:name><con:value>FRANKSSS, MMMADAM M</con:value></con:property><con:property><con:name>ReferringNPI</con:name><con:value>1063473072</con:value></con:property><con:property><con:name>ReferringUPIN</con:name><con:value>H36533</con:value></con:property><con:property><con:name>Region</con:name><con:value>SD</con:value></con:property><con:property><con:name>RequisitionId</con:name><con:value>8751996591</con:value></con:property><con:property><con:name>Response</con:name><con:value>AUTORESPONSEOUKNPSQK</con:value></con:property><con:property><con:name>Result</con:name><con:value>AUTORESULTEIGIVTJOKP</con:value></con:property><con:property><con:name>SpecimenCollector</con:name><con:value>QATESTER</con:value></con:property><con:property><con:name>SpecimenContainerCode</con:name><con:value>TYL</con:value></con:property><con:property><con:name>SpecimenInfoCount</con:name><con:value>1</con:value></con:property><con:property><con:name>SpecimenSourceDescription</con:name><con:value>Yellow Top Urinalysis Tube</con:value></con:property><con:property><con:name>SpecimenTemp</con:name><con:value>2</con:value></con:property><con:property><con:name>SpecimenTempType</con:name><con:value>ROOM</con:value></con:property><con:property><con:name>SpecimenType</con:name><con:value>YL</con:value></con:property><con:property><con:name>SplitPayorId</con:name><con:value>BCBSNJ</con:value></con:property><con:property><con:name>StandingOrderId</con:name><con:value>ULUWBEOTVY</con:value></con:property><con:property><con:name>State</con:name><con:value>SD</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property><con:property><con:name>SubscriberId</con:name><con:value>54511</con:value></con:property><con:property><con:name>TestId</con:name><con:value>2100</con:value></con:property><con:property><con:name>TestSequenceNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>TimeOfService</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>TransactionType</con:name><con:value>D</con:value></con:property><con:property><con:name>TrialName</con:name><con:value>AUTOTRIALGBPKQNTO</con:value></con:property><con:property><con:name>TripMiles</con:name><con:value>36</con:value></con:property><con:property><con:name>TripPatientCount</con:name><con:value>1</con:value></con:property><con:property><con:name>TripStops</con:name><con:value>1</con:value></con:property><con:property><con:name>Units</con:name><con:value>1</con:value></con:property><con:property><con:name>UPIN</con:name><con:value>H36533</con:value></con:property><con:property><con:name>UserId</con:name><con:value>QATESTER</con:value></con:property><con:property><con:name>ValueAmt</con:name><con:value>4</con:value></con:property><con:property><con:name>ValueCode</con:name><con:value>31</con:value></con:property><con:property><con:name>WorkPhone</con:name><con:value>8583334327</con:value></con:property><con:property><con:name>ZIP</con:name><con:value>57762</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>DuplicateAccnId</con:name><con:value>ACCNWSSMOKETEST004</con:value></con:property></con:properties></con:testSuite><con:testSuite name="Accession WS-UpdateAccession" id="ec4f0378-dc35-4c04-962c-79c2c2cbf8b1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-7:Accession WS-UpdateAccession" searchProperties="true" id="173e2771-33bb-4aee-8db6-c8e1e957d812"><con:settings/><con:testStep type="groovy" name="AWS-7:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="15e272e4-5532-43e6-8829-e9ef599b6735"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="request" name="AWS-7:Step2:Accession WS-CreateNewAccession" id="70d50598-8d51-4775-9ab0-a3f2af6d9ebe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-7:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="465756ae-02fc-421f-ba3a-f5046636e6e7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="71069db1-7c5c-489d-8962-6eef6643a3c5"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="a4f3a9f2-7d3c-45ed-b5b9-26073163a0e6"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-7:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="4ac80048-250c-4600-a161-0ac2e5f235cd"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-7:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-7:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-7:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-7:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-7:Step2:Accession WS-CreateNewAccession#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-7:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"


</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-7:Step4:Accession WS-UpdateAccession-TestDataSetup" id="bfa4f1e7-e99a-4d58-8420-48e5db86964f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
    import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.platform.dao.*;

    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))
    /*
    //===== Create a new accn by calling testCase in Accession WS_CreateAccession testSuite=====
    def testCase = testRunner.testCase.testSuite.project.testSuites["Accession WS-CreateAccession"].testCases["AWS-5:Accession WS-CreateAccession-CreateNewAccession"]
    runner = testCase.run(new com.eviware.soapui.support.types.StringToObjectMap(), false)
    log.info "TestCase: AWS-3:Accession WS-CreateAccession-CreateNewAccession Status: "+ "$runner.status"
    assert runner.status != Status.FAILED: runner.reason
    */
    //===== Get and Set testcase-level property values =====
    //Get and Set ExistingAccnId testcase-level value
    //def accnId = testCase.getPropertyValue("NewAccnID")
    def accnId = context.expand('${#TestCase#NewAccnID}')
    testRunner.testCase.setPropertyValue ("ExistingAccnId", accnId)
    log.info "ExistingAccnId = " + accnId

    //Get and Set DOS testcase-level value
    //def dos = testCase.getPropertyValue("NewDOS")
    def dos = context.expand('${#TestCase#NewDOS}')
    testRunner.testCase.setPropertyValue ("DOS", dos)
    log.info "DOS = " + dos

    //Get and Set UpdatedPtAddr1 testcase-level value
    randomCharacter = new RandomCharacter()
    def updatedPtAddr1 = "UPDATED PT ADDR1" + randomCharacter.getRandomAlphaString(5)
    testRunner.testCase.setPropertyValue ("UpdatedPtAddr1", updatedPtAddr1)
    log.info "UpdatedPtAddr1 = " + updatedPtAddr1

    //Get and Set UpdatedAccnContactInfo testcase-level value
    def updatedAccnContactInfo = "UPDATED ACCN CONTACT INFO" + randomCharacter.getRandomAlphaString(5)
    testRunner.testCase.setPropertyValue ("UpdatedAccnContactInfo", updatedAccnContactInfo)
    log.info "UpdatedAccnContactInfo = " + updatedAccnContactInfo

    //Get and Set UpdatedTestAbbrev testcase-level value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    testRunner.testCase.setPropertyValue ("UpdatedTestAbbrev", testAbbrev)
    log.info "UpdatedTestAbbrev = " + testAbbrev

    //Get and Set UpdatedAuthNumber testcase-level value
    def updatedAuthNum = "UPDATEDAUTHNUM" + randomCharacter.getRandomAlphaString(5)
    testRunner.testCase.setPropertyValue ("UpdatedAuthNumber", updatedAuthNum)
    log.info "UpdatedAuthNumber = " + updatedAuthNum

    //Get and Set UpdatedPayorAbbrev testcase-level value

    def pyrAbbrev = daoManagerPlatform.getThirdPartyPyrFromPYR(dbEnv)
    testRunner.testCase.setPropertyValue ("UpdatedPayorAbbrev", pyrAbbrev)
    log.info "UpdatedPayorAbbrev = " + pyrAbbrev

</script></con:config></con:testStep><con:testStep type="request" name="AWS-7:Step2:Accession WS-UpdateAccession" id="08e92147-624b-4b7a-8393-6ed9705b7aaf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>UpdateAccession</con:operation><con:request name="AWS-7:Step2:Accession WS-UpdateAccession" wssPasswordType="PasswordDigest" id="740bf9ec-64a6-429e-ba65-9e45e3356202"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>12345</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>${#TestCase#ExistingAccnId}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#DOS}</acc:DateOfService>
               <!--Optional:-->
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>${#Project#UserId}</acc:UserId>
                  <acc:ContactDate>${#TestCase#DOS}</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>${#TestCase#UpdatedAccnContactInfo}</acc:ContactInfo>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>+</acc:TransactionType>
                  <acc:TestId>${#TestCase#UpdatedTestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>${#TestCase#UpdatedAuthNumber}</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#UpdatedPayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>A123456789</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="69de9a54-ad43-4a00-a849-ed11ca9836bd"/><con:assertion type="XPath Match" name="ValidateUpdateAccessionStatus" id="07ad3b04-6c63-45cc-bea2-23167d0c9ee6"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-7:Step3:Accession WS-VerifyUpdatedAccnInDB" id="24781548-d334-4a8a-b373-911b967fdf5c"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def updatedAccnId = context.expand('${#TestCase#ExistingAccnId}')
    log.info "UpdatedAccnId = " + updatedAccnId

    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())

    //======== Verify updated accn contact info by accn id ========
    def updatedAccnContactInfoInDB = daoManagerAccnWS.getContactInfoByAccnId(updatedAccnId, dbEnv)
    log.info ("updatedAccnContactInfoInDB = " + updatedAccnContactInfoInDB)

    //Compare the accn contact info in db and the value in TestCase level property - UpdatedAccnContactInfo
    //Expected Result: updatedAccnContactInfoInDB == #TestCase#UpdatedAccnContactInfo
    assert updatedAccnContactInfoInDB == context.expand('${#TestCase#UpdatedAccnContactInfo}') : "AWS-7:Accession WS-UpdateAccession failed"

    //======== Verify updated test abbrev by accn id and the authorization number ========
    def updatedTestAbbrevInDB = daoManagerAccnWS.getTestAbbrevByAccnIdAndAuthNum(updatedAccnId, context.expand('${#TestCase#UpdatedAuthNumber}'), dbEnv)
    log.info ("updatedTestAbbrevInDB = " + updatedTestAbbrevInDB)

    //Compare the test abbrev in db and the value in TestCase level property - UpdatedTestAbbrev
    //Expected Result: updatedTestAbbrevInDB == #TestCase#UpdatedTestAbbrev
    assert updatedTestAbbrevInDB == context.expand('${#TestCase#UpdatedTestAbbrev}') : "AWS-7:Accession WS-UpdateAccession failed"

    //======== Verify updated payor abbrev by accn id and payor prio ========
    def updatedPayorAbbrevInDB = daoManagerAccnWS.getPayorAbbrevByAccnIdAndPayorPrio(updatedAccnId, 1, dbEnv)
    log.info ("updatedPayorAbbrevInDB = " + updatedPayorAbbrevInDB)

    //Compare the payor abbrev in db and the value in TestCase level property - UpdatedPayorAbbrev
    //Expected Result: updatedPayorAbbrevInDB == #TestCase#UpdatedPayorAbbrev
    assert updatedPayorAbbrevInDB == context.expand('${#TestCase#UpdatedPayorAbbrev}') : "AWS-7:Accession WS-UpdateAccession was failed"
</script></con:config></con:testStep><con:properties><con:property><con:name>ExistingAccnId</con:name><con:value>QATESTER20170824135359229</con:value></con:property><con:property><con:name>DOS</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>UpdatedPtAddr1</con:name><con:value>UPDATED PT ADDR1LTKSC</con:value></con:property><con:property><con:name>UpdatedAccnContactInfo</con:name><con:value>UPDATED ACCN CONTACT INFOPJXNM</con:value></con:property><con:property><con:name>UpdatedTestAbbrev</con:name><con:value>300</con:value></con:property><con:property><con:name>UpdatedAuthNumber</con:name><con:value>UPDATEDAUTHNUMYASMW</con:value></con:property><con:property><con:name>UpdatedPayorAbbrev</con:name><con:value>MCDC</con:value></con:property><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20170824135359229</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1987-08-24</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20170824135359229</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEPTZDO</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEUUYOQ</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A076082560</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1710962998</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>300</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>K20.0</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase>
<!--    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-27:Accession WS-UpdateAccession-ChangeThirdPartyPyrToNewThirdPartyPyr" searchProperties="true" id="f76d68ab-befc-4cac-8706-ff0d06d63268"><con:settings/><con:testStep type="groovy" name="AWS-27:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="61c81924-f814-46ef-9c6a-be1a182f50f0"><con:settings/><con:config><script>import com.xifin.utils.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import com.xifin.mars.dao.*;-->
<!--    import static java.util.Calendar.*-->

<!--    //======== Get values ========-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    timeStamp = new TimeStamp()-->
<!--    randomCharacter = new RandomCharacter()-->
<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->

<!--    //Get an existing Priced 3rd payor accnId and clnId-->
<!--    def existAccnIdClnIdList = []-->
<!--    existAccnIdClnIdList = daoManagerAccnWS.getPricedThirdPartyAccnWOErrorFromACCNAndACCNPYR(dbEnv)-->
<!--    def existAccnId = existAccnIdClnIdList[0]-->
<!--    //def existAccnId = "2013023822"-->
<!--    log.info "existAccnId = " + existAccnId-->

<!--    //Get existing cln id-->
<!--    def existClnId = existAccnIdClnIdList[1]-->
<!--    //def existClnId = "34343"-->
<!--    def existClnAbbrev = daoManagerXifinRpm.getClientAbbrevIdByClientId(existClnId, dbEnv)-->
<!--    log.info "existClnAbbrev = " + existClnAbbrev-->

<!--    //Get timeStamp value-->
<!--    def currentDateTime = timeStamp.getTimeStamp()-->

<!--    //Get currentdate value-->
<!--    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")-->

<!--    //Generate random ptEPI-->
<!--    def newPtEPI = "EPI" + currentDateTime-->
<!--    log.info "newPtEPI = " + newPtEPI-->

<!--    //Generate random ptFName, ptLName-->
<!--    def newPtFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    def newPtLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    log.info "newPtFName = " + newPtFName-->
<!--    log.info "newPtLName = " + newPtLName-->

<!--    //Get existing primary pyr abbrev and subsId and relationship abbrev-->
<!--    def existPyrInfoList = []-->
<!--    existPyrInfoList = daoManagerAccnWS.getPyrAbbrevSubsIdRelshpTypFromAccnPyrByAccnIdPyrPrio(existAccnId, "1", dbEnv)-->
<!--    def existPyrAbbrev = existPyrInfoList[0]-->
<!--    def existSubsId = existPyrInfoList[1]-->
<!--    def existRelshpAbbrev = existPyrInfoList[2]-->
<!--    log.info "existPyrAbbrev = " + existPyrAbbrev-->
<!--    log.info "existSubsId = " + existSubsId-->
<!--    log.info "existRelshpAbbrev = " + existRelshpAbbrev-->

<!--    //Get Ordering Physician NPI-->
<!--    def existPhysNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)-->
<!--    log.info "existPhysNPI = " + existPhysNPI-->

<!--    //Get Ordered Test Abbrev-->
<!--    def testInfoList = []-->
<!--    testInfoList = daoManagerAccnWS.getTestIdFacIdFromAccnTestByAccnId(existAccnId, dbEnv)-->
<!--    def existTestId = testInfoList[0]-->
<!--    def existTestAbbrev = daoManagerAccnWS.getTestAbbrevFromTESTByTestId(existTestId, dbEnv)-->
<!--    log.info "existTestAbbrev = " + existTestAbbrev-->

<!--    //Get test POS from the component in case of profile-->
<!--    def existTestFacId = testInfoList[1]-->
<!--    log.info "existTestFacId = " + existTestFacId-->
<!--    if (	existTestFacId == "0" ) {-->
<!--    existTestFacId = daoManagerAccnWS.getFacIdFromACCNTESTByAccnIdProfId(existAccnId, existTestId, dbEnv)-->
<!--    }-->
<!--    //Get Test POS-->
<!--    def existTestPOS = daoManagerAccnWS.getFacAbbrevFromFACByFacId(existTestFacId, dbEnv)-->
<!--    log.info "existTestPOS = " + existTestPOS-->

<!--    //Get Accn POS-->
<!--    def existAccnPOS = daoManagerAccnWS.getPOSFromCLNFACByClnId(existClnId, dbEnv)-->
<!--    log.info "existAccnPOS = " + existAccnPOS-->

<!--    //Get Accn Diagnosis Code-->
<!--    //def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCodeByAccnIdUserDiagOrder(existAccnId, 1, dbEnv)-->
<!--    def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)-->
<!--    log.info "existAccnDiagCd = " + existAccnDiagCd-->

<!--    //======== Set TestCase level property values ========-->
<!--    //Set NewAccnID TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)-->
<!--    log.info "NewAccnID = " + "QATESTER" + currentDateTime-->

<!--    //Set new DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)-->
<!--    log.info "NewDOS = " + currentDate-->

<!--    //def newPtDOB = "1975-09-10"-->
<!--    //generate new pt DOB-->
<!--    def nowCal = Calendar.instance-->
<!--    def y  = nowCal.get(YEAR)-30-->
<!--    def m  = nowCal.get(MONTH)-->
<!--    def d = nowCal.get(DATE)-->
<!--    nowCal.set(y,m,d)-->
<!--    newPtDOB = String.format('%tF', nowCal)-->
<!--    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)-->
<!--    log.info "NewPtDOB = " + newPtDOB-->

<!--    //Set ClientId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("ClnAbbrev", existClnAbbrev)-->
<!--    log.info "ClnAbbrev = " + existClnAbbrev-->

<!--    //Set EPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewEPI", newPtEPI)-->
<!--    log.info "NewEPI = " + newPtEPI-->

<!--    //Set NewPtFName and NewPtLName TestCase-level values-->
<!--    testRunner.testCase.setPropertyValue ("NewPtFName", newPtFName)-->
<!--    log.info "NewPtFName = " + newPtFName-->
<!--    testRunner.testCase.setPropertyValue ("NewPtLName", newPtLName)-->
<!--    log.info "NewPtLName = " + newPtLName-->

<!--    //Set NewSubsId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewSubsId", existSubsId)-->
<!--    log.info "NewSubsId = " + existSubsId-->

<!--    //Set PhysNPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PhysNPI", existPhysNPI)-->
<!--    log.info "PhysNPI = " + existPhysNPI-->

<!--    //Set TestAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("TestAbbrev", existTestAbbrev)-->
<!--    log.info "TestAbbrev = " + existTestAbbrev-->

<!--    //set accn POS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("AccnPOS", existAccnPOS)-->
<!--    log.info "AccnPOS = " + existAccnPOS-->

<!--    //set test POS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("TestPOS", existTestPOS)-->
<!--    log.info "TestPOS = " + existTestPOS-->

<!--    //set DiagCD TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("DiagCD", existAccnDiagCd)-->
<!--    log.info "DiagCD = " + existAccnDiagCd-->

<!--    //set PayorAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PayorAbbrev", existPyrAbbrev)-->
<!--    log.info "PayorAbbrev = " + existPyrAbbrev-->

<!--    //set RelshpType TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("Relshp", existRelshpAbbrev)-->
<!--    log.info "Relshp = " + existRelshpAbbrev-->
<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-27:Step2:Accession WS-CreateNewAccession" id="3d266880-65c6-4046-953f-101c15eb8684"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-27:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="cef4154f-7841-4afc-bb8c-96473223ad3b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:CreateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>1111</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:CreateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:ClientId>${#TestCase#ClnAbbrev}</acc:ClientId>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PatientInfo>-->
<!--                  &lt;!&ndash;<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:&ndash;&gt;-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Person>-->
<!--                     <typ:Name>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:MiddleName>M</typ:MiddleName>-->
<!--                     </typ:Name>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Gender>MALE</typ:Gender>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Address>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:ZIP>32542</typ:ZIP>-->
<!--                     </typ:Address>-->
<!--                  </acc:Person>-->
<!--               </acc:PatientInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:Physicians>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Ordering>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>-->
<!--                  </acc:Ordering>-->
<!--               </acc:Physicians>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:OrderedTests>-->
<!--                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>-->
<!--                  <acc:TransactionType>D</acc:TransactionType>-->
<!--                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:PlaceOfService>${#TestCase#TestPOS}</acc:PlaceOfService>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Units>1</acc:Units>-->
<!--               </acc:OrderedTests>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:AccessionLevelDiagnosisCodes>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>-->
<!--               </acc:AccessionLevelDiagnosisCodes>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PscLocationId>${#TestCase#AccnPOS}</acc:PscLocationId>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>${#TestCase#Relshp}</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               </acc:InsuranceInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>-->
<!--            </acc:CreateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:CreateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6e611b76-2343-4ec4-a621-a3c732f48170"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="162d6870-ec34-4686-b42f-bbaa14a37a00"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->


<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-27:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="6d085b75-665c-41df-8340-d0df94706dd0"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    log.info dbEnv-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info newAccnId-->

<!--    //======== Verify pt's fName by accn id ========-->
<!--    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptFNameInDB = " + ptFNameInDB)-->
<!--    //Get Pt's fName from TestCase level property - NewPtFName-->
<!--    def newPtFName = context.expand('${#TestCase#NewPtFName}')-->

<!--    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName-->
<!--    //Expected Result: ptFNameInDB == #TestCase#NewPtFName-->
<!--    assert ptFNameInDB == newPtFName : "AWS-27:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //======== Verify pt's lName by accn id ========-->
<!--    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptLNameInDB = " + ptLNameInDB)-->
<!--    //Get Pt's lName from TestCase level property - NewPtLName-->
<!--    def newPtLName = context.expand('${#TestCase#NewPtLName}')-->

<!--    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName-->
<!--    //Expected Result: ptLNameInDB == #TestCase#NewPtLName-->
<!--    assert ptLNameInDB == newPtLName : "AWS-27:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //======== Verify pt's DOB and accn's DOS by accn id ========-->
<!--    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptDOBInDB = " + ptDOBInDB)-->
<!--    //Get Pt's DOB from TestCase level property - NewPtDOB-->
<!--    def ptDOB = context.expand('${#TestCase#NewPtDOB}')-->
<!--    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID-->
<!--    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("dosInDB = " + dosInDB)-->
<!--    //Get accn's DOS from TestCase level property - NewDOS-->
<!--    def dos = context.expand('${#TestCase#NewDOS}')-->

<!--    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: ptDOBInDB == #TestCase#NewDOS-->
<!--    assert ptDOBInDB == ptDOB : "AWS-27:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //Compare accn's DOS in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: dosInDB == #TestCase#NewDOS-->
<!--    assert dosInDB == dos : "AWS-27:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //*****************-->
<!--    //Set StatusMessage value-->
<!--    //Create groovyUtils and XmlHolder for response-->
<!--    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )-->
<!--    def holder = groovyUtils.getXmlHolder( "AWS-27:Step2:Accession WS-CreateNewAccession#Response" )-->


<!--    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.-->
<!--    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"-->

<!--    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )-->
<!--    //Set DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)-->
<!--    log.info "StatusMessage = " + StatusMessage-->
<!--    assert StatusMessage == "Success" : "AWS-27:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->


<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-27:Step4:Accession WS-UpdateAccession-SystemSetupUI" id="cf4b570f-4b99-4843-824c-b5bc1f33a61a"><con:settings/><con:config><script>import com.rpm.tests.*;-->
<!--    import com.xifin.utils.*-->
<!--    import com.xifin.mars.dao.*-->

<!--    import com.xifin.qa.config.*;-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info "newAccnId = " + newAccnId-->

<!--    def Env = context.expand('${#Project#Env}')-->
<!--    log.info "Env = " + Env-->

<!--    def OrgAlias = context.expand('${#Project#OrgAlias}')-->
<!--    log.info "OrgAlias = " + OrgAlias-->

<!--    def eType1 = context.expand('${#Project#eType1}')-->
<!--    log.info "eType1 = " + eType1-->

<!--    def eType2 = context.expand('${#Project#eType2}')-->
<!--    log.info "eType2 = " + eType2-->

<!--    def xapEnv = context.expand('${#Project#xapEnv}')-->
<!--    log.info "xapEnv = " + xapEnv-->

<!--    def engConfigDB = context.expand('${#Project#engConfigDB}')-->
<!--    log.info "engConfigDB = " + engConfigDB-->

<!--    def hasLoggedIn = context.expand('${#Project#hasLoggedIn}')-->
<!--    log.info "hasLoggedIn = " + hasLoggedIn-->


<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->
<!--    sysCall = new SystemCall()-->

<!--    //Detect OS: windows or unix-->
<!--    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=priceAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -Dendpoint")-->
<!--    //////def retval = sysCall.setShellCmd("mvn test -DtestSuite=priceAnAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType=${eType} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -Dendpoint")-->
<!--    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/priceAnAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType=${eType} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -Dendpoint")-->
<!--    def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/priceAnAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType1=${eType1} -DeType2=${eType2} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -Dendpoint")-->
<!--    log.info "retval = " + retval-->

<!--    //Verify process completed successfully-->
<!--    assert retval == 0 : "AWS-27:Step4:Accession WS-UpdateAccession-SystemSetupUI Failed"-->

<!--    //Verify that the accn status = 21 (Priced)-->
<!--    def accnStatusId = daoManagerXifinRpm.getStatusIdByAccnId(newAccnId, dbEnv)-->
<!--    log.info "accnStatusId = " + accnStatusId-->
<!--    assert accnStatusId == 21 : "AWS-27:Step4:Accession WS-UpdateAccession-SystemSetupUI Failed due to the accn was not priced"-->

<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-27:Step5:Accession WS-UpdateAccession-ChangeThirdPartyPyrToNewThirdPartyPyr-TestDataSetup" id="6a1c2ff2-8d7f-4996-816f-6fa3c254ee3f"><con:settings/><con:config><script>import com.xifin.platform.dao.*;-->

<!--    import com.xifin.qa.config.*;-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->



<!--    //Get and Set UpdatedPayorAbbrev testcase-level value-->
<!--    def pyrAbbrev = daoManagerPlatform.getThirdPartyPyrFromPYR(dbEnv)-->
<!--    testRunner.testCase.setPropertyValue ("UpdatedPayorAbbrev", pyrAbbrev)-->
<!--    log.info "UpdatedPayorAbbrev = " + pyrAbbrev-->

<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-27:Step6:Accession WS-UpdateAccession-ChangeThirdPartyPyrToNewThirdPartyPyr" id="400dfe1f-6026-43a1-afff-90744d4daa4f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>UpdateAccession</con:operation><con:request name="AWS-27:Step6:Accession WS-UpdateAccession-ChangeThirdPartyPyrToNewThirdPartyPyr" wssPasswordType="PasswordDigest" id="71f1106a-1521-4f12-855e-41eb0b95b0b8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:UpdateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>12345</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:UpdateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#UpdatedPayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>A123456789</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>18</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               </acc:InsuranceInfo>-->
<!--            </acc:UpdateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:UpdateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e55b1eab-e388-4ca5-9ab0-8b5b1e442f86"/><con:assertion type="XPath Match" name="ValidateUpdateAccessionStatus" id="9855f6d8-4f2e-4f08-84af-b397168643c6"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->

<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-27:Step7:Accession WS-UpdateAccession-ChangeThirdPartyPyrToNewThirdPartyPyr-VerifyUpdatedAccnInDB" id="dec55d55-7d53-43b5-b17a-6d42079216a4"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import com.xifin.mars.dao.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def updatedAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info "UpdatedAccnId = " + updatedAccnId-->

<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->
<!--    def procIdListInDB = []-->

<!--    //======== Verify that the accn status is not Priced (21) after the repricing-->
<!--    def accnStatus = daoManagerXifinRpm.getStatusIdByAccnId(updatedAccnId,dbEnv)-->
<!--    log.info "Accession Status after updating the payor = " + accnStatus-->
<!--    assert accnStatus != 21: "AWS-27:Accession WS-UpdateAccession-ChangeThirdPartyPyrToNewThirdPartyPyr failed"-->

<!--    //======== Verify updated payor abbrev by accn id and payor prio ========-->
<!--    def updatedPayorAbbrevInDB = daoManagerAccnWS.getPayorAbbrevByAccnIdAndPayorPrio(updatedAccnId, 1, dbEnv)-->
<!--    log.info ("updatedPayorAbbrevInDB = " + updatedPayorAbbrevInDB)-->

<!--    //Compare the payor abbrev in db and the value in TestCase level property - UpdatedPayorAbbrev-->
<!--    //Expected Result: updatedPayorAbbrevInDB == #TestCase#UpdatedPayorAbbrev-->
<!--    assert updatedPayorAbbrevInDB == context.expand('${#TestCase#UpdatedPayorAbbrev}') : "AWS-27:Accession WS-UpdateAccession-ChangeThirdPartyPyrToNewThirdPartyPyr failed"-->

<!--    //======== Verify that all the procs were removed after the repricing-->
<!--    procIdListInDB = daoManagerAccnWS.getProcIdFromACCNPROCByAccnId(updatedAccnId,dbEnv)-->
<!--    //Compare the size of the two Lists, if not match returns test failed, else continue-->
<!--    assert procIdListInDB.size == 0: "AWS-27:Accession WS-UpdateAccession-ChangeThirdPartyPyrToNewThirdPartyPyr failed"-->


<!--</script></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20180124151916536</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-01-24</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-01-24</con:value></con:property><con:property><con:name>ClnAbbrev</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180124151916536</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEOXMSI</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEZCKVW</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A914022193</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1114922606</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>AccnPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>TestPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>S91.133</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>WELLEXAM</con:value></con:property><con:property><con:name>Relshp</con:name><con:value>18</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property><con:property><con:name>UpdatedPayorAbbrev</con:name><con:value>UHCAMPATH</con:value></con:property></con:properties></con:testCase>-->
<!--    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-28:Accession WS-UpdateAccession-ChangeThirdPartyPyrToClientPyr" searchProperties="true" id="bbcf6722-ec56-4ffc-912f-bb09f1000ff2"><con:settings/><con:testStep type="groovy" name="AWS-28:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="f75d68c4-2bec-4889-b7ff-247fa3bee144"><con:settings/><con:config><script>import com.xifin.utils.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import com.xifin.mars.dao.*;-->
<!--    import static java.util.Calendar.*-->

<!--    //======== Get values ========-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    timeStamp = new TimeStamp()-->
<!--    randomCharacter = new RandomCharacter()-->
<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->

<!--    //Get an existing Priced 3rd payor accnId and clnId-->
<!--    def existAccnIdClnIdList = []-->
<!--    existAccnIdClnIdList = daoManagerAccnWS.getPricedThirdPartyAccnWOErrorFromACCNAndACCNPYR(dbEnv)-->
<!--    def existAccnId = existAccnIdClnIdList[0]-->
<!--    //def existAccnId = "2013023822"-->
<!--    log.info "existAccnId = " + existAccnId-->

<!--    //Get existing cln id-->
<!--    def existClnId = existAccnIdClnIdList[1]-->
<!--    //def existClnId = "34343"-->
<!--    def existClnAbbrev = daoManagerXifinRpm.getClientAbbrevIdByClientId(existClnId, dbEnv)-->
<!--    log.info "existClnAbbrev = " + existClnAbbrev-->

<!--    //Get timeStamp value-->
<!--    def currentDateTime = timeStamp.getTimeStamp()-->

<!--    //Get currentdate value-->
<!--    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")-->

<!--    //Generate random ptEPI-->
<!--    def newPtEPI = "EPI" + currentDateTime-->
<!--    log.info "newPtEPI = " + newPtEPI-->

<!--    //Generate random ptFName, ptLName-->
<!--    def newPtFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    def newPtLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    log.info "newPtFName = " + newPtFName-->
<!--    log.info "newPtLName = " + newPtLName-->

<!--    //Get existing primary pyr abbrev and subsId and relationship abbrev-->
<!--    def existPyrInfoList = []-->
<!--    existPyrInfoList = daoManagerAccnWS.getPyrAbbrevSubsIdRelshpTypFromAccnPyrByAccnIdPyrPrio(existAccnId, "1", dbEnv)-->
<!--    def existPyrAbbrev = existPyrInfoList[0]-->
<!--    def existSubsId = existPyrInfoList[1]-->
<!--    def existRelshpAbbrev = existPyrInfoList[2]-->
<!--    log.info "existPyrAbbrev = " + existPyrAbbrev-->
<!--    log.info "existSubsId = " + existSubsId-->
<!--    log.info "existRelshpAbbrev = " + existRelshpAbbrev-->

<!--    //Get Ordering Physician NPI-->
<!--    def existPhysNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)-->
<!--    log.info "existPhysNPI = " + existPhysNPI-->

<!--    //Get Ordered Test Abbrev-->
<!--    def testInfoList = []-->
<!--    testInfoList = daoManagerAccnWS.getTestIdFacIdFromAccnTestByAccnId(existAccnId, dbEnv)-->
<!--    def existTestId = testInfoList[0]-->
<!--    def existTestAbbrev = daoManagerAccnWS.getTestAbbrevFromTESTByTestId(existTestId, dbEnv)-->
<!--    log.info "existTestAbbrev = " + existTestAbbrev-->

<!--    //Get test POS from the component in case of profile-->
<!--    def existTestFacId = testInfoList[1]-->
<!--    log.info "existTestFacId = " + existTestFacId-->
<!--    if (	existTestFacId == "0" ) {-->
<!--    existTestFacId = daoManagerAccnWS.getFacIdFromACCNTESTByAccnIdProfId(existAccnId, existTestId, dbEnv)-->
<!--    }-->
<!--    //Get Test POS-->
<!--    def existTestPOS = daoManagerAccnWS.getFacAbbrevFromFACByFacId(existTestFacId, dbEnv)-->
<!--    log.info "existTestPOS = " + existTestPOS-->

<!--    //Get Accn POS-->
<!--    def existAccnPOS = daoManagerAccnWS.getPOSFromCLNFACByClnId(existClnId, dbEnv)-->
<!--    log.info "existAccnPOS = " + existAccnPOS-->

<!--    //Get Accn Diagnosis Code-->
<!--    //def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCodeByAccnIdUserDiagOrder(existAccnId, 1, dbEnv)-->
<!--    def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)-->
<!--    log.info "existAccnDiagCd = " + existAccnDiagCd-->

<!--    //======== Set TestCase level property values ========-->
<!--    //Set NewAccnID TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)-->
<!--    log.info "NewAccnID = " + "QATESTER" + currentDateTime-->

<!--    //Set new DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)-->
<!--    log.info "NewDOS = " + currentDate-->

<!--    //def newPtDOB = "1975-09-10"-->
<!--    //generate new pt DOB-->
<!--    def nowCal = Calendar.instance-->
<!--    def y  = nowCal.get(YEAR)-30-->
<!--    def m  = nowCal.get(MONTH)-->
<!--    def d = nowCal.get(DATE)-->
<!--    nowCal.set(y,m,d)-->
<!--    newPtDOB = String.format('%tF', nowCal)-->
<!--    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)-->
<!--    log.info "NewPtDOB = " + newPtDOB-->

<!--    //Set ClientId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("ClnAbbrev", existClnAbbrev)-->
<!--    log.info "ClnAbbrev = " + existClnAbbrev-->

<!--    //Set EPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewEPI", newPtEPI)-->
<!--    log.info "NewEPI = " + newPtEPI-->

<!--    //Set NewPtFName and NewPtLName TestCase-level values-->
<!--    testRunner.testCase.setPropertyValue ("NewPtFName", newPtFName)-->
<!--    log.info "NewPtFName = " + newPtFName-->
<!--    testRunner.testCase.setPropertyValue ("NewPtLName", newPtLName)-->
<!--    log.info "NewPtLName = " + newPtLName-->

<!--    //Set NewSubsId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewSubsId", existSubsId)-->
<!--    log.info "NewSubsId = " + existSubsId-->

<!--    //Set PhysNPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PhysNPI", existPhysNPI)-->
<!--    log.info "PhysNPI = " + existPhysNPI-->

<!--    //Set TestAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("TestAbbrev", existTestAbbrev)-->
<!--    log.info "TestAbbrev = " + existTestAbbrev-->

<!--    //set accn POS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("AccnPOS", existAccnPOS)-->
<!--    log.info "AccnPOS = " + existAccnPOS-->

<!--    //set test POS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("TestPOS", existTestPOS)-->
<!--    log.info "TestPOS = " + existTestPOS-->

<!--    //set DiagCD TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("DiagCD", existAccnDiagCd)-->
<!--    log.info "DiagCD = " + existAccnDiagCd-->

<!--    //set PayorAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PayorAbbrev", existPyrAbbrev)-->
<!--    log.info "PayorAbbrev = " + existPyrAbbrev-->

<!--    //set RelshpType TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("Relshp", existRelshpAbbrev)-->
<!--    log.info "Relshp = " + existRelshpAbbrev-->
<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-28:Step2:Accession WS-CreateNewAccession" id="02a002db-ea85-41c2-a1a6-0dbb91bb297c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-28:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="c9fade64-5943-4f8c-9db0-71726f0cff68"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:CreateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>1111</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:CreateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:ClientId>${#TestCase#ClnAbbrev}</acc:ClientId>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PatientInfo>-->
<!--                  &lt;!&ndash;<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:&ndash;&gt;-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Person>-->
<!--                     <typ:Name>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:MiddleName>M</typ:MiddleName>-->
<!--                     </typ:Name>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Gender>MALE</typ:Gender>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Address>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:ZIP>32542</typ:ZIP>-->
<!--                     </typ:Address>-->
<!--                  </acc:Person>-->
<!--               </acc:PatientInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:Physicians>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Ordering>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>-->
<!--                  </acc:Ordering>-->
<!--               </acc:Physicians>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:OrderedTests>-->
<!--                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>-->
<!--                  <acc:TransactionType>D</acc:TransactionType>-->
<!--                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:PlaceOfService>${#TestCase#TestPOS}</acc:PlaceOfService>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Units>1</acc:Units>-->
<!--               </acc:OrderedTests>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:AccessionLevelDiagnosisCodes>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>-->
<!--               </acc:AccessionLevelDiagnosisCodes>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PscLocationId>${#TestCase#AccnPOS}</acc:PscLocationId>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>${#TestCase#Relshp}</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               </acc:InsuranceInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>-->
<!--            </acc:CreateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:CreateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="76fc388d-53e6-4715-aa88-bb3aad25d127"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="106798b7-551b-4422-bdb6-15f132243597"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->


<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-28:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="62713277-6970-49e3-a314-7beaeb9f8f33"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    log.info dbEnv-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info newAccnId-->

<!--    //======== Verify pt's fName by accn id ========-->
<!--    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptFNameInDB = " + ptFNameInDB)-->
<!--    //Get Pt's fName from TestCase level property - NewPtFName-->
<!--    def newPtFName = context.expand('${#TestCase#NewPtFName}')-->

<!--    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName-->
<!--    //Expected Result: ptFNameInDB == #TestCase#NewPtFName-->
<!--    assert ptFNameInDB == newPtFName : "AWS-28:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //======== Verify pt's lName by accn id ========-->
<!--    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptLNameInDB = " + ptLNameInDB)-->
<!--    //Get Pt's lName from TestCase level property - NewPtLName-->
<!--    def newPtLName = context.expand('${#TestCase#NewPtLName}')-->

<!--    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName-->
<!--    //Expected Result: ptLNameInDB == #TestCase#NewPtLName-->
<!--    assert ptLNameInDB == newPtLName : "AWS-28:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //======== Verify pt's DOB and accn's DOS by accn id ========-->
<!--    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptDOBInDB = " + ptDOBInDB)-->
<!--    //Get Pt's DOB from TestCase level property - NewPtDOB-->
<!--    def ptDOB = context.expand('${#TestCase#NewPtDOB}')-->
<!--    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID-->
<!--    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("dosInDB = " + dosInDB)-->
<!--    //Get accn's DOS from TestCase level property - NewDOS-->
<!--    def dos = context.expand('${#TestCase#NewDOS}')-->

<!--    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: ptDOBInDB == #TestCase#NewDOS-->
<!--    assert ptDOBInDB == ptDOB : "AWS-28:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //Compare accn's DOS in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: dosInDB == #TestCase#NewDOS-->
<!--    assert dosInDB == dos : "AWS-28:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //*****************-->
<!--    //Set StatusMessage value-->
<!--    //Create groovyUtils and XmlHolder for response-->
<!--    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )-->
<!--    def holder = groovyUtils.getXmlHolder( "AWS-28:Step2:Accession WS-CreateNewAccession#Response" )-->


<!--    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.-->
<!--    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"-->

<!--    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )-->
<!--    //Set DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)-->
<!--    log.info "StatusMessage = " + StatusMessage-->
<!--    assert StatusMessage == "Success" : "AWS-28:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->


<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-28:Step4:Accession WS-UpdateAccession-SystemSetupUI" id="a9573226-63ba-4467-9418-fa25110fdaec"><con:settings/><con:config><script>import com.rpm.tests.*;-->
<!--    import com.xifin.utils.*-->
<!--    import com.xifin.mars.dao.*-->

<!--    import com.xifin.qa.config.*;-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info "newAccnId = " + newAccnId-->

<!--    def Env = context.expand('${#Project#Env}')-->
<!--    log.info "Env = " + Env-->

<!--    def OrgAlias = context.expand('${#Project#OrgAlias}')-->
<!--    log.info "OrgAlias = " + OrgAlias-->

<!--    def eType1 = context.expand('${#Project#eType1}')-->
<!--    log.info "eType1 = " + eType1-->

<!--    def eType2 = context.expand('${#Project#eType2}')-->
<!--    log.info "eType2 = " + eType2-->

<!--    def xapEnv = context.expand('${#Project#xapEnv}')-->
<!--    log.info "xapEnv = " + xapEnv-->

<!--    def engConfigDB = context.expand('${#Project#engConfigDB}')-->
<!--    log.info "engConfigDB = " + engConfigDB-->

<!--    def hasLoggedIn = context.expand('${#Project#hasLoggedIn}')-->
<!--    log.info "hasLoggedIn = " + hasLoggedIn-->

<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->
<!--    sysCall = new SystemCall()-->

<!--    //Detect OS: windows or unix-->
<!--    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=priceAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -Dendpoint")-->
<!--    def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/priceAnAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType1=${eType1} -DeType2=${eType2} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -Dendpoint")-->
<!--    log.info "retval = " + retval-->

<!--    //Verify process completed successfully-->
<!--    assert retval == 0 : "AWS-28:Step4:Accession WS-UpdateAccession-SystemSetupUI Failed"-->

<!--    //Verify that the accn status = 21 (Priced)-->
<!--    def accnStatusId = daoManagerXifinRpm.getStatusIdByAccnId(newAccnId, dbEnv)-->
<!--    log.info "accnStatusId = " + accnStatusId-->
<!--    assert accnStatusId == 21 : "AWS-28:Step4:Accession WS-UpdateAccession-SystemSetupUI Failed due to the accn was not priced"-->

<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-28:Step5:Accession WS-UpdateAccession-ChangeThirdPartyPyrToClientPyr-TestDataSetup" id="bb785834-69b7-49b1-acb1-4ce8559b2611"><con:settings/><con:config><script>//Get and Set UpdatedPayorAbbrev testcase-level value-->
<!--    def newPyrAbbrev = "C"-->
<!--    testRunner.testCase.setPropertyValue ("UpdatedPayorAbbrev", newPyrAbbrev)-->
<!--    log.info "UpdatedPayorAbbrev = " + newPyrAbbrev-->

<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-28:Step6:Accession WS-UpdateAccession-ChangeThirdPartyPyrToClientPyr" id="c1bbf890-c1e2-4303-a5cb-5a888cb48143"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>UpdateAccession</con:operation><con:request name="AWS-28:Step6:Accession WS-UpdateAccession-ChangeThirdPartyPyrToClientPyr" wssPasswordType="PasswordDigest" id="a72178b8-27cb-4dc5-8abf-023763d8952d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:UpdateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>12345</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:UpdateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#UpdatedPayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>A123456789</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>18</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               </acc:InsuranceInfo>-->
<!--            </acc:UpdateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:UpdateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0c6f6cdd-308f-46ff-ab97-786a64e1c7e9"/><con:assertion type="XPath Match" name="ValidateUpdateAccessionStatus" id="9ad04be2-0287-447a-921b-c9ed11b70e04"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->

<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-28:Step7:Accession WS-UpdateAccession-ChangeThirdPartyPyrToClientPyr-VerifyUpdatedAccnInDB" id="900a35f1-295c-4b2c-b70a-57d0c4b1f735"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import com.xifin.mars.dao.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def updatedAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info "UpdatedAccnId = " + updatedAccnId-->

<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->
<!--    def procIdListInDB = []-->

<!--    //======== Verify that the accn status is not Priced (21) after the repricing-->
<!--    def accnStatus = daoManagerXifinRpm.getStatusIdByAccnId(updatedAccnId,dbEnv)-->
<!--    log.info "Accession Status after updating the payor = " + accnStatus-->
<!--    assert accnStatus != 21: "AWS-28:Accession WS-UpdateAccession-ChangeThirdPartyPyrToClientPyr failed"-->

<!--    //======== Verify updated payor abbrev by accn id and payor prio ========-->
<!--    def updatedPayorAbbrevInDB = daoManagerAccnWS.getPayorAbbrevByAccnIdAndPayorPrio(updatedAccnId, 1, dbEnv)-->
<!--    log.info ("updatedPayorAbbrevInDB = " + updatedPayorAbbrevInDB)-->

<!--    //Compare the payor abbrev in db and the value in TestCase level property - UpdatedPayorAbbrev-->
<!--    //Expected Result: updatedPayorAbbrevInDB == #TestCase#UpdatedPayorAbbrev-->
<!--    assert updatedPayorAbbrevInDB == context.expand('${#TestCase#UpdatedPayorAbbrev}') : "AWS-28:Accession WS-UpdateAccession-ChangeThirdPartyPyrToClientPyr failed"-->

<!--    //======== Verify that all the procs were removed after the repricing-->
<!--    procIdListInDB = daoManagerAccnWS.getProcIdFromACCNPROCByAccnId(updatedAccnId,dbEnv)-->
<!--    //Compare the size of the two Lists, if not match returns test failed, else continue-->
<!--    assert procIdListInDB.size == 0: "AWS-28:Accession WS-UpdateAccession-ChangeThirdPartyPyrToClientPyr failed"-->


<!--</script></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20180124154823295</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-01-24</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-01-24</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180124154823295</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEQNNGB</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEPLQMQ</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A914022193</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1578566626</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>S42.312P</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>WELLEXAM</con:value></con:property><con:property><con:name>ClnAbbrev</con:name><con:value>100</con:value></con:property><con:property><con:name>AccnPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>TestPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>Relshp</con:name><con:value>18</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property><con:property><con:name>UpdatedPayorAbbrev</con:name><con:value>C</con:value></con:property></con:properties></con:testCase>-->
<!--    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-29:Accession WS-UpdateAccession-ChangeClientPyrToThirdPartyPyr" searchProperties="true" id="f749557a-5f7b-4f6d-aa48-e47753f33e45"><con:settings/><con:testStep type="groovy" name="AWS-29:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="4c573609-9aff-4fcf-bebd-9357fe4aa719"><con:settings/><con:config><script>import com.xifin.utils.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import static java.util.Calendar.*-->

<!--    //======== Get values ========-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    //Get timeStamp value-->
<!--    timeStamp = new TimeStamp()-->
<!--    def currentDateTime = timeStamp.getTimeStamp()-->

<!--    //Get currentdate value-->
<!--    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")-->

<!--    //Get ClientId value-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)-->

<!--    //Get random ptEPI-->
<!--    def ptEPI = "EPI" + currentDateTime-->

<!--    //Get random ptFName, ptLName and subsId-->
<!--    randomCharacter = new RandomCharacter()-->
<!--    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    def subsId = "A" + randomCharacter.getRandomNumericString(9)-->

<!--    //Get Ordering Physician NPI-->
<!--    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)-->
<!--    log.info "getPhysicianNPI"-->

<!--    //Get Ordered Test Abbrev-->
<!--    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)-->
<!--    log.info "getTestAbbrev"-->

<!--    //Get POS-->
<!--    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)-->

<!--    //Get Diagnosis Code-->
<!--    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)-->

<!--    //Get Payor Abbrev-->
<!--    //def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)-->
<!--    def pyrAbbrev = "C"-->

<!--    //======== Set TestCase level property values ========-->
<!--    //Set NewAccnID TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)-->
<!--    log.info "NewAccnID = " + "QATESTER" + currentDateTime-->

<!--    //Set DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)-->
<!--    log.info "NewDOS = " + currentDate-->

<!--    //def newPtDOB = "1975-09-10"-->
<!--    //generate new pt DOB-->
<!--    def nowCal = Calendar.instance-->
<!--    def y  = nowCal.get(YEAR)-30-->
<!--    def m  = nowCal.get(MONTH)-->
<!--    def d = nowCal.get(DATE)-->
<!--    nowCal.set(y,m,d)-->
<!--    newPtDOB = String.format('%tF', nowCal)-->
<!--    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)-->
<!--    log.info "NewPtDOB = " + newPtDOB-->

<!--    //Set ClientId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("ClientId", clientId)-->
<!--    log.info "ClientId = " + clientId-->

<!--    //Set EPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)-->
<!--    log.info "NewEPI = " + ptEPI-->

<!--    //Set NewPtFName and NewPtLName TestCase-level values-->
<!--    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)-->
<!--    log.info "NewPtFName = " + ptFName-->
<!--    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)-->
<!--    log.info "NewPtLName = " + ptLName-->

<!--    //Set NewSubsId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)-->
<!--    log.info "NewSubsId = " + subsId-->

<!--    //Set PhysNPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)-->
<!--    log.info "PhysNPI = " + physNPI-->

<!--    //Set TestAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)-->
<!--    log.info "TestAbbrev = " + testAbbrev-->

<!--    //set POS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("POS", pos)-->
<!--    log.info "POS = " + pos-->

<!--    //set DiagCD TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)-->
<!--    log.info "DiagCD = " + diagCd-->

<!--    //set PayorAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)-->
<!--    log.info "PayorAbbrev = " + pyrAbbrev-->

<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-29:Step2:Accession WS-CreateNewAccession" id="381bfee5-ae57-4f2b-b87b-b1edb7e21d33"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-29:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="b9966c08-c7a3-4f1a-a973-3489a65ef114"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:CreateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>1111</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:CreateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PatientInfo>-->
<!--                  &lt;!&ndash;<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:&ndash;&gt;-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Person>-->
<!--                     <typ:Name>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:MiddleName>M</typ:MiddleName>-->
<!--                     </typ:Name>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Gender>MALE</typ:Gender>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Address>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:ZIP>32542</typ:ZIP>-->
<!--                     </typ:Address>-->
<!--                  </acc:Person>-->
<!--               </acc:PatientInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:Physicians>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Ordering>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>-->
<!--                  </acc:Ordering>-->
<!--               </acc:Physicians>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:OrderedTests>-->
<!--                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>-->
<!--                  <acc:TransactionType>D</acc:TransactionType>-->
<!--                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Units>1</acc:Units>-->
<!--               </acc:OrderedTests>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:AccessionLevelDiagnosisCodes>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>-->
<!--               </acc:AccessionLevelDiagnosisCodes>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>18</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               </acc:InsuranceInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>-->
<!--            </acc:CreateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:CreateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="f2e19ebc-e8ef-45f9-afc9-1aa482bcd0a4"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="bcfc70e2-3018-41c8-ad0c-89537a852eab"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->


<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-29:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="54fe3840-3b12-44a7-851c-cdba861c77e6"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    log.info dbEnv-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info newAccnId-->

<!--    //======== Verify pt's fName by accn id ========-->
<!--    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptFNameInDB = " + ptFNameInDB)-->
<!--    //Get Pt's fName from TestCase level property - NewPtFName-->
<!--    def newPtFName = context.expand('${#TestCase#NewPtFName}')-->

<!--    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName-->
<!--    //Expected Result: ptFNameInDB == #TestCase#NewPtFName-->
<!--    assert ptFNameInDB == newPtFName : "AWS-29:Step2:Accession WS-CreateNewAccession failed"-->

<!--    //======== Verify pt's lName by accn id ========-->
<!--    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptLNameInDB = " + ptLNameInDB)-->
<!--    //Get Pt's lName from TestCase level property - NewPtLName-->
<!--    def newPtLName = context.expand('${#TestCase#NewPtLName}')-->

<!--    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName-->
<!--    //Expected Result: ptLNameInDB == #TestCase#NewPtLName-->
<!--    assert ptLNameInDB == newPtLName : "AWS-29:Step2:Accession WS-CreateNewAccession failed"-->

<!--    //======== Verify pt's DOB and accn's DOS by accn id ========-->
<!--    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptDOBInDB = " + ptDOBInDB)-->
<!--    //Get Pt's DOB from TestCase level property - NewPtDOB-->
<!--    def ptDOB = context.expand('${#TestCase#NewPtDOB}')-->
<!--    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID-->
<!--    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("dosInDB = " + dosInDB)-->
<!--    //Get accn's DOS from TestCase level property - NewDOS-->
<!--    def dos = context.expand('${#TestCase#NewDOS}')-->

<!--    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: ptDOBInDB == #TestCase#NewDOS-->
<!--    assert ptDOBInDB == ptDOB : "AWS-29:Step2:Accession WS-CreateNewAccession failed"-->

<!--    //Compare accn's DOS in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: dosInDB == #TestCase#NewDOS-->
<!--    assert dosInDB == dos : "AWS-29:Step2:Accession WS-CreateNewAccession failed"-->

<!--    //*****************-->
<!--    //Set StatusMessage value-->
<!--    //Create groovyUtils and XmlHolder for response-->
<!--    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )-->
<!--    def holder = groovyUtils.getXmlHolder( "AWS-29:Step2:Accession WS-CreateNewAccession#Response" )-->


<!--    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.-->
<!--    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"-->

<!--    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )-->
<!--    //Set DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)-->
<!--    log.info "StatusMessage = " + StatusMessage-->
<!--    assert StatusMessage == "Success" : "AWS-29:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"-->


<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-29:Step4:Accession WS-UpdateAccession-SystemSetupUI" id="cfb01701-e3c8-4247-9899-2df43d44a31c"><con:settings/><con:config><script>import com.rpm.tests.*;-->
<!--    import com.xifin.utils.*-->




<!--    import com.xifin.qa.config.*;-->
<!--    //Get accnId-->
<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info "newAccnId = " + newAccnId-->

<!--    def Env = context.expand('${#Project#Env}')-->
<!--    log.info "Env = " + Env-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def OrgAlias = context.expand('${#Project#OrgAlias}')-->
<!--    log.info "OrgAlias = " + OrgAlias-->

<!--    def eType1 = context.expand('${#Project#eType1}')-->
<!--    log.info "eType1 = " + eType1-->

<!--    def eType2 = context.expand('${#Project#eType2}')-->
<!--    log.info "eType2 = " + eType2-->

<!--    def xapEnv = context.expand('${#Project#xapEnv}')-->
<!--    log.info "xapEnv = " + xapEnv-->

<!--    def engConfigDB = context.expand('${#Project#engConfigDB}')-->
<!--    log.info "engConfigDB = " + engConfigDB-->

<!--    def hasLoggedIn = context.expand('${#Project#hasLoggedIn}')-->
<!--    log.info "hasLoggedIn = " + hasLoggedIn-->

<!--    //daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->
<!--    sysCall = new SystemCall()-->

<!--    //Detect OS: windows or unix-->
<!--    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=priceAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -Dendpoint")-->
<!--    def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/priceAnAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType1=${eType1} -DeType2=${eType2} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -Dendpoint")-->
<!--    log.info "retval = " + retval-->

<!--    //Verify process completed successfully-->
<!--    assert retval == 0 : "AWS-29:Step4:Accession WS-UpdateAccession-SystemSetupUI Failed"-->



<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-29:Step5:Accession WS-UpdateAccession-ChangeClientPyrToThirdPartyPyr-TestDataSetup" id="3463e6ea-5db2-4b0d-a689-9f8a82dddaf5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status-->
<!--    import com.xifin.utils.*;-->
<!--    import com.xifin.platform.dao.*;-->
<!--    import com.xifin.mars.dao.*;-->

<!--    import com.xifin.qa.config.*;-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    daoManagerPlatform = new DaoManagerPlatform(configuration.getRpmDatabase())-->
<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->

<!--    def accnId = context.expand('${#TestCase#NewAccnID}')-->

<!--    //======== Verify that the accn status is ZBal (51) after ranning the Pricing Engine-->
<!--    def accnStatus = daoManagerXifinRpm.getStatusIdByAccnId(accnId,dbEnv)-->
<!--    log.info "Accession Status after the pricing = " + accnStatus-->
<!--    assert accnStatus == 51: "AWS-29:Accession WS-UpdateAccession-ChangeClientPyrToThirdPartyPyr failed; The accn was not in Zbal Status after the Pricing."-->

<!--    //===== Get and Set testcase-level property values =====-->
<!--    //Get and Set ExistingAccnId testcase-level value-->
<!--    testRunner.testCase.setPropertyValue ("ExistingAccnId", accnId)-->
<!--    log.info "ExistingAccnId = " + accnId-->

<!--    //Get and Set DOS testcase-level value-->
<!--    def dos = context.expand('${#TestCase#NewDOS}')-->
<!--    testRunner.testCase.setPropertyValue ("DOS", dos)-->
<!--    log.info "DOS = " + dos-->

<!--    //Get and Set UpdatedPayorAbbrev testcase-level value-->
<!--    def pyrAbbrev = daoManagerPlatform.getThirdPartyPyrFromPYR(dbEnv)-->
<!--    testRunner.testCase.setPropertyValue ("UpdatedPayorAbbrev", pyrAbbrev)-->
<!--    log.info "UpdatedPayorAbbrev = " + pyrAbbrev-->

<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-29:Step6:Accession WS-UpdateAccession-ChangeClientPyrToThirdPartyPyr" id="1acaf1af-b195-4df3-beba-d93fe0824d97"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>UpdateAccession</con:operation><con:request name="AWS-29:Step6:Accession WS-UpdateAccession-ChangeClientPyrToThirdPartyPyr" wssPasswordType="PasswordDigest" id="9b6c0a4b-888e-4cb3-8ac0-f414b022266c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:UpdateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>12345</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:UpdateAccession>-->
<!--               <acc:AccessionId>${#TestCase#ExistingAccnId}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#DOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#UpdatedPayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>18</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               </acc:InsuranceInfo>-->
<!--            </acc:UpdateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:UpdateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="cefbe671-bdef-4d52-8846-d92d3a3643b3"/><con:assertion type="XPath Match" name="ValidateUpdateAccessionStatus" id="99c87dca-a31a-41fa-aa2f-a35cde8ba4ae"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->

<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-29:Step7:Accession WS-UpdateAccession-ChangeClientPyrToThirdPartyPyr-VerifyUpdatedAccnInDB" id="5ead0f15-e031-43a8-b1a9-4e98932b32b0"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import com.xifin.mars.dao.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def updatedAccnId = context.expand('${#TestCase#ExistingAccnId}')-->
<!--    log.info "UpdatedAccnId = " + updatedAccnId-->

<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->
<!--    def procIdListInDB = []-->

<!--    //======== Verify that the accn status is not ZBal (51) after the repricing-->
<!--    def accnStatus = daoManagerXifinRpm.getStatusIdByAccnId(updatedAccnId,dbEnv)-->
<!--    log.info "Accession Status after updating the payor = " + accnStatus-->
<!--    assert accnStatus != 51: "AWS-29:Accession WS-UpdateAccession-ChangeClientPyrToThirdPartyPyr failed"-->

<!--    //======== Verify updated payor abbrev by accn id and payor prio ========-->
<!--    def updatedPayorAbbrevInDB = daoManagerAccnWS.getPayorAbbrevByAccnIdAndPayorPrio(updatedAccnId, 1, dbEnv)-->
<!--    log.info ("updatedPayorAbbrevInDB = " + updatedPayorAbbrevInDB)-->

<!--    //Compare the payor abbrev in db and the value in TestCase level property - UpdatedPayorAbbrev-->
<!--    //Expected Result: updatedPayorAbbrevInDB == #TestCase#UpdatedPayorAbbrev-->
<!--    assert updatedPayorAbbrevInDB == context.expand('${#TestCase#UpdatedPayorAbbrev}') : "AWS-29:Accession WS-UpdateAccession-ChangeClientPyrToThirdPartyPyr failed"-->

<!--    //======== Verify that all the procs were removed after the repricing-->
<!--    procIdListInDB = daoManagerAccnWS.getProcIdFromACCNPROCByAccnId(updatedAccnId,dbEnv)-->
<!--    //Compare the size of the two Lists, if not match returns test failed, else continue-->
<!--    assert procIdListInDB.size == 0: "AWS-29:Accession WS-UpdateAccession-ChangeClientPyrToThirdPartyPyr failed"-->


<!--</script></con:config></con:testStep><con:properties><con:property><con:name>ExistingAccnId</con:name><con:value>QATESTER20180124155216948</con:value></con:property><con:property><con:name>DOS</con:name><con:value>2018-01-24</con:value></con:property><con:property><con:name>UpdatedPayorAbbrev</con:name><con:value>MCTX</con:value></con:property><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20180124155216948</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-01-24</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-01-24</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180124155216948</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEGXYBE</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEZPITV</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A995655368</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1578566626</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>S63.224S</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>C</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase>-->
<!--    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-200:Accession WS-UpdateAccession-PushAccnIntoOutsideAgnecyPreCorrespQueue" searchProperties="true" id="69bb2abd-9868-4497-815e-d955d06402bb"><con:settings/><con:testStep type="groovy" name="AWS-200:Step1:CreateNewAccession-TestDataSetup" id="b1a3829e-aaf7-4794-b657-4291baf4e05f"><con:settings/><con:config><script>import com.xifin.utils.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import com.xifin.mars.dao.*;-->
<!--    import static java.util.Calendar.*-->

<!--    //======== Get values ========-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    timeStamp = new TimeStamp()-->
<!--    randomCharacter = new RandomCharacter()-->
<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->

<!--    //Get an existing Priced 3rd payor accnId and clnId-->
<!--    def existAccnIdClnIdList = []-->
<!--    existAccnIdClnIdList = daoManagerAccnWS.getPricedThirdPartyAccnWOErrorFromACCNAndACCNPYR(dbEnv)-->
<!--    def existAccnId = existAccnIdClnIdList[0]-->
<!--    //def existAccnId = "2013023822"-->
<!--    log.info "existAccnId = " + existAccnId-->

<!--    //Get existing cln id-->
<!--    def existClnId = existAccnIdClnIdList[1]-->
<!--    //def existClnId = "34343"-->
<!--    def existClnAbbrev = daoManagerXifinRpm.getClientAbbrevIdByClientId(existClnId, dbEnv)-->
<!--    log.info "existClnAbbrev = " + existClnAbbrev-->

<!--    //Get timeStamp value-->
<!--    def currentDateTime = timeStamp.getTimeStamp()-->

<!--    //Get currentdate value-->
<!--    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")-->

<!--    //Generate random ptEPI-->
<!--    def newPtEPI = "EPI" + currentDateTime-->
<!--    log.info "newPtEPI = " + newPtEPI-->

<!--    //Generate random ptFName, ptLName-->
<!--    def newPtFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    def newPtLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    log.info "newPtFName = " + newPtFName-->
<!--    log.info "newPtLName = " + newPtLName-->

<!--    //Get existing primary pyr abbrev and subsId and relationship abbrev-->
<!--    def existPyrInfoList = []-->
<!--    existPyrInfoList = daoManagerAccnWS.getPyrAbbrevSubsIdRelshpTypFromAccnPyrByAccnIdPyrPrio(existAccnId, "1", dbEnv)-->
<!--    def existPyrAbbrev = existPyrInfoList[0]-->
<!--    def existSubsId = existPyrInfoList[1]-->
<!--    def existRelshpAbbrev = existPyrInfoList[2]-->
<!--    log.info "existPyrAbbrev = " + existPyrAbbrev-->
<!--    log.info "existSubsId = " + existSubsId-->
<!--    log.info "existRelshpAbbrev = " + existRelshpAbbrev-->

<!--    //Get Ordering Physician NPI-->
<!--    def existPhysNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)-->
<!--    log.info "existPhysNPI = " + existPhysNPI-->

<!--    //Get Ordered Test Abbrev-->
<!--    def testInfoList = []-->
<!--    testInfoList = daoManagerAccnWS.getTestIdFacIdFromAccnTestByAccnId(existAccnId, dbEnv)-->
<!--    def existTestId = testInfoList[0]-->
<!--    def existTestAbbrev = daoManagerAccnWS.getTestAbbrevFromTESTByTestId(existTestId, dbEnv)-->
<!--    log.info "existTestAbbrev = " + existTestAbbrev-->

<!--    //Get test POS from the component in case of profile-->
<!--    def existTestFacId = testInfoList[1]-->
<!--    log.info "existTestFacId = " + existTestFacId-->
<!--    if (	existTestFacId == "0" ) {-->
<!--    existTestFacId = daoManagerAccnWS.getFacIdFromACCNTESTByAccnIdProfId(existAccnId, existTestId, dbEnv)-->
<!--    }-->
<!--    //Get Test POS-->
<!--    def existTestPOS = daoManagerAccnWS.getFacAbbrevFromFACByFacId(existTestFacId, dbEnv)-->
<!--    log.info "existTestPOS = " + existTestPOS-->

<!--    //Get Accn POS-->
<!--    def existAccnPOS = daoManagerAccnWS.getPOSFromCLNFACByClnId(existClnId, dbEnv)-->
<!--    log.info "existAccnPOS = " + existAccnPOS-->

<!--    //Get Accn Diagnosis Code-->
<!--    //def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCodeByAccnIdUserDiagOrder(existAccnId, 1, dbEnv)-->
<!--    def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)-->
<!--    log.info "existAccnDiagCd = " + existAccnDiagCd-->

<!--    //======== Set TestCase level property values ========-->
<!--    //Set NewAccnID TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)-->
<!--    log.info "NewAccnID = " + "QATESTER" + currentDateTime-->

<!--    //Set new DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)-->
<!--    log.info "NewDOS = " + currentDate-->

<!--    //def newPtDOB = "1975-09-10"-->
<!--    //generate new pt DOB-->
<!--    def nowCal = Calendar.instance-->
<!--    def y  = nowCal.get(YEAR)-30-->
<!--    def m  = nowCal.get(MONTH)-->
<!--    def d = nowCal.get(DATE)-->
<!--    nowCal.set(y,m,d)-->
<!--    newPtDOB = String.format('%tF', nowCal)-->
<!--    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)-->
<!--    log.info "NewPtDOB = " + newPtDOB-->

<!--    //Set ClientId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("ClnAbbrev", existClnAbbrev)-->
<!--    log.info "ClnAbbrev = " + existClnAbbrev-->

<!--    //Set EPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewEPI", newPtEPI)-->
<!--    log.info "NewEPI = " + newPtEPI-->

<!--    //Set NewPtFName and NewPtLName TestCase-level values-->
<!--    testRunner.testCase.setPropertyValue ("NewPtFName", newPtFName)-->
<!--    log.info "NewPtFName = " + newPtFName-->
<!--    testRunner.testCase.setPropertyValue ("NewPtLName", newPtLName)-->
<!--    log.info "NewPtLName = " + newPtLName-->

<!--    //Set NewSubsId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewSubsId", existSubsId)-->
<!--    log.info "NewSubsId = " + existSubsId-->

<!--    //Set PhysNPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PhysNPI", existPhysNPI)-->
<!--    log.info "PhysNPI = " + existPhysNPI-->

<!--    //Set TestAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("TestAbbrev", existTestAbbrev)-->
<!--    log.info "TestAbbrev = " + existTestAbbrev-->

<!--    //set accn POS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("AccnPOS", existAccnPOS)-->
<!--    log.info "AccnPOS = " + existAccnPOS-->

<!--    //set test POS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("TestPOS", existTestPOS)-->
<!--    log.info "TestPOS = " + existTestPOS-->

<!--    //set DiagCD TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("DiagCD", existAccnDiagCd)-->
<!--    log.info "DiagCD = " + existAccnDiagCd-->

<!--    //set PayorAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PayorAbbrev", existPyrAbbrev)-->
<!--    log.info "PayorAbbrev = " + existPyrAbbrev-->

<!--    //set RelshpType TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("Relshp", existRelshpAbbrev)-->
<!--    log.info "Relshp = " + existRelshpAbbrev-->
<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-200:Step2:CreateNewAccession-SendSoapRequest" id="331cf55d-f924-43b3-b660-1f7a9f5dcfee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-200:Step2:CreateNewAccession-SendSoapRequest" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="cef4154f-7841-4afc-bb8c-96473223ad3b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:CreateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>1111</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:CreateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:ClientId>${#TestCase#ClnAbbrev}</acc:ClientId>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PatientInfo>-->
<!--                  &lt;!&ndash;<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:&ndash;&gt;-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Person>-->
<!--                     <typ:Name>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:MiddleName>M</typ:MiddleName>-->
<!--                     </typ:Name>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Gender>MALE</typ:Gender>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Address>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:ZIP>32542</typ:ZIP>-->
<!--                     </typ:Address>-->
<!--                  </acc:Person>-->
<!--               </acc:PatientInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:Physicians>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Ordering>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>-->
<!--                  </acc:Ordering>-->
<!--               </acc:Physicians>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:OrderedTests>-->
<!--                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>-->
<!--                  <acc:TransactionType>D</acc:TransactionType>-->
<!--                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:PlaceOfService>${#TestCase#TestPOS}</acc:PlaceOfService>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Units>1</acc:Units>-->
<!--               </acc:OrderedTests>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:AccessionLevelDiagnosisCodes>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>-->
<!--               </acc:AccessionLevelDiagnosisCodes>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PscLocationId>${#TestCase#AccnPOS}</acc:PscLocationId>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>${#TestCase#Relshp}</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               </acc:InsuranceInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>-->
<!--            </acc:CreateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:CreateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6e611b76-2343-4ec4-a621-a3c732f48170"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="162d6870-ec34-4686-b42f-bbaa14a37a00"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->


<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-200:Step3:CreateNewAccession-VerifyNewlyCreatedAccnInDB" id="2786752c-9d4d-4e05-9908-45f2fb23d982"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    log.info dbEnv-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info newAccnId-->

<!--    //======== Verify pt's fName by accn id ========-->
<!--    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptFNameInDB = " + ptFNameInDB)-->
<!--    //Get Pt's fName from TestCase level property - NewPtFName-->
<!--    def newPtFName = context.expand('${#TestCase#NewPtFName}')-->

<!--    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName-->
<!--    //Expected Result: ptFNameInDB == #TestCase#NewPtFName-->
<!--    assert ptFNameInDB == newPtFName : "AWS-200:Step3:CreateNewAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //======== Verify pt's lName by accn id ========-->
<!--    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptLNameInDB = " + ptLNameInDB)-->
<!--    //Get Pt's lName from TestCase level property - NewPtLName-->
<!--    def newPtLName = context.expand('${#TestCase#NewPtLName}')-->

<!--    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName-->
<!--    //Expected Result: ptLNameInDB == #TestCase#NewPtLName-->
<!--    assert ptLNameInDB == newPtLName : "AWS-200:Step3:CreateNewAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //======== Verify pt's DOB and accn's DOS by accn id ========-->
<!--    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptDOBInDB = " + ptDOBInDB)-->
<!--    //Get Pt's DOB from TestCase level property - NewPtDOB-->
<!--    def ptDOB = context.expand('${#TestCase#NewPtDOB}')-->
<!--    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID-->
<!--    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("dosInDB = " + dosInDB)-->
<!--    //Get accn's DOS from TestCase level property - NewDOS-->
<!--    def dos = context.expand('${#TestCase#NewDOS}')-->

<!--    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: ptDOBInDB == #TestCase#NewDOS-->
<!--    assert ptDOBInDB == ptDOB : "AWS-200:Step3:CreateNewAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //Compare accn's DOS in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: dosInDB == #TestCase#NewDOS-->
<!--    assert dosInDB == dos : "AWS-200:Step3:CreateNewAccession-VerifyNewlyCreatedAccnInDB failed"-->

<!--    //*****************-->
<!--    //Set StatusMessage value-->
<!--    //Create groovyUtils and XmlHolder for response-->
<!--    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )-->
<!--    def holder = groovyUtils.getXmlHolder( "AWS-200:Step2:CreateNewAccession-SendSoapRequest#Response" )-->


<!--    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.-->
<!--    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"-->

<!--    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )-->
<!--    //Set DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)-->
<!--    log.info "StatusMessage = " + StatusMessage-->
<!--    assert StatusMessage == "Success" : "AWS-200:Step3:CreateNewAccession-VerifyNewlyCreatedAccnInDB failed"-->


<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-200:Step4:CreateNewAccession-PriceAccn" id="c036c43e-cbc9-4a4e-afc5-18b339ba80e4"><con:settings/><con:config><script>import com.rpm.tests.*;-->
<!--    import com.xifin.utils.*-->
<!--    import com.xifin.mars.dao.*-->

<!--    import com.xifin.qa.config.*;-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info "newAccnId = " + newAccnId-->

<!--    def Env = context.expand('${#Project#Env}')-->
<!--    log.info "Env = " + Env-->

<!--    def OrgAlias = context.expand('${#Project#OrgAlias}')-->
<!--    log.info "OrgAlias = " + OrgAlias-->

<!--    def eType1 = context.expand('${#Project#eType1}')-->
<!--    log.info "eType1 = " + eType1-->

<!--    def eType2 = context.expand('${#Project#eType2}')-->
<!--    log.info "eType2 = " + eType2-->

<!--    def xapEnv = context.expand('${#Project#xapEnv}')-->
<!--    log.info "xapEnv = " + xapEnv-->

<!--    def engConfigDB = context.expand('${#Project#engConfigDB}')-->
<!--    log.info "engConfigDB = " + engConfigDB-->

<!--    def hasLoggedIn = context.expand('${#Project#hasLoggedIn}')-->
<!--    log.info "hasLoggedIn = " + hasLoggedIn-->


<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->
<!--    sysCall = new SystemCall()-->

<!--    //Detect OS: windows or unix-->
<!--    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=priceAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -Dendpoint")-->
<!--    //////def retval = sysCall.setShellCmd("mvn test -DtestSuite=priceAnAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType=${eType} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -Dendpoint")-->
<!--    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/priceAnAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType=${eType} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -Dendpoint")-->
<!--    def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/priceAnAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType1=${eType1} -DeType2=${eType2} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -Dendpoint")-->
<!--    log.info "retval = " + retval-->

<!--    //Verify process completed successfully-->
<!--    assert retval == 0 : "AWS-200:Step4:CreateNewAccession-PriceAccn Failed"-->

<!--    //Verify that the accn status = 21 (Priced)-->
<!--    def accnStatusId = daoManagerXifinRpm.getStatusIdByAccnId(newAccnId, dbEnv)-->
<!--    log.info "accnStatusId = " + accnStatusId-->
<!--    assert accnStatusId == 21 : "AWS-200:Step4:CreateNewAccession-PriceAccn Failed due to the accn was not priced"-->

<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-200:Step5:ErrCdPyrReq-TestDataSetup" id="5e6e79c6-b65a-4c33-b3b8-3844e3d6fdc2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status-->
<!--    import com.xifin.utils.*;-->
<!--    import com.xifin.platform.dao.*;-->
<!--    import com.xifin.mars.dao.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    log.info dbEnv-->

<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);-->
<!--    daoManagerPlatform = new DaoManagerPlatform(configuration.getRpmDatabase())-->
<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->

<!--    //Set err_cd.B_AUTO_MTCH=0, B_MTCH_CMP=0, B_MAN_ACTN=0, FK_OUT_AGNCY_ID_PRE_CORRESP = 6 for err code = 'AUTH'-->
<!--    String errCd = daoManagerXifinRpm.getErrCdFromERRCDByErrCdAbbrevErrGrp("AUTH", "Unbillable", dbEnv)-->
<!--    def count = daoManagerPlatform.setValuesFromTable("err_cd", "B_AUTO_MTCH=0, B_MTCH_CMP=0, B_MAN_ACTN=0, FK_OUT_AGNCY_ID_PRE_CORRESP = 6", "PK_ERR_CD = " + errCd, dbEnv)-->
<!--    log.info "errCdCount = " + count-->

<!--    //-->
<!--    def pyrAbbrev = context.expand('${#TestCase#PayorAbbrev}')-->
<!--    log.info "pyrAbbrev = " + pyrAbbrev-->
<!--    count = daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--    log.info "pyrReqmntsFldCount = " + count-->
<!--    cout = daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--    log.info "pyrReqmntsCount = " + count-->

<!--    def pyrId = daoManagerPlatform.getPyrInfoFromPYRByPyrAbbrev(pyrAbbrev, dbEnv).get(0)-->
<!--    //Add payor requirement into PYR_REQMNTS-->
<!--    count = daoManagerPlatform.setPyrReqmnsFromPYRREQMNTSByPyrIdAndEffDtAndFldIdAndPatternAndErrMsg(Integer.valueOf(pyrId), "01 jan 2002", 17, ".*", "Enter the authorization number for the service", "01 jan 2002", dbEnv);-->
<!--    log.info "pyrReqmntsCount = " + count-->
<!--    assert count>0 : "The record is not added to PYR_REQMNTS table"-->
<!--    //Add payor requirement Authorization field into PYR_REQMNTS_FLD-->
<!--    count = daoManagerPlatform.setPyrReqmnsFldFromPYRREQMNTSFLDByPyrIdAndEffDtAndFldIdAndScrnIdAndReqId(Integer.valueOf(pyrId), "01 jan 2002", 17, 1, 3, dbEnv);-->
<!--    log.info "pyrReqmntsFldCount = " + count-->
<!--    assert count>0 : "The record is not added to PYR_REQMNTS_FLD table"-->
<!--    count = daoManagerPlatform.setPyrReqmnsFldFromPYRREQMNTSFLDByPyrIdAndEffDtAndFldIdAndScrnIdAndReqId(Integer.valueOf(pyrId), "01 jan 2002", 17, 2, 3, dbEnv);-->
<!--    log.info "pyrReqmntsFldCount = " + count-->
<!--    assert count>0 : "The record is not added to PYR_REQMNTS_FLD table"-->
<!--    count = daoManagerPlatform.setPyrReqmnsFldFromPYRREQMNTSFLDByPyrIdAndEffDtAndFldIdAndScrnIdAndReqId(Integer.valueOf(pyrId), "01 jan 2002", 17, 3, 3, dbEnv);-->
<!--    log.info "pyrReqmntsFldCount = " + count-->
<!--    assert count>0 : "The record is not added to PYR_REQMNTS_FLD table"-->
<!--    count = daoManagerPlatform.setPyrReqmnsFldFromPYRREQMNTSFLDByPyrIdAndEffDtAndFldIdAndScrnIdAndReqId(Integer.valueOf(pyrId), "01 jan 2002", 17, 4, 3, dbEnv);-->
<!--    log.info "pyrReqmntsFldCount = " + count-->
<!--    assert count>0 : "The record is not added to PYR_REQMNTS_FLD table"-->

<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-200:Step6:UpdateAccession-SendSoapRequest" id="afa70dfe-02bb-4c60-aa8e-2f779826d6ef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>UpdateAccession</con:operation><con:request name="AWS-200:Step6:UpdateAccession-SendSoapRequest" wssPasswordType="PasswordDigest" id="71f1106a-1521-4f12-855e-41eb0b95b0b8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:UpdateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:UpdateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>A123456788</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>18</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               </acc:InsuranceInfo>-->
<!--            </acc:UpdateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:UpdateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e55b1eab-e388-4ca5-9ab0-8b5b1e442f86"/><con:assertion type="XPath Match" name="ValidateUpdateAccessionStatus" id="9855f6d8-4f2e-4f08-84af-b397168643c6"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->

<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-200:Step7:UpdateAccession-VerifyAccnIsInOutsideAgencyPreCorrespQueueInDB" id="48ced5dc-22b2-4f01-8738-d351903cda9f"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import com.xifin.platform.dao.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def accnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info "accnId = " + accnId-->

<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    daoManagerPlatform = new DaoManagerPlatform(configuration.getRpmDatabase())-->

<!--    //======== Verify that the accn is in Outside Agency Pre Corresp queue (16)-->
<!--    def qTyp = daoManagerPlatform.getAccnQueByConditon("pk_accn_id = '" + accnId + "' and out_dt is null order by pk_q_cnt desc", dbEnv).get(3)-->
<!--    assert qTyp == '16': "AWS-200:Step7:UpdateAccession-VerifyAccnIsInOutsideAgencyPreCorrespQueueInDB failed due to it's not in Outside Agency Pre Corresp queue (16)"-->

<!--    //======== Clear test data-->
<!--    def pyrAbbrev = context.expand('${#TestCase#PayorAbbrev}')-->
<!--    log.info "pyrAbbrev = " + pyrAbbrev-->
<!--    count = daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--    log.info "pyrReqmntsFldCount = " + count-->
<!--    cout = daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--    log.info "pyrReqmntsCount = " + count-->
<!--</script></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20180802133912297</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-08-02</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-08-02</con:value></con:property><con:property><con:name>ClnAbbrev</con:name><con:value>900</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180802133912297</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMELXOFZ</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEZDEGD</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>585785842A</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1205878451</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>CH1VFRNT</con:value></con:property><con:property><con:name>AccnPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>TestPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>Y73.8</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>MCCA</con:value></con:property><con:property><con:name>Relshp</con:name><con:value>18</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property><con:property><con:name>UpdatedPayorAbbrev</con:name><con:value>MDIL</con:value></con:property></con:properties></con:testCase>-->
    <con:properties/></con:testSuite><con:testSuite name="Accession WS-ValidateAccession" id="faa73e9f-8253-4666-8d03-226255c21434"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-9:Accession WS-ValidateAccession" searchProperties="true" id="b3787e3f-f7f6-4ff9-8134-ea0976817c79"><con:settings/><con:testStep type="groovy" name="AWS-9:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="60c4b275-3172-4de6-a0d7-bcad75719fc1"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    def nowCal = Calendar.instance
    y = nowCal.get(YEAR)-30
    m = nowCal.get(MONTH)
    d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="request" name="AWS-9:Step2:Accession WS-CreateNewAccessionWithIneligibleErr" id="d645df8e-0918-4275-a24f-e23abfa131bc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-9:Step2:Accession WS-CreateNewAccessionWithIneligibleErr" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="6974d778-c995-4d5a-abcd-f90b2c86f35d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:State>CA</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>92127</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>Ineligible</acc:EligibilityStatus>
                     <acc:EligibilityService>XIFIN</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>${#TestCase#NewDOS}</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>12345</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0215e406-bacb-4639-abfa-716ec99aa4e8"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="a8a39122-57c5-4cee-a82e-406d51cdeb33"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-9:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="4204688a-0839-48d4-ae70-9257cebac0a0"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-9:Step2:Accession WS-CreateNewAccessionWithIneligibleErr was failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-9:Step2:Accession WS-CreateNewAccessionWithIneligibleErr was failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-9:Step2:Accession WS-CreateNewAccessionWithIneligibleErr was failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-9:Step2:Accession WS-CreateNewAccessionWithIneligibleErr was failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-9:Step2:Accession WS-CreateNewAccessionWithIneligibleErr#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-9:Step2:Accession WS-CreateNewAccessionWithIneligibleErr failed"


</script></con:config></con:testStep><con:testStep type="request" name="AWS-9:Step4:Accession WS-ValidateAccession" id="edc603e0-add2-41a6-bbc6-d37daa581fd2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>ValidateAccession</con:operation><con:request name="AWS-9:Step4:Accession WS-ValidateAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="79615e8d-3285-49f6-b015-b486e7431cf6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:ValidateAccessionRequest>
         <msg:MessageHeader>

            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:ValidateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>false</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
            </acc:ValidateAccession>
         </acc:Payload>
      </acc:ValidateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="40f3e71c-a22a-40ff-aa12-b39ddc15fd67"/><con:assertion type="XPath Match" name="XPath Match" id="55209946-4a6e-41f6-81e0-2498ca24c031"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader'

    //ns4:Payload[1]/ns4:BusinessObject[1]/ns4:AccessionPayorErrors[1]/ns4:Error[*]/ns4:ReasonCode[1]/text()</path><content>INELIGIBLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/ValidateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20170824140617287</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1987-08-24</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20170824140617287</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEHHOWI</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEEHJOJ</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A888438698</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1114922606</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>300</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>T44.8X3</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite>
<!--    <con:testSuite name="Accession WS-UpdateEPAccession" id="ed939479-0b17-45bd-ade7-2e3cc7442439"><con:settings/><con:runType>SEQUENTIAL</con:runType>-->
<!--    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-11:Accession WS-UpdateEPAccession" searchProperties="true" id="ccdb4c4f-a2f5-4d9a-a6d5-9ba514b935ba"><con:settings/><con:testStep type="groovy" name="AWS-11:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="f8b5c315-c226-4ecb-a389-21231cd93d1a"><con:settings/><con:config><script>import com.xifin.utils.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import static java.util.Calendar.*-->

<!--    //======== Get values ========-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    //Get timeStamp value-->
<!--    timeStamp = new TimeStamp()-->
<!--    def currentDateTime = timeStamp.getTimeStamp()-->

<!--    //Get currentdate value-->
<!--    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")-->

<!--    //Get ClientId value-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)-->

<!--    //Get random ptEPI-->
<!--    def ptEPI = "EPI" + currentDateTime-->

<!--    //Get random ptFName, ptLName and subsId-->
<!--    randomCharacter = new RandomCharacter()-->
<!--    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    def subsId = "A" + randomCharacter.getRandomNumericString(9)-->

<!--    //Get Ordering Physician NPI-->
<!--    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)-->
<!--    log.info "getPhysicianNPI"-->

<!--    //Get Ordered Test Abbrev-->
<!--    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)-->
<!--    log.info "getTestAbbrev"-->

<!--    //Get POS-->
<!--    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)-->

<!--    //Get Diagnosis Code-->
<!--    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)-->

<!--    //Get Payor Abbrev-->
<!--    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)-->

<!--    //======== Set TestCase level property values ========-->
<!--    //Set NewAccnID TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)-->
<!--    log.info "NewAccnID = " + "QATESTER" + currentDateTime-->

<!--    //Set DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)-->
<!--    log.info "NewDOS = " + currentDate-->

<!--    //def newPtDOB = "1975-09-10"-->
<!--    def nowCal = Calendar.instance-->
<!--    y = nowCal.get(YEAR)-30-->
<!--    m = nowCal.get(MONTH)-->
<!--    d = nowCal.get(DATE)-->
<!--    nowCal.set(y,m,d)-->
<!--    newPtDOB = String.format('%tF', nowCal)-->
<!--    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)-->
<!--    log.info "NewPtDOB = " + newPtDOB-->

<!--    //Set ClientId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("ClientId", clientId)-->
<!--    log.info "ClientId = " + clientId-->

<!--    //Set EPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)-->
<!--    log.info "NewEPI = " + ptEPI-->

<!--    //Set NewPtFName and NewPtLName TestCase-level values-->
<!--    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)-->
<!--    log.info "NewPtFName = " + ptFName-->
<!--    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)-->
<!--    log.info "NewPtLName = " + ptLName-->

<!--    //Set NewSubsId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)-->
<!--    log.info "NewSubsId = " + subsId-->

<!--    //Set PhysNPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)-->
<!--    log.info "PhysNPI = " + physNPI-->

<!--    //Set TestAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)-->
<!--    log.info "TestAbbrev = " + testAbbrev-->

<!--    //set POS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("POS", pos)-->
<!--    log.info "POS = " + pos-->

<!--    //set DiagCD TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)-->
<!--    log.info "DiagCD = " + diagCd-->

<!--    //set PayorAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)-->
<!--    log.info "PayorAbbrev = " + pyrAbbrev-->

<!--    //disable and delete the pyr field requirements-->
<!--    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)-->

<!--    //Disable and delete the pyr field requirement-->
<!--    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-11:Step2:Accession WS-CreateNewAccessionWithIneligibleErr" id="1ee7f91d-7a72-4568-bbc9-c461d231d2f9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-11:Step2:Accession WS-CreateNewAccessionWithIneligibleErr" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="5c0dd2e6-9a71-4efb-a5d0-160e5f078ea7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:CreateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>1111</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:CreateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PatientInfo>-->
<!--                  &lt;!&ndash;<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:&ndash;&gt;-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Person>-->
<!--                     <typ:Name>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:MiddleName>M</typ:MiddleName>-->
<!--                     </typ:Name>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Gender>MALE</typ:Gender>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Address>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:State>CA</typ:State>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:ZIP>92127</typ:ZIP>-->
<!--                     </typ:Address>-->
<!--                  </acc:Person>-->
<!--               </acc:PatientInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:Physicians>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Ordering>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>-->
<!--                  </acc:Ordering>-->
<!--               </acc:Physicians>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:OrderedTests>-->
<!--                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>-->
<!--                  <acc:TransactionType>D</acc:TransactionType>-->
<!--                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Units>1</acc:Units>-->
<!--               </acc:OrderedTests>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:AccessionLevelDiagnosisCodes>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>-->
<!--               </acc:AccessionLevelDiagnosisCodes>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>18</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--                  <acc:EligibilityInfo>-->
<!--                     <acc:EligibilityStatus>Ineligible</acc:EligibilityStatus>-->
<!--                     <acc:EligibilityService>XIFIN</acc:EligibilityService>-->
<!--                     <acc:EligibilityCheckedDate>${#TestCase#NewDOS}</acc:EligibilityCheckedDate>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <acc:EligibilityTransactionId>12345</acc:EligibilityTransactionId>-->
<!--                  </acc:EligibilityInfo>-->
<!--               </acc:InsuranceInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>-->
<!--            </acc:CreateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:CreateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4b9b045e-a205-4dab-a795-aee008bab7d0"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="ff180105-f85e-4852-afd4-d7c2c61246b7"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->


<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-11:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="bae5c319-9ec6-4725-a35c-4d2e3f65ad67"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    log.info dbEnv-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info newAccnId-->

<!--    //======== Verify pt's fName by accn id ========-->
<!--    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptFNameInDB = " + ptFNameInDB)-->
<!--    //Get Pt's fName from TestCase level property - NewPtFName-->
<!--    def newPtFName = context.expand('${#TestCase#NewPtFName}')-->

<!--    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName-->
<!--    //Expected Result: ptFNameInDB == #TestCase#NewPtFName-->
<!--    assert ptFNameInDB == newPtFName : "AWS-11:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed due to pt fname does not match!"-->

<!--    //======== Verify pt's lName by accn id ========-->
<!--    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptLNameInDB = " + ptLNameInDB)-->
<!--    //Get Pt's lName from TestCase level property - NewPtLName-->
<!--    def newPtLName = context.expand('${#TestCase#NewPtLName}')-->

<!--    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName-->
<!--    //Expected Result: ptLNameInDB == #TestCase#NewPtLName-->
<!--    assert ptLNameInDB == newPtLName : "AWS-11:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed due to pt lname does not match!"-->

<!--    //======== Verify pt's DOB and accn's DOS by accn id ========-->
<!--    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptDOBInDB = " + ptDOBInDB)-->
<!--    //Get Pt's DOB from TestCase level property - NewPtDOB-->
<!--    def ptDOB = context.expand('${#TestCase#NewPtDOB}')-->
<!--    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID-->
<!--    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("dosInDB = " + dosInDB)-->
<!--    //Get accn's DOS from TestCase level property - NewDOS-->
<!--    def dos = context.expand('${#TestCase#NewDOS}')-->

<!--    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: ptDOBInDB == #TestCase#NewDOS-->
<!--    assert ptDOBInDB == ptDOB : "AWS-11:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed due to pt DOB does not match!"-->

<!--    //Compare accn's DOS in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: dosInDB == #TestCase#NewDOS-->
<!--    assert dosInDB == dos : "AWS-11:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed due to DOS does not match!"-->
<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-11:Step4:Accession WS-UpdateEPAccession-SystemSetupUI" id="71a0e6a9-77f3-4621-b699-815ec8bb1a8c"><con:settings/><con:config><script>import com.rpm.tests.*;-->
<!--    import com.xifin.utils.*-->

<!--    import com.xifin.qa.config.*;-->
<!--    //Get accnId-->
<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info "newAccnId = " + newAccnId-->

<!--    def Env = context.expand('${#Project#Env}')-->
<!--    log.info "Env = " + Env-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def OrgAlias = context.expand('${#Project#OrgAlias}')-->
<!--    log.info "OrgAlias = " + OrgAlias-->

<!--    def eType1 = context.expand('${#Project#eType1}')-->
<!--    log.info "eType1 = " + eType1-->

<!--    def eType2 = context.expand('${#Project#eType2}')-->
<!--    log.info "eType2 = " + eType2-->

<!--    def xapEnv = context.expand('${#Project#xapEnv}')-->
<!--    log.info "xapEnv = " + xapEnv-->

<!--    def engConfigDB = context.expand('${#Project#engConfigDB}')-->
<!--    log.info "engConfigDB = " + engConfigDB-->

<!--    def hasLoggedIn = context.expand('${#Project#hasLoggedIn}')-->
<!--    log.info "hasLoggedIn = " + hasLoggedIn-->

<!--    def xpEnv = context.expand('${#Project#xpEnv}')-->
<!--    log.info "xpEnv = " + xpEnv-->

<!--    def xpVersion = context.expand('${#Project#xpVersion}')-->
<!--    log.info "xpVersion = " + xpVersion-->

<!--    //Get ClientId value-->
<!--    sysCall = new SystemCall()-->

<!--    //Detect OS-->
<!--    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=updateEp -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -Dendpoint")-->
<!--    def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/updateEPAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType1=${eType1} -DeType2=${eType2} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -DxpEnv=${xpEnv} -DxpVersion=${xpVersion} -Dendpoint")-->
<!--    log.info "retval=" + retval-->

<!--    //Verify process completed successfully-->
<!--    assert retval == 0 : "AWS-11:Step4:Accession WS-CreateEPAccession-SystemSetupUI Failed"-->



<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-11:Step5:Accession WS-UpdateEPAccession-FixAccnPyrErr" id="44b518f3-d7ea-4e8e-976a-b7ed46934557"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>UpdateEPAccession</con:operation><con:request name="AWS-11:Step5:Accession WS-UpdateEPAccession-FixAccnPyrErr" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="478b3228-1a32-4802-b832-474187c4e141"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:UpdateEPAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>888999000</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:UpdateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->

<!--            </acc:UpdateAccession>-->
<!--            &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--            <acc:ManualErrorFixes>-->
<!--               <acc:ReasonCode>INELIGIBLE</acc:ReasonCode>-->
<!--               <acc:ErrorType>PAYOR</acc:ErrorType>-->
<!--               &lt;!&ndash;You have a CHOICE of the next 3 items at this level&ndash;&gt;-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:AccessionPayorErrorReference>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:payorPriority>1</acc:payorPriority>-->
<!--               </acc:AccessionPayorErrorReference>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:FixNote>Fixed via Accession WS UpdateEPAccession</acc:FixNote>-->
<!--            </acc:ManualErrorFixes>-->
<!--         </acc:Payload>-->
<!--      </acc:UpdateEPAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fcb95722-3af3-4bf7-b950-7a3e09e8e594"/><con:assertion type="XPath Match" name="ValidateUpdateEPAccessionStatus" id="f3bc3331-5b20-4204-9242-e8c4d200f13f"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->


<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/UpdateEPAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-11:Step6:Accession WS-UpdateEPAccession-VerifyFixedErrCodeDateInDB" id="fcc9cf16-878c-41ad-9e80-7f54df133c2c"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import com.xifin.mars.dao.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    log.info dbEnv-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info newAccnId-->

<!--    //======== Verify errCd by accn id ========-->
<!--    //Get the errCd in db by referencing TestCase level property - NewAccnID-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def errCd = daoManagerAccnWS.getErrCdByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("errCd = " + errCd)-->
<!--    assert errCd == "185" : "AWS-11:Accession WS-UpdateEPAccession failed due to error code does not match!"-->

<!--    //======== Verify fixDt by accn id ========-->
<!--    //Get the fixDt in db by referencing TestCase level property - NewAccnID-->
<!--    def fixDt = daoManagerAccnWS.getFixDtByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("fixDt = " + fixDt)-->
<!--    //Get newDos from TestCase level property - NewDOS-->
<!--    def newDos = context.expand('${#TestCase#NewDOS}')-->
<!--    assert fixDt == newDos : "AWS-11:Accession WS-UpdateEPAccession failed due to fix date does not match!"-->

<!--    //======== Verify accn status by accn id ========-->
<!--    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())-->
<!--    def accnStatus = daoManagerXifinRpm.getStatusIdByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("accnStatus = " + accnStatus)-->
<!--    assert accnStatus == 21 : "AWS-11:Accession WS-UpdateEPAccession failed due to accn status was changed!"</script></con:config></con:testStep><con:properties><con:property><con:name>EPAccnId</con:name><con:value>100001364154</con:value></con:property><con:property><con:name>CorrespType</con:name><con:value>Client</con:value></con:property><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20180124170712361</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-01-24</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-01-24</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180124170712361</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEJLXZA</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMELIZAV</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A978889827</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1215930367</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>S11.14XS</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property></con:properties></con:testCase>-->
<!--    <con:properties/></con:testSuite>-->
    <con:testSuite name="Accession Search WS-AccessionSearch" id="c01875b1-d044-4bfc-bdeb-64c83f9d93c2"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-13:Accession Search WS-AccessionSearch-SearchExistingAccn" searchProperties="true" id="5c14aef8-645a-4e46-a761-e8acd92cae6a"><con:settings/><con:testStep type="groovy" name="AWS-13:Step1:Accession Search WS-GetExistingAccession-TestDataSetup" id="d9341007-d6de-4dd9-b657-c89b0a96a295"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //======== Get values =========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get AccnID value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def accnId = daoManagerAccnWS.getExistingAccnId(dbEnv)

    //======== Set TestCase level property values ========
    //Set AccnID1 TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnID", accnId)
    log.info "AccnID=" + accnId

    //Set PtFName TestCase-level value
    def ptFName = daoManagerAccnWS.getFnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("PtFName", ptFName)
    log.info "PtFName = " + ptFName

    //Set PtLName TestCase-level value
    def ptLName = daoManagerAccnWS.getLnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("PtLName", ptLName)
    log.info "PtLName = " + ptLName

    //Set AccnDOS TestCase-level value
    def accnDOS = daoManagerAccnWS.getDOSByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("accnDOS", accnDOS)
    log.info "AccnDOS = " + accnDOS</script></con:config></con:testStep><con:testStep type="request" name="AWS-13:Step2:AccessionSearch-SearchExistingAccn" id="66db42d1-5204-4d27-acdc-f989a49abb1a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSearchSoap11</con:interface><con:operation>AccessionSearch</con:operation><con:request name="AWS-13:Step2:AccessionSearch-SearchExistingAccn" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="29896788-bcdf-4f5d-b725-159bc87f3b74"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accessionSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:AccessionSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>123456</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionSearchRequestMessage>
               <!--Optional:-->
               <acc:AccessionId>${#TestCase#AccnID}</acc:AccessionId>
            </acc:AccessionSearchRequestMessage>
         </acc:Payload>
      </acc:AccessionSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="ceea85ff-b09c-4cef-971b-c61c4e6b2f42"/><con:assertion type="XPath Match" name="Validate PtFName" id="e36b90eb-9501-4e22-a6e8-2279a4729849"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:AccessionSearchResponseMessage[1]/ns4:PatientName[1]/ns3:FirstName[1]/text()</path><content>${#TestCase#PtFName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate PtLName" id="8be2caae-bac8-4edf-95bb-8d2ceb4b214b"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:AccessionSearchResponseMessage[1]/ns4:PatientName[1]/ns3:LastName[1]/text()</path><content>${#TestCase#PtLName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate AccnID" id="0fb4e81a-01cb-4cbb-96f7-fc278aba9150"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:AccessionSearchResponseMessage[1]/ns4:AccessionId[1]/text()</path><content>${#TestCase#AccnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate accnDOS" id="0743dde3-26a5-41c8-8604-1b4878de6809"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:AccessionSearchResponseMessage[1]/ns4:Dos/text()</path><content>${#TestCase#accnDOS}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accessionSearch/accessionSearch/AccessionSearchRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>AccnID</con:name><con:value>A201311200203029</con:value></con:property><con:property><con:name>PtFName</con:name><con:value>JENNIFER</con:value></con:property><con:property><con:name>PtLName</con:name><con:value>TILLEY</con:value></con:property><con:property><con:name>accnDOS</con:name><con:value>2013-11-20</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-14:Accession Search WS-AccessionSearch-SearchNonExistingAccn" searchProperties="true" id="652569b5-53dd-4480-8515-775546ccfd78"><con:settings/><con:testStep type="request" name="AWS-14:Step1:AccessionSearch-SearchNonExistingAccn" id="676c37e7-d7a5-4bb7-bb5f-0abe5267c549"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSearchSoap11</con:interface><con:operation>AccessionSearch</con:operation><con:request name="AWS-14:Step1:AccessionSearch-SearchNonExistingAccn" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="a1c071d2-22fb-4548-8fe2-ce7fa83e1896"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accessionSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:AccessionSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>123456</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionSearchRequestMessage>
               <!--Optional:-->
               <acc:AccessionId>${#TestCase#AccnID}</acc:AccessionId>
            </acc:AccessionSearchRequestMessage>
         </acc:Payload>
      </acc:AccessionSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0d95ab78-2080-4fba-b1c6-56cc2cd0b3aa"/><con:assertion type="XPath Match" name="Validate StatusMessage" id="c3f5fd90-847d-48ad-bf78-882c18cfe182"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>no data found *</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accessionSearch/accessionSearch/AccessionSearchRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>AccnID</con:name><con:value>NonExistingAccnID</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-199:AccessionSearchWS-AccessionSearch-Namespaces check" searchProperties="true" id="868ea8c1-09b2-4b67-84ec-ae84874b6659"><con:settings/><con:testStep type="groovy" name="AWS-199:Step1:Accession Search WS-GetExistingAccession-TestDataSetup" id="24f54082-7a30-4ee9-ba5f-d0ddfd0353f8"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //======== Get values =========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get AccnID value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def accnId = daoManagerAccnWS.getExistingAccnId(dbEnv)

    //======== Set TestCase level property values ========
    //Set AccnID1 TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnID", accnId)
    log.info "AccnID=" + accnId

    //Set PtFName TestCase-level value
    def ptFName = daoManagerAccnWS.getFnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("PtFName", ptFName)
    log.info "PtFName = " + ptFName

    //Set PtLName TestCase-level value
    def ptLName = daoManagerAccnWS.getLnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("PtLName", ptLName)
    log.info "PtLName = " + ptLName

    //Set AccnDOS TestCase-level value
    def accnDOS = daoManagerAccnWS.getDOSByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("accnDOS", accnDOS)
    log.info "AccnDOS = " + accnDOS</script></con:config></con:testStep><con:testStep type="request" name="AWS-199:Step2:AccessionSearch-SearchExistingAccn-Namespaces check" id="a57e1310-961f-447f-8c89-32572a62bdac"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSearchSoap11</con:interface><con:operation>AccessionSearch</con:operation><con:request name="AWS-199:Step2:AccessionSearch-SearchExistingAccn-Namespaces check" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="29896788-bcdf-4f5d-b725-159bc87f3b74"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accessionSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:AccessionSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>123456</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionSearchRequestMessage>
               <!--Optional:-->
               <acc:AccessionId>${#TestCase#AccnID}</acc:AccessionId>
            </acc:AccessionSearchRequestMessage>
         </acc:Payload>
      </acc:AccessionSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="ceea85ff-b09c-4cef-971b-c61c4e6b2f42"/><con:assertion type="XPath Match" name="Namespace-SOAP-ENV-check" id="e36b90eb-9501-4e22-a6e8-2279a4729849"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('SOAP-ENV', //ns4:AccessionSearchResponseMessage[1])</path><content>http://schemas.xmlsoap.org/soap/envelope/</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Namespace-ns2-check" id="e36b90eb-9501-4e22-a6e8-2279a4729849"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('ns2', //ns4:AccessionSearchResponseMessage[1])</path><content>http://www.xifin.com/schema/msgHeader</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Namespace-ns3-check" id="e36b90eb-9501-4e22-a6e8-2279a4729849"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('ns3', //ns4:AccessionSearchResponseMessage[1])</path><content>http://www.xifin.com/schema/types</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Namespace-ns4-check" id="e36b90eb-9501-4e22-a6e8-2279a4729849"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('ns4', //ns4:AccessionSearchResponseMessage[1])</path><content>http://www.xifin.com/schema/accessionSearch</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accessionSearch/accessionSearch/AccessionSearchRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>AccnID</con:name><con:value>A2015050602030145</con:value></con:property><con:property><con:name>PtFName</con:name><con:value>PAUL</con:value></con:property><con:property><con:name>PtLName</con:name><con:value>WOODS</con:value></con:property><con:property><con:name>accnDOS</con:name><con:value>2015-05-06</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite>
<!--    <con:testSuite name="Accession WS-GetEPAccession" id="9c3529c5-f2a2-4de2-bdac-d2459131937b"><con:settings/><con:runType>SEQUENTIAL</con:runType>-->
<!--    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-12: Accession WS_GetEPAccession" searchProperties="true" id="1352b8b3-c2a3-4bf2-bf0a-4d41f90f5ed8"><con:settings/><con:testStep type="groovy" name="AWS-12:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="14ba5c4f-1b86-4d2f-9680-c8135b46f27f"><con:settings/><con:config><script>import com.xifin.utils.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->
<!--    import static java.util.Calendar.*-->

<!--    //======== Get values ========-->
<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    //Get timeStamp value-->
<!--    timeStamp = new TimeStamp()-->
<!--    def currentDateTime = timeStamp.getTimeStamp()-->

<!--    //Get currentdate value-->
<!--    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")-->

<!--    //Get ClientId value-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)-->

<!--    //Get random ptEPI-->
<!--    def ptEPI = "EPI" + currentDateTime-->

<!--    //Get random ptFName, ptLName and subsId-->
<!--    randomCharacter = new RandomCharacter()-->
<!--    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)-->
<!--    def subsId = "A" + randomCharacter.getRandomNumericString(9)-->

<!--    //Get Ordering Physician NPI-->
<!--    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)-->
<!--    log.info "getPhysicianNPI"-->

<!--    //Get Ordered Test Abbrev-->
<!--    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)-->
<!--    log.info "getTestAbbrev"-->

<!--    //Get POS-->
<!--    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)-->

<!--    //Get Diagnosis Code-->
<!--    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)-->

<!--    //Get Payor Abbrev-->
<!--    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)-->

<!--    //======== Set TestCase level property values ========-->
<!--    //Set NewAccnID TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)-->
<!--    log.info "NewAccnID = " + "QATESTER" + currentDateTime-->

<!--    //Set DOS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)-->
<!--    log.info "NewDOS = " + currentDate-->

<!--    //def newPtDOB = "1975-09-10"-->
<!--    def nowCal = Calendar.instance-->
<!--    y = nowCal.get(YEAR)-30-->
<!--    m = nowCal.get(MONTH)-->
<!--    d = nowCal.get(DATE)-->
<!--    nowCal.set(y,m,d)-->
<!--    newPtDOB = String.format('%tF', nowCal)-->

<!--    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)-->
<!--    log.info "NewPtDOB = " + newPtDOB-->

<!--    //Set ClientId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("ClientId", clientId)-->
<!--    log.info "ClientId = " + clientId-->

<!--    //Set EPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)-->
<!--    log.info "NewEPI = " + ptEPI-->

<!--    //Set NewPtFName and NewPtLName TestCase-level values-->
<!--    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)-->
<!--    log.info "NewPtFName = " + ptFName-->
<!--    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)-->
<!--    log.info "NewPtLName = " + ptLName-->

<!--    //Set NewSubsId TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)-->
<!--    log.info "NewSubsId = " + subsId-->

<!--    //Set PhysNPI TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)-->
<!--    log.info "PhysNPI = " + physNPI-->

<!--    //Set TestAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)-->
<!--    log.info "TestAbbrev = " + testAbbrev-->

<!--    //set POS TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("POS", pos)-->
<!--    log.info "POS = " + pos-->

<!--    //set DiagCD TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)-->
<!--    log.info "DiagCD = " + diagCd-->

<!--    //set PayorAbbrev TestCase-level value-->
<!--    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)-->
<!--    log.info "PayorAbbrev = " + pyrAbbrev-->

<!--    //disable and delete the pyr field requirements-->
<!--    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)-->

<!--    //Disable and delete the pyr field requirement-->
<!--    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)-->
<!--</script></con:config></con:testStep><con:testStep type="request" name="AWS-12:Step2:Accession WS-CreateNewAccessionWithIneligibleErr" id="74b0bcbd-baec-4d8a-a65f-058baef2467b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-12:Step2:Accession WS-CreateNewAccessionWithIneligibleErr" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="b01dbc67-0c87-483e-9667-a95c5f3c90bf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:CreateAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>1111</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:CreateAccession>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:IgnoreErrors>true</acc:IgnoreErrors>-->
<!--               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PatientInfo>-->
<!--                  &lt;!&ndash;<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:&ndash;&gt;-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Person>-->
<!--                     <typ:Name>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:MiddleName>M</typ:MiddleName>-->
<!--                     </typ:Name>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Gender>MALE</typ:Gender>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <typ:Address>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:State>CA</typ:State>-->
<!--                        &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                        <typ:ZIP>92127</typ:ZIP>-->
<!--                     </typ:Address>-->
<!--                  </acc:Person>-->
<!--               </acc:PatientInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:Physicians>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Ordering>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>-->
<!--                  </acc:Ordering>-->
<!--               </acc:Physicians>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:OrderedTests>-->
<!--                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>-->
<!--                  <acc:TransactionType>D</acc:TransactionType>-->
<!--                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:Units>1</acc:Units>-->
<!--               </acc:OrderedTests>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:AccessionLevelDiagnosisCodes>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>-->
<!--               </acc:AccessionLevelDiagnosisCodes>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>-->
<!--               &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--               <acc:InsuranceInfo>-->
<!--                  <acc:PayorPriority>1</acc:PayorPriority>-->
<!--                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  <acc:InsuredRelationship>18</acc:InsuredRelationship>-->
<!--                  &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                  &lt;!&ndash;Zero or more repetitions:&ndash;&gt;-->
<!--                  <acc:EligibilityInfo>-->
<!--                     <acc:EligibilityStatus>Ineligible</acc:EligibilityStatus>-->
<!--                     <acc:EligibilityService>XIFIN</acc:EligibilityService>-->
<!--                     <acc:EligibilityCheckedDate>${#TestCase#NewDOS}</acc:EligibilityCheckedDate>-->
<!--                     &lt;!&ndash;Optional:&ndash;&gt;-->
<!--                     <acc:EligibilityTransactionId>12345</acc:EligibilityTransactionId>-->
<!--                  </acc:EligibilityInfo>-->
<!--               </acc:InsuranceInfo>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>-->
<!--            </acc:CreateAccession>-->
<!--         </acc:Payload>-->
<!--      </acc:CreateAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="575861f9-8978-4407-bb74-5195ea2af985"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="9127aaa6-5f8c-467f-b91b-6829559e11e0"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->


<!--    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-12:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="d8c5577e-3d29-4ece-b490-e93bbd46ba09"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    log.info dbEnv-->

<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info newAccnId-->

<!--    //======== Verify pt's fName by accn id ========-->
<!--    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptFNameInDB = " + ptFNameInDB)-->
<!--    //Get Pt's fName from TestCase level property - NewPtFName-->
<!--    def newPtFName = context.expand('${#TestCase#NewPtFName}')-->

<!--    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName-->
<!--    //Expected Result: ptFNameInDB == #TestCase#NewPtFName-->
<!--    assert ptFNameInDB == newPtFName : "AWS-12:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB was failed"-->

<!--    //======== Verify pt's lName by accn id ========-->
<!--    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptLNameInDB = " + ptLNameInDB)-->
<!--    //Get Pt's lName from TestCase level property - NewPtLName-->
<!--    def newPtLName = context.expand('${#TestCase#NewPtLName}')-->

<!--    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName-->
<!--    //Expected Result: ptLNameInDB == #TestCase#NewPtLName-->
<!--    assert ptLNameInDB == newPtLName : "AWS-12:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB was failed"-->

<!--    //======== Verify pt's DOB and accn's DOS by accn id ========-->
<!--    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("ptDOBInDB = " + ptDOBInDB)-->
<!--    //Get Pt's DOB from TestCase level property - NewPtDOB-->
<!--    def ptDOB = context.expand('${#TestCase#NewPtDOB}')-->
<!--    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID-->
<!--    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)-->
<!--    log.info ("dosInDB = " + dosInDB)-->
<!--    //Get accn's DOS from TestCase level property - NewDOS-->
<!--    def dos = context.expand('${#TestCase#NewDOS}')-->

<!--    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: ptDOBInDB == #TestCase#NewDOS-->
<!--    assert ptDOBInDB == ptDOB : "AWS-12:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB was failed"-->

<!--    //Compare accn's DOS in db and the value in TestCase level property - NewDOS-->
<!--    //Expected Result: dosInDB == #TestCase#NewDOS-->
<!--    assert dosInDB == dos : "AWS-12:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB was failed"-->
<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-12:Step4:Accession WS-CreateEPAccession-SystemSetupUI" id="7e4bf146-db0b-4799-93aa-8593bf045c47"><con:settings/><con:config><script>import com.rpm.tests.*;-->
<!--    import com.xifin.utils.*-->




<!--    import com.xifin.qa.config.*;-->
<!--    //Get accnId-->
<!--    def newAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    log.info "newAccnId = " + newAccnId-->

<!--    def Env = context.expand('${#Project#Env}')-->
<!--    log.info "Env = " + Env-->

<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    def OrgAlias = context.expand('${#Project#OrgAlias}')-->
<!--    log.info "OrgAlias = " + OrgAlias-->

<!--    def eType1 = context.expand('${#Project#eType1}')-->
<!--    log.info "eType1 = " + eType1-->

<!--    def eType2 = context.expand('${#Project#eType2}')-->
<!--    log.info "eType2 = " + eType2-->

<!--    def xapEnv = context.expand('${#Project#xapEnv}')-->
<!--    log.info "xapEnv = " + xapEnv-->

<!--    def engConfigDB = context.expand('${#Project#engConfigDB}')-->
<!--    log.info "engConfigDB = " + engConfigDB-->

<!--    def hasLoggedIn = context.expand('${#Project#hasLoggedIn}')-->
<!--    log.info "hasLoggedIn = " + hasLoggedIn-->

<!--    def xpEnv = context.expand('${#Project#xpEnv}')-->
<!--    log.info "xpEnv = " + xpEnv-->

<!--    def xpVersion = context.expand('${#Project#xpVersion}')-->
<!--    log.info "xpVersion = " + xpVersion-->

<!--    //Get ClientId value-->
<!--    sysCall = new SystemCall()-->

<!--    //Detect OS-->
<!--    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=updateEp -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -Dendpoint")-->
<!--    def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/updateEPAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType1=${eType1} -DeType2=${eType2} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -DxpEnv=${xpEnv} -DxpVersion=${xpVersion} -Dendpoint")-->
<!--    log.info "retval=" + retval-->

<!--    //Get ClientId value-->
<!--    //sysCall = new SystemCall()-->

<!--    //Detect OS-->
<!--    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=updateEp -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -Dendpoint")-->
<!--    //log.info "retval=" + retval-->

<!--    //Verify process completed successfully-->
<!--    assert retval == 0 : "AWS-12:Step4:Accession WS-CreateEPAccession-SystemSetupUI Failed"-->





<!--</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-12:Step5:Accession WS-CreateEPAccession-GetCorrespType" id="274c0a0b-f777-441e-a67e-c6d7282c2c13"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    //Get dbEnv Project-level property value-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def epAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    def correspType = daoManagerAccnWS.getEPCorrespTypByAccnId(epAccnId, dbEnv)-->
<!--    testRunner.testCase.setPropertyValue ("CorrespType", correspType)-->
<!--    log.info "correspType = " + correspType</script></con:config></con:testStep><con:testStep type="request" name="AWS-12:Step6:Accession WS-GetEPAccession-GetAccessionFromEPCorresp" id="037bc5cd-0279-485b-b126-530a0c1035e4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>GetEPAccession</con:operation><con:request name="AWS-12:Step6:Accession WS-GetEPAccession-GetAccessionFromEPCorresp" wssPasswordType="PasswordDigest" id="d90191b4-2709-4c27-86ed-3b367571eb62"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <acc:GetEPAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>654</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <acc:Payload>-->
<!--            <acc:GetEPAccessionRequestMessage>-->
<!--               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>-->
<!--               <acc:CorrespondanceType>${#TestCase#CorrespType}</acc:CorrespondanceType>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:IncludeAccessionDetails>true</acc:IncludeAccessionDetails>-->
<!--               &lt;!&ndash;Optional:&ndash;&gt;-->
<!--               <acc:IncludeLimitedCoveragePolicyDetails>false</acc:IncludeLimitedCoveragePolicyDetails>-->
<!--            </acc:GetEPAccessionRequestMessage>-->
<!--         </acc:Payload>-->
<!--      </acc:GetEPAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="96bc4834-69a4-4377-9095-87fd0ae6f5c1"/><con:assertion type="XPath Match" name="ValidateAccnId" id="35fc5548-a7a9-4236-bbb8-24c301a10e81"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';-->
<!--    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';-->
<!--    declare namespace ns3='http://www.xifin.com/schema/types';-->
<!--    declare namespace ns2='http://www.xifin.com/schema/msgHeader';-->

<!--    //ns4:Payload[1]/ns4:GetEPAccessionResponseMessage[1]/ns4:GetAccessionResponseMessage[1]/ns4:AccessionId[1]/text()</path><content>${#TestCase#NewAccnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-12:Step7:Accession WS-GetEPAccession-VerifyGetEPAccessionResponse" id="543ee895-4835-48fc-ab5f-db0be886dc9f"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    //Create groovyUtils and XmlHolder for response-->
<!--    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )-->
<!--    def holder = groovyUtils.getXmlHolder( "AWS-12:Step6:Accession WS-GetEPAccession-GetAccessionFromEPCorresp#Response" )-->

<!--    //def holder2 = groovyUtils.getXmlHolder( "AWS-6:Step2:Accession WS-GetEPAccession-GetAccessionFromEPCorresp#Request" )-->
<!--    //log.info holder2.getXml()-->

<!--    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.-->
<!--    holder.namespaces["ns"] = "http://www.xifin.com/schema/accession"-->

<!--    def reasonCodeListInResponse = []-->
<!--    def reasonCodeListInDB = []-->

<!--    //Loop through the nodes in response message and add the nodes values into a List-->
<!--    for( item in holder.getNodeValues( "//ns:ReasonCode" ))-->
<!--    {-->
<!--    reasonCodeListInResponse.add(item)-->
<!--    //log.info "Item : [$item]"-->
<!--    }-->
<!--    /*-->
<!--    //Debug info-->
<!--    log.info "reasonCodeListInResponse:"-->
<!--    for (int i=0; i&lt;reasonCodeListInResponse.size; i++)-->
<!--    {-->
<!--    log.info reasonCodeListInResponse[i]-->
<!--    }-->

<!--    log.info "====================================="-->
<!--    */-->

<!--    //Get the error codes list from DB-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def epAccnId = context.expand('${#TestCase#NewAccnID}')-->
<!--    def dbEnv = context.expand('${#Project#dbEnv}')-->
<!--    //Assign the ArrayList returned from DB into a List-->
<!--    reasonCodeListInDB = daoManagerAccnWS.getReasonCodeByAccnId(epAccnId,dbEnv)-->
<!--    /*-->
<!--    //Debug info-->
<!--    log.info "reasonCodeListInDB:"-->
<!--    for (int i=0; i&lt;reasonCodeListInDB.size; i++)-->
<!--    {-->
<!--    log.info reasonCodeListInDB[i]-->
<!--    }-->
<!--    */-->

<!--    //Compare the size of the two Lists, if not match returns test failed, else continue-->
<!--    assert reasonCodeListInDB.size == reasonCodeListInResponse.size: "AWS-12: Accession WS_GetEPAccession was failed"-->

<!--    //Sort the two lists-->
<!--    Collections.sort(reasonCodeListInResponse)-->
<!--    Collections.sort(reasonCodeListInDB)-->

<!--    //Compare the values in the two lists, if not match returns test failed-->
<!--    for (int i=0; i&lt;reasonCodeListInDB.size; i++)-->
<!--    {-->
<!--    if (	reasonCodeListInResponse[i]!=reasonCodeListInDB[i])-->
<!--    assert reasonCodeListInResponse[i] == reasonCodeListInDB[i]: "AWS-12: Accession WS_GetEPAccession was failed"-->
<!--    }-->
<!--</script></con:config></con:testStep><con:properties><con:property><con:name>CorrespType</con:name><con:value>Client</con:value></con:property><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20180124171024598</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-01-24</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-01-24</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180124171024598</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEIUKIR</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEUFTFT</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A196791457</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1114927050</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>S63.122D</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property></con:properties></con:testCase>-->
<!--    <con:properties/></con:testSuite>-->
    <con:testSuite name="Patient Search WS-PatientSearch" id="ba5efa22-c44a-48c2-817c-24daf7330a17"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-15:Patient Search WS-PatientSearch-SearchExistingPt" searchProperties="true" id="a2e45f27-630f-4f9c-a17e-4ebfe7b5a276"><con:settings/><con:testStep type="groovy" name="AWS-15:Step1:Patient Search WS-TestDataSetup" id="b4163336-6f6f-454c-aaf9-b84e193c7915"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //===Get dbEnv Project-level property value===
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //===Get Patient's EPI, fName, lName and DOB from PT view===
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptInfoList = []
    ptInfoList = daoManagerAccnWS.getPtInfo(dbEnv)

    /*
    //===Debug info===
    log.info "ptInfoList:"
    for (int i=0; i&lt;ptInfoList.size; i++)
    {
    log.info ptInfoList[i]
    }
    */

    //===Get pt EPI value===
    def ptEPI = ptInfoList[0]
    //===Get pt fName value===
    //===Note: fName value in DB also contains middle name===
    def value = ptInfoList[1].split(" ")
    def ptFName = value[0]
    //===Get pt lName===
    def ptLName = ptInfoList[2]
    //===Get pt DOB===
    def ptDOB =  ptInfoList[3]

    //===Set test-case level property values===
    log.info "test-case level property values:"
    testRunner.testCase.setPropertyValue ("ptEPI", ptEPI)
    log.info "ptEPI = " + ptEPI
    testRunner.testCase.setPropertyValue ("ptFName", ptFName)
    log.info "ptFName = " + ptFName
    testRunner.testCase.setPropertyValue ("ptLName", ptLName)
    log.info "ptLName = " + ptLName
    testRunner.testCase.setPropertyValue ("ptDOB", ptDOB)
    log.info "ptDOB = " + ptDOB
</script></con:config></con:testStep><con:testStep type="request" name="AWS-15:Step2:Patient Search WS-SearchExistingPt" id="7f09bae3-528a-4785-91cb-5e59353b4be2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>patientSearchSoap11</con:interface><con:operation>PatientSearch</con:operation><con:request name="AWS-15:Step2:Patient Search WS-SearchExistingPt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="31e0dbbf-2a87-4e7c-ba5a-fc6c54a1f089"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:PatientSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>11111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientSearchRequestMessage>
               <!--Optional:-->
               <pat:PatientId>${#TestCase#ptEPI}</pat:PatientId>
               <!--Optional:-->
               <pat:StartRowNumber>1</pat:StartRowNumber>
               <!--Optional:-->
               <pat:EndRowNumber>100</pat:EndRowNumber>
               <!--Optional:-->
               <pat:ShowDeletedRecords>false</pat:ShowDeletedRecords>
            </pat:PatientSearchRequestMessage>
         </pat:Payload>
      </pat:PatientSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="10c75f86-1c75-4669-96ef-f4ce5bdba739"/><con:assertion type="XPath Match" name="Validate Pt EPI" id="94bc1956-febd-458b-afdf-059c7c75c486"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:PatientSearchResponseMessage[1]/ns4:PatientId[1]/text()</path><content>${#TestCase#ptEPI}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Pt fName" id="a0643dd8-f88d-4d69-a9c4-13da83a6fc8c"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:PatientSearchResponseMessage[1]/ns4:PatientName[1]/ns3:FirstName[1]/text()</path><content>${#TestCase#ptFName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Pt lName" id="1572d689-acc4-4e56-a746-c60ed2522aad"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:PatientSearchResponseMessage[1]/ns4:PatientName[1]/ns3:LastName[1]/text()</path><content>${#TestCase#ptLName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Pt DOB" id="a80304f9-3a1e-47a0-a533-ed6bf2ce5ed9"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:PatientSearchResponseMessage[1]/ns4:PatientDOB[1]/text()</path><content>${#TestCase#ptDOB}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientSearch/patientSearch/PatientSearchRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>ptEPI</con:name><con:value>NLS1</con:value></con:property><con:property><con:name>ptFName</con:name><con:value>SARA</con:value></con:property><con:property><con:name>ptLName</con:name><con:value>SMITH</con:value></con:property><con:property><con:name>ptDOB</con:name><con:value>1966-06-17</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-16:Patient Search WS-PatientSearch-SearchNonExistingPt" searchProperties="true" id="dc551b29-0d94-47ed-a77c-1447e3c6fc65"><con:settings/><con:testStep type="request" name="AWS-16:Step1:Patient Search WS-SearchNonExistingPt" id="3d6b23f5-2293-4812-96ea-91e728542e9f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>patientSearchSoap11</con:interface><con:operation>PatientSearch</con:operation><con:request name="AWS-16:Step1:Patient Search WS-SearchNonExistingPt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="172fb8d0-02b7-4e83-8f8e-0fbb03bc8bc8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientSearch" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:PatientSearchRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>11111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientSearchRequestMessage>
               <!--Optional:-->
               <pat:PatientId>${#TestCase#ptEPI}</pat:PatientId>
               <!--Optional:-->
               <pat:StartRowNumber>1</pat:StartRowNumber>
               <!--Optional:-->
               <pat:EndRowNumber>100</pat:EndRowNumber>
               <!--Optional:-->
               <pat:ShowDeletedRecords>false</pat:ShowDeletedRecords>
            </pat:PatientSearchRequestMessage>
         </pat:Payload>
      </pat:PatientSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6a4272f3-8c81-48bb-b770-1fef9a81c908"/><con:assertion type="XPath Match" name="Validate StatusMessage" id="5b83d598-bd8a-4da2-9003-433980ae22ec"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientSearch';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>no data found *</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientSearch/patientSearch/PatientSearchRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>ptEPI</con:name><con:value>NONEXISTINGPTEPI</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Patient Demographics WS-UpdateAndGetPatientEmail" id="44421c3d-8105-4720-afea-327b2e850aa7"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-17:Patient Demographics WS-UpdateAndGetPatientEmail" searchProperties="true" id="b075d24c-3eb0-4330-86ad-e15b4c4e1dc3"><con:settings/><con:testStep type="groovy" name="AWS-17:Step1:Patient Demographics WS-TestDataSetup" id="b3e6301a-c0c0-482e-a96d-aa8635570433"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //===Get dbEnv Project-level property value===
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //===Get Patient's EPI, fName, lName and DOB from PT view===
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptInfoList = []
    ptInfoList = daoManagerAccnWS.getPtInfo(dbEnv)

    /*
    //===Debug info===
    log.info "ptInfoList:"
    for (int i=0; i&lt;ptInfoList.size; i++)
    {
    log.info ptInfoList[i]
    }
    */

    //===Get pt EPI value===
    def ptEPI = ptInfoList[0]
    //===Get pt fName value===
    //===Note: fName value in DB also contains middle name===
    def value = ptInfoList[1].split(" ")
    def ptFName = value[0]
    //===Get pt lName===
    def ptLName = ptInfoList[2]
    //===Get pt DOB===
    def ptDOB =  ptInfoList[3]

    //===Set test-case level property values===
    log.info "test-case level property values:"
    testRunner.testCase.setPropertyValue ("ptEPI", ptEPI)
    log.info "ptEPI = " + ptEPI
    testRunner.testCase.setPropertyValue ("ptFName", ptFName)
    log.info "ptFName = " + ptFName
    testRunner.testCase.setPropertyValue ("ptLName", ptLName)
    log.info "ptLName = " + ptLName
    testRunner.testCase.setPropertyValue ("ptDOB", ptDOB)
    log.info "ptDOB = " + ptDOB

    def newPtEmail = "QATester@xifin.com"
    testRunner.testCase.setPropertyValue ("updatedPtEmail", newPtEmail)
    log.info "updatedPtEmail = " + newPtEmail
</script></con:config></con:testStep><con:testStep type="request" name="AWS-17:Step2:Patient Demographics WS-UpdatePatientDemoEmail" id="241f148f-26d8-4856-90d6-4db55cd3e7d8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>patientDemoSoap11</con:interface><con:operation>UpdatePatientDemoEmail</con:operation><con:request name="AWS-17:Step2:Patient Demographics WS-UpdatePatientDemoEmail" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="2dd9a98b-3aff-4a3d-b120-8f4a1efe567d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientDemo" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:UpdatePatientDemoEmailRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientId>${#TestCase#ptEPI}</pat:PatientId>
            <!--Optional:-->
            <pat:Email>${#TestCase#updatedPtEmail}</pat:Email>
         </pat:Payload>
      </pat:UpdatePatientDemoEmailRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="68457bd5-d1a4-46b9-b07c-7ed449464af5"/><con:assertion type="XPath Match" name="Validate StatusMessage" id="ebaa2f09-c084-40e7-9d23-a8f8b2686e9d"><con:configuration><path>declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns4='http://www.xifin.com/schema/patientDemo';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientDemo/patientDemo/UpdatePatientDemoEmailRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AWS-17:Step3:Patient Demographics WS-GetPatientEmail" id="b7dbf4ef-ac1d-4a35-9f3e-7e42d1bffcc2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>patientDemoSoap11</con:interface><con:operation>GetPatientEmail</con:operation><con:request name="AWS-17:Step3:Patient Demographics WS-GetPatientEmail" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="699d0cc8-d0ae-4184-bddf-30a1fe0dc658"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientDemo" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:GetPatientEmailRequest>
         <msg:MessageHeader>

            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>

            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientId>${#TestCase#ptEPI}</pat:PatientId>
         </pat:Payload>
      </pat:GetPatientEmailRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="08241868-81c9-42ee-a0ee-359116810820"/><con:assertion type="XPath Match" name="XPath Match" id="136744bd-4bb0-4b1e-9d5a-8ca9a5a36870"><con:configuration><path>declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns4='http://www.xifin.com/schema/patientDemo';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:Email[1]/text()</path><content>${#TestCase#updatedPtEmail}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientDemo/patientDemo/GetPatientEmailRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>ptEPI</con:name><con:value>NLS1</con:value></con:property><con:property><con:name>ptFName</con:name><con:value>SARA</con:value></con:property><con:property><con:name>ptLName</con:name><con:value>SMITH</con:value></con:property><con:property><con:name>ptDOB</con:name><con:value>1966-06-17</con:value></con:property><con:property><con:name>updatedPtEmail</con:name><con:value>QATester@xifin.com</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Error Processing WS-GetAccessionCountInEpQueue" id="b127e16c-c82f-4899-8d33-15d49b8a706c"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-18:Error Processing WS-GetAccessionCountInEpQueue" searchProperties="true" id="242d4910-e022-42c4-9a0a-326713d8dc9c"><con:settings/><con:testStep type="groovy" name="AWS-18:Step1:Error Processing WS-GetAccessionCountInEpQueue-TestDataSetup" id="98d90752-5e79-4644-93c1-c195953db90d"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.mars.dao.*;

    //===Get dbEnv Project-level property value===
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //===Get currentdate value===
    timeStamp = new TimeStamp()
    def currentDate = timeStamp.getCurrentDate("MM/dd/yyyy")
    log.info "currentDate= " + currentDate

    //===Get ClnId and EP CorrespTypId from q_ep_corresp table===
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def infoList = []
    infoList = daoManagerAccnWS.getClnIdAndEPCorrespTypId(dbEnv)
    /*
    //===Debug info===
    log.info "infoList:"
    for (int i=0; i&lt;infoList.size; i++)
    {
    log.info infoList[i]
    }
    */
    //===Get clnId value===
    def clnId = infoList[0]
    //===Get epCorrespTypId value===
    def epCorrespTypId = infoList[1]

    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())
    //===Get clnAbbrev===
    def clnAbbrev = daoManagerXifinRpm.getClientAbbrevIdByClientId(clnId, dbEnv)
    //===Get epCorrespTyp===
    def epCorrespTyp = daoManagerAccnWS.getEPCorrespTyp(epCorrespTypId, dbEnv)
    //===Get accnCount value from DB===
    def accnCount = daoManagerAccnWS.getEPAccnCountByClnIdAndCorrespTyp(clnAbbrev, epCorrespTypId, currentDate, dbEnv)

    //===Set test-case level property values===
    log.info "test-case level property values:"
    testRunner.testCase.setPropertyValue ("clnAbbrev", clnAbbrev)
    log.info "clnAbbrev = " + clnAbbrev
    testRunner.testCase.setPropertyValue ("epCorrespTyp", epCorrespTyp)
    log.info "epCorrespTyp = " + epCorrespTyp
    testRunner.testCase.setPropertyValue ("accnCount", accnCount)
    log.info "accnCount = " + accnCount

</script></con:config></con:testStep><con:testStep type="request" name="AWS-18:Step2:Error Processing WS-GetAccessionCountInEpQueue" id="08ef3cf6-3757-48df-b83f-9a4ac6ecc963"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>errorProcessingSoap11</con:interface><con:operation>GetAccessionCountInEpQueue</con:operation><con:request name="AWS-18:Step2:Error Processing WS-GetAccessionCountInEpQueue" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="3364cf06-3fca-45d9-92be-7f2eda001967"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <err:GetAccessionCountInEpQueueRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <err:Payload>
            <err:ClientId>${#TestCase#clnAbbrev}</err:ClientId>
            <err:CorrespondanceType>${#TestCase#epCorrespTyp}</err:CorrespondanceType>
         </err:Payload>
      </err:GetAccessionCountInEpQueueRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="813f0f47-57bc-4a85-8377-230bf7924136"/><con:assertion type="XPath Match" name="Validate NoOfAccnInEPQ" id="32e9994c-2056-4a17-a51e-f57a9a764abc"><con:configuration><path>declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns4='http://www.xifin.com/schema/errorProcessing';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:NoOfAccessionsInEpQueue[1]/text()</path><content>${#TestCase#accnCount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetAccessionCountInEpQueueRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>clnAbbrev</con:name><con:value>700</con:value></con:property><con:property><con:name>epCorrespTyp</con:name><con:value>Client</con:value></con:property><con:property><con:name>accnCount</con:name><con:value>33</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Error Processing WS-GetClientsInEpQueue" id="da411ef8-e4aa-4afe-9059-b2d5389802c2"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-19:Error Processing WS-GetClientsInEpQueue" searchProperties="true" id="fee4e0cc-610a-4287-8527-861353047f62"><con:settings/><con:testStep type="request" name="AWS-19:Step1:Error Processing WS-GetClientsInEpQueue" id="81305216-eacc-4b44-abeb-1147148e8309"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>errorProcessingSoap11</con:interface><con:operation>GetClientsInEpQueue</con:operation><con:request name="AWS-19:Step1:Error Processing WS-GetClientsInEpQueue" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="35d7d50c-6852-47e3-9ee4-1a42e26b478d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <err:GetClientsInEpQueueRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>22222</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <err:Payload>
            <err:CorrespondanceType>${#TestCase#epCorrespTyp}</err:CorrespondanceType>
         </err:Payload>
      </err:GetClientsInEpQueueRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c68ac746-43f6-465c-99b6-f78d691db88e"/><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetClientsInEpQueueRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-19:Step2:Error Processing WS-GetClientsInEpQueue-Verification" id="bc8a56e2-66fb-4817-8d86-fea822360928"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //===Get dbEnv Project-level property value===
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //===Get currentdate value===
    timeStamp = new TimeStamp()
    def currentDate = timeStamp.getCurrentDate("MM/dd/yyyy")
    log.info "currentDate= " + currentDate

    //===Get clnAbbrevListInDB===
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clnAbbrevListInDB = []
    clnAbbrevListInDB = daoManagerAccnWS.getClnInEpQByCorrespTyp('2', dbEnv)//getClnAbbrevByEPCorrespTyp('2',currentDate, dbEnv)

    //===Debug info===
    log.info "clnAbbrevListInDB:" + clnAbbrevListInDB.size
    for (int i=0; i&lt;clnAbbrevListInDB.size; i++)
    {
    log.info clnAbbrevListInDB[i]
    }

    //*****************
    //===Create groovyUtils and XmlHolder for response===
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-19:Step1:Error Processing WS-GetClientsInEpQueue#Response" )

    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns"] = "http://www.xifin.com/schema/errorProcessing"

    def clnAbbrevListInResponse = []

    //===Get clnAbbrevListInResponse===
    //Loop through the nodes in response message and add the nodes values into a List===
    for( item in holder.getNodeValues( "//ns:ClientId" ))
    {
    clnAbbrevListInResponse.add(item)
    //log.info "Item : [$item]"
    }

    for( item in holder.getNodeValues( "//ns:ClientName" ))
    {
    clnAbbrevListInResponse.add(item)
    //log.info "Item : [$item]"
    }

    //Debug info
    log.info "clnAbbrevListInResponse:" + clnAbbrevListInResponse.size
    for (int i=0; i&lt;clnAbbrevListInResponse.size; i++)
    {
    log.info clnAbbrevListInResponse[i]
    }

    //===Compare the two lists===
    listUtil = new ListUtil()
    def compareResult = listUtil.compareLists(clnAbbrevListInDB,clnAbbrevListInResponse)
    log.info "compareResult= " + compareResult
    assert compareResult == true: "AWS-19:Error Processing WS-GetClientsInEpQueue-Verification was failed"

</script></con:config></con:testStep><con:properties><con:property><con:name>epCorrespTyp</con:name><con:value>Client</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite>
<!--    <con:testSuite name="Error Processing WS-GetErrorProcessingAccession" id="fbdb8b60-cb96-43c8-bd40-053b8410e2c7"><con:settings/><con:runType>SEQUENTIAL</con:runType>-->
<!--        <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-20:Error Processing WS-GetErrorProcessingAccession" searchProperties="true" id="a3a4ab34-c9c4-4244-8a2c-33b041f9ce75"><con:settings/><con:testStep type="groovy" name="AWS-20:Step1:Error Processing WS-GetErrorProcessingAccession-TestDataSetup" id="c7293746-fc73-4d6a-be63-dc6406ea6483"><con:settings/><con:config><script>import com.xifin.utils.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    //===Get dbEnv Project-level property value===-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    //===Get currentdate value===-->
<!--    timeStamp = new TimeStamp()-->
<!--    def currentDate = timeStamp.getCurrentDate("MM/dd/yyyy")-->

<!--    //===Get clnAbbrevListInDB===-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def clnAbbrevListInDB = []-->
<!--    clnAbbrevListInDB = daoManagerAccnWS.getClnAbbrevByEPCorrespTyp('2',currentDate, dbEnv) // epCorrespTyp = 2 (Client)-->
<!--    def clnAbbrev = clnAbbrevListInDB[0]-->

<!--    //===Set test-case level property values===-->
<!--    log.info "test-case level property values:"-->
<!--    testRunner.testCase.setPropertyValue ("currentDate", currentDate)-->
<!--    log.info "currentDate= " + currentDate-->
<!--    testRunner.testCase.setPropertyValue ("clnAbbrev", clnAbbrev)-->
<!--    log.info "clnAbbrev = " + clnAbbrev</script></con:config></con:testStep><con:testStep type="request" name="AWS-20:Step2:Error Processing WS-GetErrorProcessingAccession" id="73432278-9ef9-477f-9237-d40ed8f015e8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>errorProcessingSoap11</con:interface><con:operation>GetErrorProcessingAccession</con:operation><con:request name="AWS-20:Step2:Error Processing WS-GetErrorProcessingAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="c532a86b-3e62-4c8a-80b2-957750052d42"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <err:GetErrorProcessingAccessionRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>22222</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <err:Payload>-->
<!--            <err:ErrorProcessingAccessionMessage>-->
<!--               <err:ClientId>${#TestCase#clnAbbrev}</err:ClientId>-->
<!--               <err:CorrespondanceType>${#TestCase#epCorrespTyp}</err:CorrespondanceType>-->
<!--            </err:ErrorProcessingAccessionMessage>-->
<!--         </err:Payload>-->
<!--      </err:GetErrorProcessingAccessionRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0be5aeb0-8ce3-4c79-b4fc-5d4cf4fcf604"/><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetErrorProcessingAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-20:Step3:Error Processing WS-GetErrorProcessingAccession-Verification" id="b00ff6a7-fd84-48f9-8270-1e920b34902c"><con:settings/><con:config><script>import com.xifin.utils.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    //===Get dbEnv Project-level property value===-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    //===Get clnAbbrevListInDB===-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def accnListInDB = []-->
<!--    def clnAbbrev = testRunner.testCase.getPropertyValue ("clnAbbrev")-->
<!--    log.info "clnAbbrev = " + clnAbbrev-->
<!--    def currentDate = testRunner.testCase.getPropertyValue ("currentDate")-->
<!--    log.info "currentDate = " + currentDate-->
<!--    accnListInDB = daoManagerAccnWS.getAccnsByClnAndEPCorrespTyp(clnAbbrev, '2', currentDate, dbEnv)-->

<!--    //===Debug info===-->
<!--    //log.info "accnListInDB:" + accnListInDB.size-->
<!--    //for (int i=0; i&lt;accnListInDB.size; i++)-->
<!--    //{-->
<!--    //	log.info accnListInDB[i]-->
<!--    //}-->

<!--    //*****************-->
<!--    //===Create groovyUtils and XmlHolder for response===-->
<!--    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )-->
<!--    def holder = groovyUtils.getXmlHolder( "AWS-20:Step2:Error Processing WS-GetErrorProcessingAccession#Response" )-->

<!--    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.-->
<!--    holder.namespaces["ns"] = "http://www.xifin.com/schema/errorProcessing"-->

<!--    def accnListInResponse = []-->

<!--    //===Get clnAbbrevListInResponse===-->
<!--    //Loop through the nodes in response message and add the nodes values into a List===-->
<!--    for( item in holder.getNodeValues( "//ns:AccessionId" ))-->
<!--    {-->
<!--    accnListInResponse.add(item)-->
<!--    //log.info "Item : [$item]"-->
<!--    }-->

<!--    //Debug info-->
<!--    //log.info "accnListInResponse:" + accnListInResponse.size-->
<!--    //for (int i=0; i&lt;accnListInResponse.size; i++)-->
<!--    //{-->
<!--    //	log.info accnListInResponse[i]-->
<!--    //}-->

<!--    //===Compare the two lists===-->
<!--    listUtil = new ListUtil()-->
<!--    def compareResult = listUtil.compareLists(accnListInDB,accnListInResponse)-->
<!--    log.info "compareResult= " + compareResult-->
<!--    assert compareResult == true: "AWS-20:Error Processing WS-GetErrorProcessingAccession was failed"-->

<!--</script></con:config></con:testStep><con:properties><con:property><con:name>epCorrespTyp</con:name><con:value>Client</con:value></con:property><con:property><con:name>currentDate</con:name><con:value>08/24/2017</con:value></con:property><con:property><con:name>clnAbbrev</con:name><con:value>700</con:value></con:property></con:properties></con:testCase>-->
<!--        <con:properties/></con:testSuite>-->
<!--    <con:testSuite name="Error Processing WS-GetErrorProcessingSummary" id="0d15b034-7027-4166-881a-65e6629f4f66"><con:settings/><con:runType>SEQUENTIAL</con:runType>-->
<!--        <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-21:Error Processing WS-GetErrorProcessingSummary" searchProperties="true" id="842d0b49-3255-47a3-865b-9996d2b0d75e"><con:settings/><con:testStep type="groovy" name="AWS-21:Step1:Error Processing WS-GetErrorProcessingSummary-TestDataSetup" id="0ba6601a-b480-4d33-93ab-c86f82aed937"><con:settings/><con:config><script>import com.xifin.utils.*;-->
<!--    import com.xifin.accnws.dao.*;-->
<!--    import com.xifin.qa.config.*;-->

<!--    //===Get dbEnv Project-level property value===-->
<!--    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--    //===Get currentDate value===-->
<!--    timeStamp = new TimeStamp()-->
<!--    def currentDate = timeStamp.getCurrentDate("MM/dd/yyyy")-->

<!--    //===Get clnAbbrevListInDB===-->
<!--    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--    def clnAbbrevListInDB = []-->
<!--    clnAbbrevListInDB = daoManagerAccnWS.getClnAbbrevByEPCorrespTyp('2',currentDate, dbEnv) // epCorrespTyp = 2 (Client)-->
<!--    def clnAbbrev = clnAbbrevListInDB[0]-->

<!--    //===Set test-case level property values===-->
<!--    log.info "test-case level property values:"-->
<!--    testRunner.testCase.setPropertyValue ("epCorrespTyp", "Client")-->
<!--    log.info "epCorrespTyp= " + testRunner.testCase.getPropertyValue ("epCorrespTyp")-->
<!--    testRunner.testCase.setPropertyValue ("clnAbbrev", clnAbbrev)-->
<!--    log.info "clnAbbrev = " + clnAbbrev-->
<!--    testRunner.testCase.setPropertyValue ("currentDate", currentDate)-->
<!--    log.info "currentDate= " + currentDate</script></con:config></con:testStep><con:testStep type="request" name="AWS-21:Step2:Error Processing WS-GetErrorProcessingSummary" id="debdb929-6b67-4555-81ee-740c7adf3b6e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>errorProcessingSoap11</con:interface><con:operation>GetErrorProcessingSummary</con:operation><con:request name="AWS-21:Step2:Error Processing WS-GetErrorProcessingSummary" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="5787c878-3d49-4daa-8171-11b912ffd6c3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:err="http://www.xifin.com/schema/errorProcessing" xmlns:msg="http://www.xifin.com/schema/msgHeader">-->
<!--   <soapenv:Header/>-->
<!--   <soapenv:Body>-->
<!--      <err:GetErrorProcessingSummaryRequest>-->
<!--         <msg:MessageHeader>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:SequenceNumber>22222</msg:SequenceNumber>-->
<!--            <msg:UserId>${#Project#UserId}</msg:UserId>-->
<!--            &lt;!&ndash;Optional:&ndash;&gt;-->
<!--            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>-->
<!--         </msg:MessageHeader>-->
<!--         <err:Payload>-->
<!--            <err:EPSummaryRequestMessage>-->
<!--               <err:ClientId>${#TestCase#clnAbbrev}</err:ClientId>-->

<!--               <err:CorrespondanceType>${#TestCase#epCorrespTyp}</err:CorrespondanceType>-->
<!--            </err:EPSummaryRequestMessage>-->
<!--         </err:Payload>-->
<!--      </err:GetErrorProcessingSummaryRequest>-->
<!--   </soapenv:Body>-->
<!--</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="180eaf0a-c6d6-4056-a1bb-d1ef8ab1fd3a"/><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/errorProcessing/errorProcessing/GetErrorProcessingSummaryRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-21:Step3:Error Processing WS-GetErrorProcessingSummary-Verification" id="9fb2e9fc-6506-41fd-a0fc-ede117666ea1"><con:settings/><con:config><script><![CDATA[import com.xifin.utils.*;-->
<!--import com.xifin.accnws.dao.*;-->
<!--import com.xifin.qa.config.*;-->

<!--//===Get dbEnv Project-level property value===-->
<!--def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")-->
<!--Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))-->

<!--//===Get epSummaryListInDB===-->
<!--daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())-->
<!--//def epSummaryPT_F_NMListInDB = []-->
<!--//def epSummaryPT_L_NMListInDB = []-->
<!--def epSummaryDOSListInDB = []-->
<!--def epSummaryErrCountListInDB = []-->
<!--def clnAbbrev = testRunner.testCase.getPropertyValue ("clnAbbrev")-->
<!--def currentDate = testRunner.testCase.getPropertyValue ("currentDate")-->

<!--//epSummaryPT_F_NMListInDB = daoManagerAccnWS.getEPSummaryByColNameAndClnAbbrevAndEPCorrespType("PT_F_NM", clnAbbrev, '2',currentDate, dbEnv) // epCorrespTyp = 2 (Client)-->
<!--//epSummaryPT_L_NMListInDB = daoManagerAccnWS.getEPSummaryByColNameAndClnAbbrevAndEPCorrespType("PT_L_NM", clnAbbrev, '2',currentDate, dbEnv)-->
<!--epSummaryDOSListInDB = daoManagerAccnWS.getEPSummaryByColNameAndClnAbbrevAndEPCorrespType("DOS", clnAbbrev, '2',currentDate, dbEnv)-->
<!--epSummaryErrCountListInDB = daoManagerAccnWS.getEPSummaryByColNameAndClnAbbrevAndEPCorrespType("count(A.pk_accn_id)", clnAbbrev, '2',currentDate, dbEnv)-->

<!--//===Debug info===-->
<!--/*-->
<!--log.info "epSummaryPT_F_NMListInDB:" + epSummaryPT_F_NMListInDB.size-->
<!--for (int i=0; i<epSummaryPT_F_NMListInDB.size; i++)-->
<!--{-->
<!--	log.info epSummaryPT_F_NMListInDB[i]-->
<!--}-->

<!--log.info "epSummaryPT_L_NMListInDB:" + epSummaryPT_L_NMListInDB.size-->
<!--for (int i=0; i<epSummaryPT_L_NMListInDB.size; i++)-->
<!--{-->
<!--	log.info epSummaryPT_L_NMListInDB[i]-->
<!--}-->
<!--*/-->
<!--/*-->
<!--log.info "epSummaryDOSListInDB:" + epSummaryDOSListInDB.size-->
<!--for (int i=0; i<epSummaryDOSListInDB.size; i++)-->
<!--{-->
<!--	log.info epSummaryDOSListInDB[i]-->
<!--}-->

<!--log.info "epSummaryErrCountListInDB:" + epSummaryErrCountListInDB.size-->
<!--for (int i=0; i<epSummaryErrCountListInDB.size; i++)-->
<!--{-->
<!--	log.info epSummaryErrCountListInDB[i]-->
<!--}-->
<!--*/-->
<!--//*****************-->
<!--//===Create groovyUtils and XmlHolder for response===-->
<!--def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )-->
<!--def holder = groovyUtils.getXmlHolder( "AWS-21:Step2:Error Processing WS-GetErrorProcessingSummary#Response" )-->

<!--//If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.-->
<!--holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"-->
<!--holder.namespaces["ns4"] = "http://www.xifin.com/schema/errorProcessing"-->

<!--//def epSummaryPT_F_NMListInResponse = []-->
<!--//def epSummaryPT_L_NMListInResponse = []-->
<!--def epSummaryDOSListInResponse = []-->
<!--def epSummaryErrCountListInResponse = []-->

<!--//===Get epSummaryListInResponse===-->
<!--//Loop through the nodes in response message and add the nodes values into a List===-->
<!--/*-->
<!--for( item in holder.getNodeValues( "//ns3:FirstName" ))-->
<!--{-->
<!--	epSummaryPT_F_NMListInResponse.add(item)-->

<!--}-->

<!--for( item in holder.getNodeValues( "//ns3:LastName" ))-->
<!--{-->
<!--	epSummaryPT_L_NMListInResponse.add(item)-->

<!--}-->
<!--*/-->

<!--for( item in holder.getNodeValues( "//ns4:DateOfService" ))-->
<!--{-->
<!--	epSummaryDOSListInResponse.add(item)-->

<!--}-->

<!--for( item in holder.getNodeValues( "//ns4:ErrorCount" ))-->
<!--{-->
<!--	epSummaryErrCountListInResponse.add(item)-->

<!--}-->

<!--//===Debug info===-->
<!--/*-->
<!--log.info "epSummaryPT_F_NMListInResponse:" + epSummaryPT_F_NMListInResponse.size-->
<!--for (int i=0; i<epSummaryPT_F_NMListInResponse.size; i++)-->
<!--{-->
<!--	log.info epSummaryPT_F_NMListInResponse[i]-->
<!--}-->

<!--log.info "epSummaryPT_L_NMListInResponse:" + epSummaryPT_L_NMListInResponse.size-->
<!--for (int i=0; i<epSummaryPT_L_NMListInResponse.size; i++)-->
<!--{-->
<!--	log.info epSummaryPT_L_NMListInResponse[i]-->
<!--}-->
<!--*/-->
<!--/*-->
<!--log.info "epSummaryDOSListInResponse:" + epSummaryDOSListInResponse.size-->
<!--for (int i=0; i<epSummaryDOSListInResponse.size; i++)-->
<!--{-->
<!--	log.info epSummaryDOSListInResponse[i]-->
<!--}-->

<!--log.info "epSummaryErrCountListInResponse:" + epSummaryErrCountListInResponse.size-->
<!--for (int i=0; i<epSummaryErrCountListInResponse.size; i++)-->
<!--{-->
<!--	log.info epSummaryErrCountListInResponse[i]-->
<!--}-->
<!--*/-->
<!--//===Compare the two lists===-->
<!--listUtil = new ListUtil()-->
<!--/*-->
<!--def comparePT_F_NMResult = listUtil.compareLists(epSummaryPT_F_NMListInDB,epSummaryPT_F_NMListInResponse)-->
<!--log.info "comparePT_F_NMResult= " + comparePT_F_NMResult-->
<!--assert comparePT_F_NMResult == true: "AWS-21:Error Processing WS-GetErrorProcessingSummary was failed"-->

<!--def comparePT_L_NMResult = listUtil.compareLists(epSummaryPT_L_NMListInDB,epSummaryPT_L_NMListInResponse)-->
<!--log.info "comparePT_L_NMResult= " + comparePT_L_NMResult-->
<!--assert comparePT_L_NMResult == true: "AWS-21:Error Processing WS-GetErrorProcessingSummary was failed"-->
<!--*/-->

<!--def compareDOSResult = listUtil.compareLists(epSummaryDOSListInDB,epSummaryDOSListInResponse)-->
<!--log.info "compareDOSResult= " + compareDOSResult-->
<!--assert compareDOSResult == true: "AWS-21:Error Processing WS-GetErrorProcessingSummary was failed"-->

<!--def compareErrCountResult = listUtil.compareLists(epSummaryErrCountListInDB,epSummaryErrCountListInResponse)-->
<!--log.info "compareErrCountResult= " + compareErrCountResult-->
<!--assert compareErrCountResult == true: "AWS-21:Error Processing WS-GetErrorProcessingSummary was failed"-->
<!--]]></script></con:config></con:testStep><con:properties><con:property><con:name>epCorrespTyp</con:name><con:value>Client</con:value></con:property><con:property><con:name>clnAbbrev</con:name><con:value>700</con:value></con:property><con:property><con:name>currentDate</con:name><con:value>08/24/2017</con:value></con:property></con:properties></con:testCase>-->
<!--        <con:properties/></con:testSuite>-->
    <con:testSuite name="Accession Search Specific For Patient Portal WS-Accession Search Patient Portal" id="ef0c5786-de27-4aaf-a35a-7c1254329763"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-22:Accession Search For Patient Portal WS-Accession Search Patient Portal" searchProperties="true" id="148e7db2-c2f7-4545-a238-dec8a3066c05"><con:settings/><con:testStep type="groovy" name="AWS-22:Step1:Accession Search For Patient Portal WS-Accession Search Patient Portal-TestDataSetup" id="ce89d4c5-3002-4e94-b742-f40bcf7ed252"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //======== Get values =========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))
    def accnInfo = []

    //Get AccnID value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    accnInfo = daoManagerAccnWS.getPricedThirdPartyAccnWOErrorFromACCNAndACCNPYR(dbEnv)

    //======== Set TestCase level property values ========
    //Set AccnID1 TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnID", accnInfo[0])
    log.info "AccnID=" + accnInfo[0]

    //Set AccnDOS TestCase-level value
    def accnDOS = daoManagerAccnWS.getDOSByAccnId(accnInfo[0], dbEnv)
    testRunner.testCase.setPropertyValue ("accnDOS", accnDOS)
    log.info "AccnDOS = " + accnDOS</script></con:config></con:testStep><con:testStep type="request" name="AWS-22:Step2:Accession Search For Patient Portal WS-Accession Search Patient Portal" id="39f238fa-37a4-45c0-bcc1-74ab29cb59a4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSearchPatientPortalSoap11</con:interface><con:operation>AccessionSearchPatientPortal</con:operation><con:request name="AWS-22:Step2:Accession Search For Patient Portal WS-Accession Search Patient Portal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="4d98ac5a-a670-4034-99a0-27de5bb71233"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accessionSearchPatientPortal" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:AccessionSearchPatientPortalRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>123456</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:AccessionSearchPatientPortalRequestMessage>
               <!--Optional:-->
               <acc:AccessionId>${#TestCase#AccnID}</acc:AccessionId>
               <!--Optional:-->
               <acc:StartRowNumber>1</acc:StartRowNumber>
               <!--Optional:-->
               <acc:EndRowNumber>100</acc:EndRowNumber>
            </acc:AccessionSearchPatientPortalRequestMessage>
         </acc:Payload>
      </acc:AccessionSearchPatientPortalRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="d5221286-95e0-42ac-b5dc-0789435a8654"/><con:assertion type="XPath Match" name="Validate AccnId" id="6060503c-a60b-4e3b-8332-becd5ee2bfc2"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearchPatientPortal';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:AccessionSearchPatientPortalResponseMessage[1]/ns4:AccessionId[1]/text()</path><content>${#TestCase#AccnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate DOS" id="f1d09c95-829b-406a-b769-85b8f46d111d"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accessionSearchPatientPortal';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:AccessionSearchPatientPortalResponseMessage[1]/ns4:Dos
    [1]/text()</path><content>${#TestCase#accnDOS}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accessionSearchPatientPortal/accessionSearchPatientPortal/AccessionSearchPatientPortalRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>AccnID</con:name><con:value>QATESTER20170616022131957</con:value></con:property><con:property><con:name>accnDOS</con:name><con:value>2017-06-16</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Patient Payment WS-CheckPayment" id="5816b7a2-cb48-4512-a242-82fcb0f57b4b"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-23:Patient Payment WS-CheckPayment" searchProperties="true" id="06f07c44-a0c8-4a56-a04d-51697937422c"><con:settings/><con:testStep type="groovy" name="AWS-23:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="ae0c8831-b1ac-4c9f-8840-d049eefe11ad"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="request" name="AWS-23:Step2:Accession WS-CreateNewAccession" id="e8de01a2-f2e8-4fb0-86e0-fdf99a6bc491"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-23:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="bfb5451a-c660-46b6-8069-ca4fae5064ef"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="56fee6e7-0199-4e8a-a90a-1775e46e021f"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="49397fb0-6bcc-4f68-a926-31e3333f6fb4"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-23:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="b0e39248-f86b-483f-af7e-67488a2372ec"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-23:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-23:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-23:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-23:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-23:Step2:Accession WS-CreateNewAccession#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-23:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"


</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-23:Step4:Patient Payment WS-CheckPayment-TestDataSetup" id="8c758eb7-1095-4cce-98a0-be48bca7f326"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
    import com.xifin.utils.*;
    import com.xifin.qa.config.*;
    /*
    // get TestCase AWS-3
    def tc1 = testRunner.testCase.testSuite.project.testSuites["Accession WS-CreateAccession"].testCases["AWS-5:Accession WS-CreateAccession-CreateNewAccession"]
    // run test synchrouously
    def runner = tc1.run( null, false )
    // show that it worked out ok
    //log.info "Status: $runner.status, time taken for TestCase was: $runner.timeTaken ms"
    // assert that it didn't fail
    assert runner.status != Status.FAILED : runner.reason

    //Get newly created accn id from AWS-3 test-case level property value
    def newAccnID = tc1.getPropertyValue("NewAccnID")

    //=============================================================
    // get TestCase AWS-23
    def tc2 = testRunner.testCase.testSuite.project.testSuites["Patient Payment WS-CheckPayment"].testCases["AWS-23:Patient Payment WS-CheckPayment"]
    //Set AWS-23 test-case level property value
    tc2.setPropertyValue ("newAccnID", newAccnID)
    log.info "newAccnID = " + newAccnID
    */
    randomCharacter = new RandomCharacter()

    def checkNumber = randomCharacter.getRandomNumericString(4)
    def receiptId = randomCharacter.getRandomNumericString(10)

    //def accnId = context.expand('${#TestCase#NewAccnID}')
    testRunner.testCase.setPropertyValue ("checkNumber", checkNumber)
    testRunner.testCase.setPropertyValue ("receiptId", receiptId)
    //log.info "ExistingAccnId = " + accnId
    //tc2.setPropertyValue ("checkNumber", checkNumber)
    //tc2.setPropertyValue ("receiptId", receiptId)
    log.info "checkNumber = " + checkNumber
    log.info "receiptId = " + receiptId</script></con:config></con:testStep><con:testStep type="request" name="AWS-23:Step5:Patient Payment WS-CheckPayment" id="c20dd79c-b7e7-4e8d-a454-d9ca2dada02f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>patientPaymentSoap11</con:interface><con:operation>CheckPayment</con:operation><con:request name="AWS-23:Step5:Patient Payment WS-CheckPayment" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="5cb99e99-7189-4b46-9d61-a895af93ffde"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPayment" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:CheckPaymentRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>123456</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:CheckPayment>
               <pat:AccessionId>${#TestCase#newAccnID}</pat:AccessionId>
               <!--Optional:-->
               <pat:ReceiptId>${#TestCase#receiptId}</pat:ReceiptId>
               <pat:CheckNumber>${#TestCase#checkNumber}</pat:CheckNumber>
               <pat:PaymentAmount>15.67</pat:PaymentAmount>
               <!--Optional:-->
               <pat:Comment>Automated Smoke Test</pat:Comment>
               <!--Optional:-->
               <pat:PrintOnPatientStatement>false</pat:PrintOnPatientStatement>
            </pat:CheckPayment>
         </pat:Payload>
      </pat:CheckPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="ab93b7fa-ffd9-440e-aa46-c5d8433eeb44"/><con:assertion type="XPath Match" name="Validate Accn ID" id="06760e1b-df5e-4a9c-a2fe-15bc6c10ad1f"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientPayment';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:BusinessObject[1]/ns4:CashOrCheckPaymentResp[1]//ns4:AccessionId[1]/text()</path><content>${#TestCase#newAccnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Receipt ID" id="b5545aac-a65a-4648-a044-78341efa17eb"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientPayment';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:BusinessObject[1]/ns4:CashOrCheckPaymentResp[1]//ns4:ReceiptId[1]/text()</path><content>${#TestCase#receiptId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate ResponseMessage" id="0c63cb7a-9358-4e3e-bb26-23a59065a14c"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientPayment';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:BusinessObject[1]/ns4:CashOrCheckPaymentResp[1]//ns4:ResponseMessage[1]/text()</path><content>* has been applied to the accession</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPayment/patientPayment/CheckPaymentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-23:Step6:Patient Payment WS-CheckPayment-Verification" id="1997e091-d57d-41d9-b344-13a3e1829c38"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //===Get dbEnv Project-level property value===
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //===Get epSummaryListInDB===
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptPmtListInDB = []
    def newAccnId = testRunner.testCase.getPropertyValue ("newAccnID")

    ptPmtListInDB = daoManagerAccnWS.getPtPmtByAccnIdAndPyrIdAndPmtSeqIdAndPmtTyp(newAccnId, '4', '1','2', dbEnv) // PmtTyp = 2 (Check Pmt)
    /*
    //===Debug info===
    log.info "ptPmtListInDB:" + ptPmtListInDB.size
    for (int i=0; i&lt;ptPmtListInDB.size; i++)
    {
    log.info ptPmtListInDB[i]
    }
    */

    //*****************
    //===Create groovyUtils and XmlHolder for response===
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-23:Step5:Patient Payment WS-CheckPayment#Response" )

    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns4"] = "http://www.xifin.com/schema/patientPayment"

    def ptPmtListInResponse = []

    //===Get epSummaryListInResponse===
    //Loop through the nodes in response message and add the nodes values into a List===
    for( item in holder.getNodeValues( "//ns4:ReceiptId" ))
    {
    ptPmtListInResponse.add(item)

    }

    for( item in holder.getNodeValues( "//ns4:PaymentAmount" ))
    {
    ptPmtListInResponse.add(item)

    }
    /*
    //===Debug info===
    log.info "ptPmtListInResponse:" + ptPmtListInResponse.size
    for (int i=0; i&lt;ptPmtListInResponse.size; i++)
    {
    log.info ptPmtListInResponse[i]
    }
    */

    //===Compare the two lists===
    listUtil = new ListUtil()
    def comparePtPmtResult = listUtil.compareLists(ptPmtListInDB, ptPmtListInResponse)
    log.info "comparePtPmtResult = " + comparePtPmtResult
    assert comparePtPmtResult == true: "AWS-23:Patient Payment WS-CheckPayment failed!"

</script></con:config></con:testStep><con:properties><con:property><con:name>newAccnID</con:name><con:value>QATESTER20180105094014681</con:value></con:property><con:property><con:name>checkNumber</con:name><con:value>9792</con:value></con:property><con:property><con:name>receiptId</con:name><con:value>9163737295</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-01-05</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-01-05</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180105094014681</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEWZVVY</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMETQUWA</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A939522251</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1114927050</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>S32.312G</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Patient Payment WS-CashPayment" id="c41f7c5a-2812-4d5b-b709-71e611791378"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-24:Patient Payment WS-CashPayment" searchProperties="true" id="52190445-c49d-4f92-979e-b4a98ebb5d5e"><con:settings/><con:testStep type="groovy" name="AWS-24:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="a1569578-6615-41ca-8f6c-e8c4c0d711c7"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="request" name="AWS-24:Step2:Accession WS-CreateNewAccession" id="8b3f0c08-9e13-449b-8ca1-63e8423b5d83"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-24:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="70d6167e-00bc-46bd-bf6b-932938120aa6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b0f53155-8451-414e-a174-2ade2627321c"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="4996d0c1-a34a-4900-8650-9a929850243c"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-24:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="d383ff3a-d8d5-45ee-b46c-4cd9bcf670b4"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-24:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-24:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-24:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-24:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-24:Step2:Accession WS-CreateNewAccession#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-24:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"


</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-24:Step4:Patient Payment WS-CashPayment-TestDataSetup" id="7e94275c-9ab3-403a-bcf6-89e5a291dfd5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
    import com.xifin.utils.*;
    import com.xifin.qa.config.*;
    /*
    // get TestCase AWS-3
    def tc1 = testRunner.testCase.testSuite.project.testSuites["Accession WS-CreateAccession"].testCases["AWS-5:Accession WS-CreateAccession-CreateNewAccession"]
    // run test synchrouously
    def runner = tc1.run( null, false )
    // show that it worked out ok
    //log.info "Status: $runner.status, time taken for TestCase was: $runner.timeTaken ms"
    // assert that it didn't fail
    assert runner.status != Status.FAILED : runner.reason

    //Get newly created accn id from AWS-3 test-case level property value
    def newAccnID = tc1.getPropertyValue("NewAccnID")

    //=============================================================
    // get TestCase AWS-24
    def tc2 = testRunner.testCase.testSuite.project.testSuites["Patient Payment WS-CashPayment"].testCases["AWS-24:Patient Payment WS-CashPayment"]
    //Set AWS-24 test-case level property value
    tc2.setPropertyValue ("newAccnID", newAccnID)
    log.info "newAccnID = " + newAccnID

    randomCharacter = new RandomCharacter()

    def checkNumber = randomCharacter.getRandomNumericString(4)
    def receiptId = randomCharacter.getRandomNumericString(10)
    tc2.setPropertyValue ("checkNumber", checkNumber)
    tc2.setPropertyValue ("receiptId", receiptId)
    log.info "checkNumber = " + checkNumber
    log.info "receiptId = " + receiptId
    */

    randomCharacter = new RandomCharacter()

    def checkNumber = randomCharacter.getRandomNumericString(4)
    def receiptId = randomCharacter.getRandomNumericString(10)

    //def accnId = context.expand('${#TestCase#NewAccnID}')
    testRunner.testCase.setPropertyValue ("checkNumber", checkNumber)
    testRunner.testCase.setPropertyValue ("receiptId", receiptId)
    //log.info "ExistingAccnId = " + accnId
    //tc2.setPropertyValue ("checkNumber", checkNumber)
    //tc2.setPropertyValue ("receiptId", receiptId)
    log.info "checkNumber = " + checkNumber
    log.info "receiptId = " + receiptId</script></con:config></con:testStep><con:testStep type="request" name="AWS-24:Step5:Patient Payment WS-CashPayment" id="43933f48-8e8b-4ad1-a35d-1bcac5087d81"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>patientPaymentSoap11</con:interface><con:operation>CashPayment</con:operation><con:request name="AWS-24:Step5:Patient Payment WS-CashPayment" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="ca879ee4-efe5-482b-8d3d-0085a7564904"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPayment" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:CashPaymentRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>123456</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:CashPayment>
               <pat:AccessionId>${#TestCase#newAccnID}</pat:AccessionId>
               <!--Optional:-->
               <pat:ReceiptId>${#TestCase#receiptId}</pat:ReceiptId>
               <pat:PaymentAmount>12.34</pat:PaymentAmount>
               <!--Optional:-->
               <pat:Comment>Automated Smoke Test</pat:Comment>
               <!--Optional:-->
               <pat:PrintOnPatientStatement>false</pat:PrintOnPatientStatement>
            </pat:CashPayment>
         </pat:Payload>
      </pat:CashPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="df14ebda-5075-40bd-bbd9-610a3d606316"/><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPayment/patientPayment/CashPaymentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-24:Step6:Patient Payment WS-CashPayment-Verification" id="faec0247-2c27-42fb-88bb-34c435a1437d"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //===Get dbEnv Project-level property value===
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //===Get epSummaryListInDB===
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptPmtListInDB = []
    def newAccnId = testRunner.testCase.getPropertyValue ("newAccnID")

    ptPmtListInDB = daoManagerAccnWS.getPtPmtByAccnIdAndPyrIdAndPmtSeqIdAndPmtTyp(newAccnId, '4', '1','1', dbEnv) // PmtTyp = 1 (Cash Pmt)
    /*
    //===Debug info===
    log.info "ptPmtListInDB:" + ptPmtListInDB.size
    for (int i=0; i&lt;ptPmtListInDB.size; i++)
    {
    log.info ptPmtListInDB[i]
    }
    */
    //*****************
    //===Create groovyUtils and XmlHolder for response===
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-24:Step5:Patient Payment WS-CashPayment#Response" )

    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns4"] = "http://www.xifin.com/schema/patientPayment"

    def ptPmtListInResponse = []

    //===Get epSummaryListInResponse===
    //Loop through the nodes in response message and add the nodes values into a List===
    for( item in holder.getNodeValues( "//ns4:ReceiptId" ))
    {
    ptPmtListInResponse.add(item)

    }

    for( item in holder.getNodeValues( "//ns4:PaymentAmount" ))
    {
    ptPmtListInResponse.add(item)

    }
    /*
    //===Debug info===
    log.info "ptPmtListInResponse:" + ptPmtListInResponse.size
    for (int i=0; i&lt;ptPmtListInResponse.size; i++)
    {
    log.info ptPmtListInResponse[i]
    }
    */

    //===Compare the two lists===
    listUtil = new ListUtil()
    def comparePtPmtResult = listUtil.compareLists(ptPmtListInDB, ptPmtListInResponse)
    log.info "comparePtPmtResult = " + comparePtPmtResult
    assert comparePtPmtResult == true: "AWS-24:Patient Payment WS-CashPayment failed!"

</script></con:config></con:testStep><con:properties><con:property><con:name>newAccnID</con:name><con:value>QATESTER20170824142503373</con:value></con:property><con:property><con:name>checkNumber</con:name><con:value>1421</con:value></con:property><con:property><con:name>receiptId</con:name><con:value>8887332713</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2017-08-24</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1987-08-24</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20170824142503373</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMERVBTQ</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMETZPOW</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A478772649</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1215930367</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>300</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>W62.9XXD</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite>
    <con:testSuite name="Accession WS-ABN Logic" id="b04503b1-e772-4155-a572-4d7f199c136e"><con:settings/><con:runType>SEQUENTIAL</con:runType>
        <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-81:Accession WS-ABN Logic-AddLCNOABNError" searchProperties="true" id="b2229838-3829-4953-afca-a2531ef283e0"><con:settings/><con:testStep type="groovy" name="AWS-81:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="327bd9ef-855b-4893-a9f9-2bb6c7db7cef"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.mars.dao.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    timeStamp = new TimeStamp()
    randomCharacter = new RandomCharacter()
    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())

    //Get an existing Priced 3rd payor accnId and clnId
    def existAccnIdClnIdList = []
    existAccnIdClnIdList = daoManagerAccnWS.getPricedThirdPartyAccnWOErrorFromACCNAndACCNPYR(dbEnv)
    def existAccnId = existAccnIdClnIdList[0]
    log.info "existAccnId = " + existAccnId

    //Get existing cln id
    def existClnId = existAccnIdClnIdList[1]
    def existClnAbbrev = daoManagerXifinRpm.getClientAbbrevIdByClientId(existClnId, dbEnv)
    log.info "existClnAbbrev = " + existClnAbbrev

    //Get timeStamp value
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Generate random ptEPI
    def newPtEPI = "EPI" + currentDateTime
    log.info "newPtEPI = " + newPtEPI

    //Generate random ptFName, ptLName
    def newPtFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def newPtLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    log.info "newPtFName = " + newPtFName
    log.info "newPtLName = " + newPtLName

    //Get existing primary pyr abbrev and subsId and relationship abbrev
    def existPyrInfoList = []
    existPyrInfoList = daoManagerAccnWS.getPyrAbbrevSubsIdRelshpTypFromAccnPyrByAccnIdPyrPrio(existAccnId, "1", dbEnv)
    def existPyrAbbrev = existPyrInfoList[0]
    def existSubsId = existPyrInfoList[1]
    def existRelshpAbbrev = existPyrInfoList[2]
    log.info "existPyrAbbrev = " + existPyrAbbrev
    log.info "existSubsId = " + existSubsId
    log.info "existRelshpAbbrev = " + existRelshpAbbrev

    //Get Ordering Physician NPI
    def existPhysNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "existPhysNPI = " + existPhysNPI

    //Get Ordered Test Abbrev
    def testInfoList = []
    testInfoList = daoManagerAccnWS.getTestIdFacIdFromAccnTestByAccnId(existAccnId, dbEnv)
    def existTestId = testInfoList[0]
    def existTestAbbrev = daoManagerAccnWS.getTestAbbrevFromTESTByTestId(existTestId, dbEnv)
    log.info "existTestAbbrev = " + existTestAbbrev

    //Get test POS from the component in case of profile
    def existTestFacId = testInfoList[1]
    log.info "existTestFacId = " + existTestFacId
    if (	existTestFacId == "0" ) {
    existTestFacId = daoManagerAccnWS.getFacIdFromACCNTESTByAccnIdProfId(existAccnId, existTestId, dbEnv)
    }
    //Get Test POS
    def existTestPOS = daoManagerAccnWS.getFacAbbrevFromFACByFacId(existTestFacId, dbEnv)
    log.info "existTestPOS = " + existTestPOS

    //Get Accn POS
    def existAccnPOS = daoManagerAccnWS.getPOSFromCLNFACByClnId(existClnId, dbEnv)
    log.info "existAccnPOS = " + existAccnPOS

    //Get Accn Diagnosis Code
    //def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCodeByAccnIdUserDiagOrder(existAccnId, 1, dbEnv)
    def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)
    log.info "existAccnDiagCd = " + existAccnDiagCd

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set new DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClnAbbrev", existClnAbbrev)
    log.info "ClnAbbrev = " + existClnAbbrev

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", newPtEPI)
    log.info "NewEPI = " + newPtEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", newPtFName)
    log.info "NewPtFName = " + newPtFName
    testRunner.testCase.setPropertyValue ("NewPtLName", newPtLName)
    log.info "NewPtLName = " + newPtLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", existSubsId)
    log.info "NewSubsId = " + existSubsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", existPhysNPI)
    log.info "PhysNPI = " + existPhysNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", existTestAbbrev)
    log.info "TestAbbrev = " + existTestAbbrev

    //set accn POS TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnPOS", existAccnPOS)
    log.info "AccnPOS = " + existAccnPOS

    //set test POS TestCase-level value
    testRunner.testCase.setPropertyValue ("TestPOS", existTestPOS)
    log.info "TestPOS = " + existTestPOS

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", existAccnDiagCd)
    log.info "DiagCD = " + existAccnDiagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", existPyrAbbrev)
    log.info "PayorAbbrev = " + existPyrAbbrev

    //set RelshpType TestCase-level value
    testRunner.testCase.setPropertyValue ("Relshp", existRelshpAbbrev)
    log.info "Relshp = " + existRelshpAbbrev

    def newDxCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)
    //set NewDiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDiagCD", newDxCd)
    log.info "NewDiagCD = " + newDxCd


</script></con:config></con:testStep><con:testStep type="request" name="AWS-81:Step2:Accession WS-CreateNewAccession" id="7a506de0-b542-4653-a2ac-03d531b0e4ce"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-81:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="ed75dad7-27e0-4915-a6c9-50d6cc09198d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClnAbbrev}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#TestPOS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#AccnPOS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>${#TestCase#Relshp}</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="7985d778-fc8c-419c-98a1-350cf3e35a75"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="bf1705e2-63c9-484f-92e3-a002fcc1b30f"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="43a20ed6-4d60-4a06-bdf0-fefa57e56420"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-81:Step2:Accession WS-CreateNewAccession#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"


</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-81:Step4:Accession WS-ABNLogic-TestDataSetup" id="85cf9a28-3ea7-4b33-bf04-d0a559c91aa6"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.utils.*;

    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    //

    timeStamp = new TimeStamp();

    def pyrAbbrev = context.expand('${#TestCase#PayorAbbrev}')
    log.info "PayorAbbrev = " + pyrAbbrev

    def accnId = context.expand('${#TestCase#NewAccnID}')
    log.info "AccnID = " + accnId

    def testAbbrev = context.expand('${#TestCase#TestAbbrev}')
    log.info "TestAbbrev = " + testAbbrev

    def accnTestInfo = []
    accnTestInfo = daoManagerAccnWS.getNonProfAccnTestInfoFromACCNTESTByAccnId(accnId, dbEnv)
    def procCd = accnTestInfo[0]
    testRunner.testCase.setPropertyValue ("ProcCD", procCd)
    log.info "ProcCd = " + procCd

    def procTypId = accnTestInfo[1]
    log.info "ProcTypId = " + procTypId

    def effDt = timeStamp.getConvertedDate('yyyy-mm-dd', 'mm/dd/yyyy', context.expand('${#TestCase#NewDOS}'))
    log.info "EffDt = " + effDt

    def diagCd = context.expand('${#TestCase#DiagCD}')
    log.info "DiagCd = " + diagCd

    //Remove all the Payor LC Proc Cd
    def NumOfRows = daoManagerAccnWS.deletePyrLCProcCdFromPYRLCPROCCDByPyrAbrrevProcCd(pyrAbbrev, procCd, dbEnv)
    //log.info "NumOfRows 1= " + NumOfRows

    //Remove all the Payor LC Diag Cd
    NumOfRows = daoManagerAccnWS.deletePyrLCDiagCdFromPYRLCACCPTDIAGCDByPyrAbrrevProcCd(pyrAbbrev, procCd, dbEnv)
    //log.info "NumOfRows 2= " + NumOfRows

    //Set LMTD_COV_ABN_ACTN = 1 (Send to Payor) in PYR table
    NumOfRows = daoManagerAccnWS.setPyrLCABNActnFromPYRByPyrAbrrevLCABNActn(pyrAbbrev, "1", dbEnv)
    //log.info "NumOfRows 3= " + NumOfRows
    assert NumOfRows >=1 : "AWS-81:Step4:Accession WS-ABNLogic-TestDataSetup failed"

    //Add Pyr LC Proc Code
    NumOfRows = daoManagerAccnWS.addPyrLCProcCdFromPYRLCPROCCDByPyrAbbrevProcCdProcTypEffDt(pyrAbbrev, procTypId, procCd, effDt, dbEnv)
    //log.info "NumOfRows 4= " + NumOfRows
    assert NumOfRows >=1 : "AWS-81:Step4:Accession WS-ABNLogic-TestDataSetup failed"

    //Add Pyr LC Diag Code; "1" = Covered
    NumOfRows = daoManagerAccnWS.addPyrLCDiagCdFromPYRLCACCPTDIAGCDByPyrAbbrevProcCdEffDtDiagCdDiagTyp(pyrAbbrev, procCd, effDt, diagCd, "1", dbEnv)
    //log.info "NumOfRows 5= " + NumOfRows
    assert NumOfRows >=1 : "AWS-81:Step4:Accession WS-ABNLogic-TestDataSetup failed"

</script></con:config></con:testStep>

    <con:testStep type="request" name="AWS-81:Step6:Accession WS-UpdateAccession-DeleteDiagCode" id="f0d5f313-02a1-48a0-a0c8-c81465cb7abd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>UpdateAccession</con:operation><con:request name="AWS-81:Step6:Accession WS-UpdateAccession-DeleteDiagCode" wssPasswordType="PasswordDigest" id="3201e8c1-f54b-4859-9deb-1fe84a74dad8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>12345</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>

               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:Deleted>true</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#NewDiagCD}</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:Deleted>false</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f1591431-b9a0-413c-9c9a-cf727b395afb"/><con:assertion type="XPath Match" name="ValidateUpdateAccessionStatus" id="28cbd57b-6517-4d9d-835b-c91c0c4d3467"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep>
    <con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20180808140717742</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-08-08</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-08-08</con:value></con:property><con:property><con:name>ClnAbbrev</con:name><con:value>900</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180808140717742</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEAZAXQ</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEGEGGL</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>585785842A</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1487646444</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>CH1VFRNT</con:value></con:property><con:property><con:name>AccnPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>TestPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>O15.03</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>MCCA</con:value></con:property><con:property><con:name>Relshp</con:name><con:value>18</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property><con:property><con:name>UpdatedPayorAbbrev</con:name><con:value>MDAR</con:value></con:property><con:property><con:name>ProcCD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">71010</con:value></con:property><con:property><con:name>NewDiagCD</con:name><con:value>S34.139A</con:value></con:property></con:properties></con:testCase>

        <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-82:Accession WS-ABN Logic-FixLCNOABNError" searchProperties="true" id="8e4132bd-fddf-4fbf-8024-16c7d22341d9"><con:settings/><con:testStep type="groovy" name="AWS-82:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="55e07966-45c1-47fe-b82f-75a388304c75"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.mars.dao.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    timeStamp = new TimeStamp()
    randomCharacter = new RandomCharacter()
    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())

    //Get an existing Priced 3rd payor accnId and clnId
    def existAccnIdClnIdList = []
    existAccnIdClnIdList = daoManagerAccnWS.getPricedThirdPartyAccnWOErrorFromACCNAndACCNPYR(dbEnv)
    def existAccnId = existAccnIdClnIdList[0]
    log.info "existAccnId = " + existAccnId

    //Get existing cln id
    def existClnId = existAccnIdClnIdList[1]
    def existClnAbbrev = daoManagerXifinRpm.getClientAbbrevIdByClientId(existClnId, dbEnv)
    log.info "existClnAbbrev = " + existClnAbbrev

    //Get timeStamp value
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Generate random ptEPI
    def newPtEPI = "EPI" + currentDateTime
    log.info "newPtEPI = " + newPtEPI

    //Generate random ptFName, ptLName
    def newPtFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def newPtLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    log.info "newPtFName = " + newPtFName
    log.info "newPtLName = " + newPtLName

    //Get existing primary pyr abbrev and subsId and relationship abbrev
    def existPyrInfoList = []
    existPyrInfoList = daoManagerAccnWS.getPyrAbbrevSubsIdRelshpTypFromAccnPyrByAccnIdPyrPrio(existAccnId, "1", dbEnv)
    def existPyrAbbrev = existPyrInfoList[0]
    def existSubsId = existPyrInfoList[1]
    def existRelshpAbbrev = existPyrInfoList[2]
    log.info "existPyrAbbrev = " + existPyrAbbrev
    log.info "existSubsId = " + existSubsId
    log.info "existRelshpAbbrev = " + existRelshpAbbrev

    //Get Ordering Physician NPI
    def existPhysNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "existPhysNPI = " + existPhysNPI

    //Get Ordered Test Abbrev
    def testInfoList = []
    testInfoList = daoManagerAccnWS.getTestIdFacIdFromAccnTestByAccnId(existAccnId, dbEnv)
    def existTestId = testInfoList[0]
    def existTestAbbrev = daoManagerAccnWS.getTestAbbrevFromTESTByTestId(existTestId, dbEnv)
    log.info "existTestAbbrev = " + existTestAbbrev

    //Get test POS from the component in case of profile
    def existTestFacId = testInfoList[1]
    log.info "existTestFacId = " + existTestFacId
    if (	existTestFacId == "0" ) {
    existTestFacId = daoManagerAccnWS.getFacIdFromACCNTESTByAccnIdProfId(existAccnId, existTestId, dbEnv)
    }
    //Get Test POS
    def existTestPOS = daoManagerAccnWS.getFacAbbrevFromFACByFacId(existTestFacId, dbEnv)
    log.info "existTestPOS = " + existTestPOS

    //Get Accn POS
    def existAccnPOS = daoManagerAccnWS.getPOSFromCLNFACByClnId(existClnId, dbEnv)
    log.info "existAccnPOS = " + existAccnPOS

    //Get Accn Diagnosis Code
    //def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCodeByAccnIdUserDiagOrder(existAccnId, 1, dbEnv)
    def existAccnDiagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)
    log.info "existAccnDiagCd = " + existAccnDiagCd

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set new DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClnAbbrev", existClnAbbrev)
    log.info "ClnAbbrev = " + existClnAbbrev

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", newPtEPI)
    log.info "NewEPI = " + newPtEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", newPtFName)
    log.info "NewPtFName = " + newPtFName
    testRunner.testCase.setPropertyValue ("NewPtLName", newPtLName)
    log.info "NewPtLName = " + newPtLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", existSubsId)
    log.info "NewSubsId = " + existSubsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", existPhysNPI)
    log.info "PhysNPI = " + existPhysNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", existTestAbbrev)
    log.info "TestAbbrev = " + existTestAbbrev

    //set accn POS TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnPOS", existAccnPOS)
    log.info "AccnPOS = " + existAccnPOS

    //set test POS TestCase-level value
    testRunner.testCase.setPropertyValue ("TestPOS", existTestPOS)
    log.info "TestPOS = " + existTestPOS

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", existAccnDiagCd)
    log.info "DiagCD = " + existAccnDiagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", existPyrAbbrev)
    log.info "PayorAbbrev = " + existPyrAbbrev

    //set RelshpType TestCase-level value
    testRunner.testCase.setPropertyValue ("Relshp", existRelshpAbbrev)
    log.info "Relshp = " + existRelshpAbbrev

    def newDxCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)
    //set NewDiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDiagCD", newDxCd)
    log.info "NewDiagCD = " + newDxCd


</script></con:config></con:testStep><con:testStep type="request" name="AWS-82:Step2:Accession WS-CreateNewAccession" id="f2fd4aef-a218-4e16-b605-7c87020e0523"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-82:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="d347ced2-d916-4eba-a71f-b22b733a7f4b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClnAbbrev}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#TestPOS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#AccnPOS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>${#TestCase#Relshp}</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="79384798-5240-4c2a-bf10-c4853b8899e1"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="075e17c2-b513-42a9-a548-ab9ce0f6b126"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-82:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="ad4ea124-7400-416f-9cfd-4d111f1154c5"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-81:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-82:Step2:Accession WS-CreateNewAccession#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-82:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"


</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-82:Step4:Accession WS-ABNLogic-TestDataSetup" id="7daec950-a1a4-4129-bfd4-169c5eadb6a6"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.utils.*;

    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //

    timeStamp = new TimeStamp();

    def pyrAbbrev = context.expand('${#TestCase#PayorAbbrev}')
    log.info "PayorAbbrev = " + pyrAbbrev

    def accnId = context.expand('${#TestCase#NewAccnID}')
    log.info "AccnID = " + accnId

    def testAbbrev = context.expand('${#TestCase#TestAbbrev}')
    log.info "TestAbbrev = " + testAbbrev

    def accnTestInfo = []
    accnTestInfo = daoManagerAccnWS.getNonProfAccnTestInfoFromACCNTESTByAccnId(accnId, dbEnv)
    def procCd = accnTestInfo[0]
    testRunner.testCase.setPropertyValue ("ProcCD", procCd)
    log.info "ProcCd = " + procCd

    def procTypId = accnTestInfo[1]
    log.info "ProcTypId = " + procTypId

    def effDt = timeStamp.getConvertedDate('yyyy-mm-dd', 'mm/dd/yyyy', context.expand('${#TestCase#NewDOS}'))
    log.info "EffDt = " + effDt

    def diagCd = context.expand('${#TestCase#DiagCD}')
    log.info "DiagCd = " + diagCd

    //Remove all the Payor LC Proc Cd
    def NumOfRows = daoManagerAccnWS.deletePyrLCProcCdFromPYRLCPROCCDByPyrAbrrevProcCd(pyrAbbrev, procCd, dbEnv)
    //log.info "NumOfRows 1= " + NumOfRows

    //Remove all the Payor LC Diag Cd
    NumOfRows = daoManagerAccnWS.deletePyrLCDiagCdFromPYRLCACCPTDIAGCDByPyrAbrrevProcCd(pyrAbbrev, procCd, dbEnv)
    //log.info "NumOfRows 2= " + NumOfRows

    //Set LMTD_COV_ABN_ACTN = 1 (Send to Payor) in PYR table
    NumOfRows = daoManagerAccnWS.setPyrLCABNActnFromPYRByPyrAbrrevLCABNActn(pyrAbbrev, "1", dbEnv)
    //log.info "NumOfRows 3= " + NumOfRows
    assert NumOfRows >=1 : "AWS-82:Step4:Accession WS-ABNLogic-TestDataSetup failed"

    //Add Pyr LC Proc Code
    NumOfRows = daoManagerAccnWS.addPyrLCProcCdFromPYRLCPROCCDByPyrAbbrevProcCdProcTypEffDt(pyrAbbrev, procTypId, procCd, effDt, dbEnv)
    //log.info "NumOfRows 4= " + NumOfRows
    assert NumOfRows >=1 : "AWS-82:Step4:Accession WS-ABNLogic-TestDataSetup failed"

    //Add Pyr LC Diag Code; "1" = Covered
    NumOfRows = daoManagerAccnWS.addPyrLCDiagCdFromPYRLCACCPTDIAGCDByPyrAbbrevProcCdEffDtDiagCdDiagTyp(pyrAbbrev, procCd, effDt, diagCd, "1", dbEnv)
    //log.info "NumOfRows 5= " + NumOfRows
    assert NumOfRows >=1 : "AWS-82:Step4:Accession WS-ABNLogic-TestDataSetup failed"

</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-82:Step5:Accession WS-ClearSystemDataCache-SystemSetupUI" id="6cdda831-5c9e-4219-b718-f24a7b96142d"><con:settings/><con:config><script>import com.rpm.tests.*;
    import com.xifin.utils.*
    import com.xifin.mars.dao.*

    import com.xifin.qa.config.*;
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info "newAccnId = " + newAccnId

    def Env = context.expand('${#Project#Env}')
    log.info "Env = " + Env

    def OrgAlias = context.expand('${#Project#OrgAlias}')
    log.info "OrgAlias = " + OrgAlias

    def xapEnv = context.expand('${#Project#xapEnv}')
    log.info "xapEnv = " + xapEnv

    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())
    sysCall = new SystemCall()

    //Detect OS: windows or unix
    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=clearSystemDataCache -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -Dendpoint")
    def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/clearRPMDataCache -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DxapEnv=${xapEnv} -Dendpoint")
    log.info "retval = " + retval

    //Verify process completed successfully
    assert retval == 0 : "AWS-82:Step5:Accession WS-ClearSystemDataCache-SystemSetupUI Failed"



</script></con:config></con:testStep><con:testStep type="request" name="AWS-82:Step6:Accession WS-UpdateAccession-DeleteDiagCode" id="1af2b53c-b9e9-4189-b649-8d7f74fbee49"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>UpdateAccession</con:operation><con:request name="AWS-82:Step6:Accession WS-UpdateAccession-DeleteDiagCode" wssPasswordType="PasswordDigest" id="336a2cde-bc57-410f-b2da-29b5fcc1f512"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>12345</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>

               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:Deleted>true</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#NewDiagCD}</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:Deleted>false</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe6dca6b-d52a-4cc4-950a-4d9789bbb6d8"/><con:assertion type="XPath Match" name="ValidateUpdateAccessionStatus" id="967c0ab8-2baa-48d5-a497-b7ec55455854"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-82:Step7:Accession WS-PriceAccession-SystemSetupUI" id="a18684ff-7a03-4e6d-8cd5-00c0c18bd16a"><con:settings/><con:config><script>import com.rpm.tests.*;
    import com.xifin.utils.*
    import com.xifin.mars.dao.*

    import com.xifin.qa.config.*;
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info "newAccnId = " + newAccnId

    def Env = context.expand('${#Project#Env}')
    log.info "Env = " + Env

    def OrgAlias = context.expand('${#Project#OrgAlias}')
    log.info "OrgAlias = " + OrgAlias

    def eType1 = context.expand('${#Project#eType1}')
    log.info "eType1 = " + eType1

    def eType2 = context.expand('${#Project#eType2}')
    log.info "eType2 = " + eType2

    def xapEnv = context.expand('${#Project#xapEnv}')
    log.info "xapEnv = " + xapEnv

    def engConfigDB = context.expand('${#Project#engConfigDB}')
    log.info "engConfigDB = " + engConfigDB

    def hasLoggedIn = context.expand('${#Project#hasLoggedIn}')
    log.info "hasLoggedIn = " + hasLoggedIn

    daoManagerXifinRpm = new DaoManagerXifinRpm(configuration.getRpmDatabase())
    sysCall = new SystemCall()

    //Detect OS: windows or unix
    //def retval = sysCall.setShellCmd("mvn test -DtestSuite=priceAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -Dendpoint")
    def retval = sysCall.setShellCmd("mvn test -DtestSuite=mars/priceAnAccn -DaccnId=${newAccnId} -Denv=${Env} -DtestDb=${dbEnv} -DorgAlias=${OrgAlias} -DeType1=${eType1} -DeType2=${eType2} -DxapEnv=${xapEnv} -DengConfigDB=${engConfigDB} -DhasLoggedIn=${hasLoggedIn} -Dendpoint")
    log.info "retval = " + retval

    //Verify process completed successfully
    assert retval == 0 : "AWS-81:Step7:Accession WS-UpdateAccession-SystemSetupUI Failed"

    //Verify that the accn status = 21 (Priced)
    def accnStatusId = daoManagerXifinRpm.getStatusIdByAccnId(newAccnId, dbEnv)
    log.info "accnStatusId = " + accnStatusId
    assert accnStatusId == 21 : "AWS-81:Step7:Accession WS-UpdateAccession-SystemSetupUI Failed due to the accn was not priced"

</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-82:Step8:Accession WS-PriceAccession-VerifyLCNOABNErrorGeneratedInDB" id="bad11d56-292b-48db-be0d-a7d84851921e"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    //import com.xifin.mars.dao.*;
    import com.xifin.utils.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    def updatedAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info "UpdatedAccnId = " + updatedAccnId

    def procCd = context.expand('${#TestCase#ProcCD}')
    log.info "ProcCd = " + procCd

    //def errDt = context.expand('${#TestCase#NewDOS}')
    timeStamp = new TimeStamp();
    def errDt = timeStamp.getConvertedDate('yyyy-mm-dd', 'mm/dd/yyyy', context.expand('${#TestCase#NewDOS}'))
    log.info "ErrDt = " + errDt

    def pyrAbbrev = context.expand('${#TestCase#PayorAbbrev}')
    log.info "PayorAbbrev = " + pyrAbbrev

    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())

    //======== Verify that LCNOABN accn proc error was generated after delete the Diag Code
    // "1294" = LCNOABN error code
    def procErrListInDB = []
    procErrListInDB = daoManagerAccnWS.getAccnProcErrInfoFromACCNPROCERRByAccnIdErrCdErrDtProcId(updatedAccnId,"1294", errDt, procCd, dbEnv)
    log.info "procErrListInDB.size = " + procErrListInDB.size
    //Compare the size of the List, if not match returns test failed
    assert procErrListInDB.size >= 1: "AWS-81:Step8:Accession WS-UpdateAccession-DeleteDiagCode-VerifyLCNOABNErrorGeneratedInDB failed"

    //Remove all the Payor LC Proc Cd
    //daoManagerAccnWS.deletePyrLCProcCdFromPYRLCPROCCDByPyrAbrrevProcCd(pyrAbbrev, procCd, dbEnv)

    //Remove all the Payor LC Diag Cd
    //daoManagerAccnWS.deletePyrLCDiagCdFromPYRLCACCPTDIAGCDByPyrAbrrevProcCd(pyrAbbrev, procCd, dbEnv)


</script></con:config></con:testStep><con:testStep type="request" name="AWS-82:Step9:Accession WS-UpdateAccession-AddDiagCode" id="aecff97b-5f5d-442d-b823-d21d4aca1151"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>UpdateAccession</con:operation><con:request name="AWS-82:Step9:Accession WS-UpdateAccession-AddDiagCode" wssPasswordType="PasswordDigest" id="8b914bd8-8e92-4b56-86ea-7cf9ba74fb69"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:UpdateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>12345</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
                  <!--Optional:-->
                  <acc:Deleted>false</acc:Deleted>
               </acc:AccessionLevelDiagnosisCodes>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe90092f-8e26-456b-964a-1694cab870c0"/><con:assertion type="XPath Match" name="ValidateUpdateAccessionStatus" id="cc47055e-2f2e-41c1-8ae5-515c2c83796e"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d431c098-d994-4e98-8a64-9851edd5ea2b"><con:settings/><con:config><delay>15000</delay></con:config></con:testStep><con:testStep type="groovy" name="AWS-82:Step10:Accession WS-PriceAccession-VerifyLCNOABNErrorFixedInDB" id="0518cd91-c62f-4b71-98a9-46ea379d6178"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.utils.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    def updatedAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info "UpdatedAccnId = " + updatedAccnId

    def procCd = context.expand('${#TestCase#ProcCD}')
    log.info "ProcCd = " + procCd

    //def errDt = context.expand('${#TestCase#NewDOS}')
    timeStamp = new TimeStamp();
    def errDt = timeStamp.getConvertedDate('yyyy-mm-dd', 'mm/dd/yyyy', context.expand('${#TestCase#NewDOS}'))
    log.info "ErrDt = " + errDt

    def pyrAbbrev = context.expand('${#TestCase#PayorAbbrev}')
    log.info "PayorAbbrev = " + pyrAbbrev

    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    //======== Verify that LCNOABN accn proc error was generated after delete the Diag Code
    // "1294" = LCNOABN error code
    def procErrListInDB = []
    procErrListInDB = daoManagerAccnWS.getAccnProcErrInfoFromACCNPROCERRByAccnIdErrCdErrDtProcId(updatedAccnId,"1294", errDt, procCd, dbEnv)

    Date dt = new Date()
    def fixedDt = dt.parse("yyyy-MM-dd hh:mm:ss", procErrListInDB[0]).format("yyyy-MM-dd")
    log.info "The fixed date for LCNOABN Error for Proc Code " + procCd + " = " + fixedDt
    //Compare the error fixed date, if not match returns test failed
    assert fixedDt == context.expand('${#TestCase#NewDOS}'): "AWS-82:Step10:Accession WS-UpdateAccession-DeleteDiagCode-VerifyLCNOABNErrorFixedInDB failed"

    //Remove all the Payor LC Proc Cd
    daoManagerAccnWS.deletePyrLCProcCdFromPYRLCPROCCDByPyrAbrrevProcCd(pyrAbbrev, procCd, dbEnv)

    //Remove all the Payor LC Diag Cd
    daoManagerAccnWS.deletePyrLCDiagCdFromPYRLCACCPTDIAGCDByPyrAbrrevProcCd(pyrAbbrev, procCd, dbEnv)


</script></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20180124163847724</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-01-24</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-01-24</con:value></con:property><con:property><con:name>ClnAbbrev</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180124163847724</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEPVQFT</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMENSAYG</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A914022193</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1447222641</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>AccnPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>TestPOS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>T37.91XA</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>WELLEXAM</con:value></con:property><con:property><con:name>Relshp</con:name><con:value>18</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property><con:property><con:name>UpdatedPayorAbbrev</con:name><con:value>MDAR</con:value></con:property><con:property><con:name>ProcCD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">82947</con:value></con:property><con:property><con:name>NewDiagCD</con:name><con:value>S62.655B</con:value></con:property></con:properties></con:testCase>
        <con:properties/>

    </con:testSuite>
    <con:testSuite name="Patient Payment History WS" id="c79b6447-9d81-44ba-bebb-95f99e54cdde"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-84:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValidData" searchProperties="true" id="79e25078-ac58-4601-a37d-58bcb646a042"><con:settings/><con:testStep type="groovy" name="AWS-84:Step1:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValiddata-SetupData" id="a491facb-8b51-4141-bbc8-17a7be508fc5"><con:settings/><con:config><script>import com.xifin.accnws.dao.DaoManagerAccnWS;
    import com.xifin.utils.*;

    import com.xifin.qa.config.*;
    /*get dbEnv project value*/
    //def dbEnv = testRunner.testCase.project.getPropertyValue("dbEnv")
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    log.info dbEnv

    /*----------Setup Data----------*/
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase());
    timeStamp = new TimeStamp()
    Date date = new Date();

    /* Get PatientID */

    def patientID = daoAccnWS.getRandomPatientIDFromWS_ACCN_PP_V(dbEnv)
    log.info "patientID : $patientID"
    testRunner.testCase.setPropertyValue("patientID", patientID)

    /* Get DateFrom */
    def dtFrom = daoAccnWS.getMinDateAndMaxDateFromWS_ACCN_PP_V(dbEnv).get(0);
    log.info "dtFrom : $dtFrom"
    testRunner.testCase.setPropertyValue("dtFrom", dtFrom)

    /* Get DateTo */
    def dtTo = daoAccnWS.getMinDateAndMaxDateFromWS_ACCN_PP_V(dbEnv).get(1);
    log.info "dtTo : $dtTo"
    testRunner.testCase.setPropertyValue("dtTo", dtTo)</script></con:config></con:testStep><con:testStep type="request" name="AWS-84:Step2:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValiddata-SendRequest" id="2151eb3f-2380-4306-a52d-8bcd3a756dbd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>patientPaymentHistorySoap11</con:interface><con:operation>PatientPaymentHistory</con:operation><con:request name="AWS-84:Step2:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValiddata-SendRequest" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="43108cda-c1b3-4317-bd4f-774d1216bb0d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPaymentHistory" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:PatientPaymentHistoryRequest>
         <msg:MessageHeader>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientPaymentHistoryRequestMessage>
               <pat:PatientId>${#TestCase#patientID}</pat:PatientId>
               <pat:DateFrom>${#TestCase#dtFrom}</pat:DateFrom>
               <pat:DateTo>${#TestCase#dtTo}</pat:DateTo>
            </pat:PatientPaymentHistoryRequestMessage>
         </pat:Payload>
      </pat:PatientPaymentHistoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9f6002ec-af2d-4ed6-84ff-8143946707c5" name="SOAP Response"/><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPaymentHistory/patientPaymentHistory/PatientPaymentHistoryRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-84:Step3:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValiddata-VerifyData" id="7cd52b8a-fa87-4626-9745-2c21e3061d24"><con:settings/><con:config><script>import com.xifin.accnws.dao.DaoManagerAccnWS;
    import com.xifin.utils.*;

    import com.xifin.qa.config.*;
    /*get dbEnv project value*/
    //def dbEnv = testRunner.testCase.project.getPropertyValue("dbEnv")
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    log.info dbEnv

    /*----------Setup Data----------*/
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase());
    timeStamp = new TimeStamp()
    Date date = new Date();

    /* Get PatientID */

    def patientID = testRunner.testCase.getPropertyValue("patientID")
    def dtFrom    = testRunner.testCase.getPropertyValue("dtFrom")
    def dtTo      = testRunner.testCase.getPropertyValue("dtTo")

    def listHistory = []
    listHistory = daoAccnWS.getPatientPaymentHistoryFromWS_ACCN_PP_VAndaccn_pmtByPatientID(patientID,dtFrom,dtTo, dbEnv)
    log.info "listHistory = " + listHistory
    //******************
    // === Create GroovyUtils and XmlHoder for response===
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def holder = groovyUtils.getXmlHolder("AWS-84:Step2:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValiddata-SendRequest#Response")

    // If the desired content is namespace qualified(very likely for SOAP response), you need too define the namspace first
    holder.namespaces["ns4"] = "http://www.xifin.com/schema/patientPaymentHistory"
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    // define Array
    def listDOSResp    = []
    def listPmtDueResp = []
    def listPmtAmtResp = []
    def listPaidDtResp = []

    def listDOSDB    = []
    def listPmtDueDB = []
    def listPmtAmtDB = []
    def listPaidDtDB = []

    // Loop through the nodes in response message and add the nodes values into a list =
    for (def i = 0;i&lt;listHistory.size();i++){
    listDOSResp[i]    = holder.getNodeValue("//ns4:PatientPaymentHistoryResponseMessage["+(i+1)+"]/ns4:DateOfService[1]/text()")
    listPmtDueResp[i] = holder.getNodeValue("//ns4:PatientPaymentHistoryResponseMessage["+(i+1)+"]/ns4:PaymentDue[1]/text()")
    listPmtAmtResp[i] = holder.getNodeValue("//ns4:PatientPaymentHistoryResponseMessage["+(i+1)+"]/ns4:PaymentAmount[1]/text()")
    listPaidDtResp[i] = holder.getNodeValue("//ns4:PatientPaymentHistoryResponseMessage["+(i+1)+"]/ns4:PaidDate[1]/text()")

    def listDetail = listHistory.get(i)
    listDOSDB[i]    = listDetail[0]
    listPmtDueDB[i] = listDetail[1]
    listPmtAmtDB[i] = listDetail[2]
    listPaidDtDB[i] = listDetail[3]
    }

    //=== Compare data between Response and database
    listUtil = new ListUtil()

    //Compare Date Of Service
    log.info "listDOSResp : " + listDOSResp
    log.info "listDOSDB    : " + listDOSDB
    def compareResult = listUtil.compareLists(listDOSResp, listDOSDB)
    assert compareResult == true: "AWS-84:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValiddata failed"

    //Compare Payment Due
    log.info "listPmtDueResp : " + listPmtDueResp
    log.info "listPmtDueDB    : " + listPmtDueDB
    compareResult = listUtil.compareLists(listPmtDueResp, listPmtDueDB)
    assert compareResult == true: "AWS-84:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValiddata failed"

    //Compare Payment Amount
    log.info "listPmtAmtResp : " + listPmtAmtResp
    log.info "listPmtAmtDB  : " + listPmtAmtDB
    compareResult = listUtil.compareLists(listPmtAmtResp, listPmtAmtDB)
    assert compareResult == true: "AWS-84:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValiddata failed"

    //Compare Date Of Service
    log.info "listPaidDtResp : " + listPaidDtResp
    log.info "listPaidDtDB    : " + listPaidDtDB
    compareResult = listUtil.compareLists(listPaidDtResp, listPaidDtDB)
    assert compareResult == true: "AWS-84:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithValiddata failed"</script></con:config></con:testStep><con:properties><con:property><con:name>patientID</con:name><con:value>8039495</con:value></con:property><con:property><con:name>dtFrom</con:name><con:value>2011-06-27</con:value></con:property><con:property><con:name>dtTo</con:name><con:value>2017-08-24</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-85:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithNoSearchResults" searchProperties="true" id="e21f8347-69c8-47f5-b412-6af115932292"><con:settings/><con:testStep type="groovy" name="AWS-85:Step1:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithDate-SetupData" id="8900827c-8cbc-4d72-abe8-da70e0541c54"><con:settings/><con:config><script>import com.xifin.accnws.dao.DaoManagerAccnWS;
    import com.xifin.utils.*;
    import com.xifin.qa.config.*;
    import groovy.time.TimeCategory

    /*get dbEnv project value*/
    //def dbEnv = testRunner.testCase.project.getPropertyValue("dbEnv")
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    log.info dbEnv

    /*----------Setup Data----------*/
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase());
    timeStamp = new TimeStamp()
    Date date = new Date();

    /* Get PatientID */
    def patientID = daoAccnWS.getRandomPatientIDFromWS_ACCN_PP_V(dbEnv)
    log.info "patientID : $patientID"
    testRunner.testCase.setPropertyValue("patientID", patientID)


    /* Get DateFrom */
    def dtDB = Date.parse("yyyy-MM-dd" , (daoAccnWS.getMinDateAndMaxDateFromWS_ACCN_PP_V(dbEnv).get(0)));
    log.info "dtFromCorrect : $dtDB"
    def dtFrom = "";
    use(TimeCategory) {
    dtFrom = (dtDB - 10.year).format('yyyy-MM-dd')
    }
    log.info "dtFrom : $dtFrom"
    testRunner.testCase.setPropertyValue("dtFrom", dtFrom)


    /* Get DateTo */
    def dtTo = ""
    //dtTo = timeStamp.getCurrentDate('yyyy-MM-dd')
    use(TimeCategory) {
    dtTo = (dtDB - 20.year).format('yyyy-MM-dd')
    }
    log.info "dtTo : $dtTo"
    testRunner.testCase.setPropertyValue("dtTo", dtTo)

</script></con:config></con:testStep><con:testStep type="request" name="AWS-85:Step2:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithDate-SendRequest" id="d9445981-91b0-48b9-b849-b55d223534ec"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>patientPaymentHistorySoap11</con:interface><con:operation>PatientPaymentHistory</con:operation><con:request name="AWS-85:Step2:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithDate-SendRequest" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="43108cda-c1b3-4317-bd4f-774d1216bb0d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPaymentHistory" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:PatientPaymentHistoryRequest>
         <msg:MessageHeader>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientPaymentHistoryRequestMessage>
               <pat:PatientId>${#TestCase#patientID}</pat:PatientId>
               <pat:DateFrom>${#TestCase#dtFrom}</pat:DateFrom>
               <pat:DateTo>${#TestCase#dtTo}</pat:DateTo>
            </pat:PatientPaymentHistoryRequestMessage>
         </pat:Payload>
      </pat:PatientPaymentHistoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9f6002ec-af2d-4ed6-84ff-8143946707c5" name="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match" id="6ee46190-98b7-430d-8b76-7ec55c477458"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientPaymentHistory';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    contains(//ns4:Payload,empty)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPaymentHistory/patientPaymentHistory/PatientPaymentHistoryRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-85:Step3:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithDate-Verification" disabled="true" id="21d6a01f-d996-40ea-bed4-52c49f25d639"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //===Get Project-level property value===
    //def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //===Get TestCase-level property values===
    def epi = testRunner.testCase.getPropertyValue ("patientID")
    log.info "epi = " + epi
    def dateFrom = testRunner.testCase.getPropertyValue ("dtFrom")
    log.info "dateFrom = " + dateFrom
    def dateTo = testRunner.testCase.getPropertyValue ("dtTo")
    log.info "dateTo = " + dateTo

    //===Get data InDB===
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def dosListInDB = []
    def dueAmtListInDB = []
    def paidAmtListInDB = []
    def pmtDtListInDB = []

    def ptPmtHistListInDB = []
    ptPmtHistListInDB = daoManagerAccnWS.getPtPmHistFromWSACCNPPVByEPIAndDate(epi, dateFrom, dateTo, dbEnv)
    log.info "ptPmtHistListInDB = " + ptPmtHistListInDB

    for (int i=0; i&lt;ptPmtHistListInDB.size; i++)
    {
    dosListInDB[i] = ptPmtHistListInDB[i][0]
    dueAmtListInDB[i] = ptPmtHistListInDB[i][1]
    paidAmtListInDB[i] = ptPmtHistListInDB[i][2]
    pmtDtListInDB[i] = ptPmtHistListInDB[i][3]

    }
    log.info "dosListInDB = " + dosListInDB
    log.info "dueAmtListInDB = " + dueAmtListInDB
    log.info "paidAmtListInDB = " + paidAmtListInDB
    log.info "pmtDtListInDB = " + pmtDtListInDB

    //===Create groovyUtils and XmlHolder for response===
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-85:Step2:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithDate-SendRequest#Response" )

    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"
    holder.namespaces["ns4"] = "http://www.xifin.com/schema/patientPaymentHistory"

    def dosListInResponse = []
    def dueAmtListInResponse = []
    def paidAmtListInResponse = []
    def pmtDtListInResponse = []

    for( item in holder.getNodeValues( "//ns4:DateOfService" ))
    {
    dosListInResponse.add(item)
    }
    log.info "dosListInResponse = " + dosListInResponse

    for( item in holder.getNodeValues( "//ns4:PaymentDue" ))
    {
    dueAmtListInResponse.add(item)
    }
    log.info "dueAmtListInResponse = " + dueAmtListInResponse

    for( item in holder.getNodeValues( "//ns4:PaymentAmount" ))
    {
    paidAmtListInResponse.add(item)
    }
    log.info "paidAmtListInResponse = " + paidAmtListInResponse

    for( item in holder.getNodeValues( "//ns4:PaidDate" ))
    {
    pmtDtListInResponse.add(item)
    }
    log.info "pmtDtListInResponse = " + pmtDtListInResponse

    //===Compare the two lists===
    listUtil = new ListUtil()

    def compareDOSResult = listUtil.compareLists(dosListInDB, dosListInResponse)
    log.info "compareDOSResult = " + compareDOSResult
    assert compareDOSResult == true: "AWS-85:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithDate was failed due to DateOfService are not matching in DB and in Response."

    def compareDueAmtResult = listUtil.compareLists(dueAmtListInDB, dueAmtListInResponse)
    log.info "compareDueAmtResult = " + compareDueAmtResult
    assert compareDueAmtResult == true: "AWS-85:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithDate was failed due to PaymentDue are not matching in DB and in Response."

    def comparePaidAmtResult = listUtil.compareLists(paidAmtListInDB, paidAmtListInResponse)
    log.info "comparePaidAmtResult = " + comparePaidAmtResult
    assert comparePaidAmtResult == true: "AWS-85:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithDate was failed due to PaymentAmount are not matching in DB and in Response."

    def comparePaidDtResult = listUtil.compareLists(pmtDtListInDB, pmtDtListInResponse)
    log.info "comparePaidDtResult = " + comparePaidDtResult
    assert comparePaidDtResult == true: "AWS-85:AccessionWS-PatientPaymentHistory-GetPaymentHistoryWithDate was failed due to PaidDate are not matching in DB and in Response."

</script></con:config></con:testStep><con:properties><con:property><con:name>patientID</con:name><con:value>7645573</con:value></con:property><con:property><con:name>dtFrom</con:name><con:value>2001-06-27</con:value></con:property><con:property><con:name>dtTo</con:name><con:value>1991-06-27</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-86:AccessionWS-PatientPaymentHistory-GetHistoryWithInvalidPatientId" searchProperties="true" id="b5e1396b-96c1-4ea7-9583-eda28c0dff8e"><con:settings/><con:testStep type="groovy" name="AWS-86:Step1:AccessionWS-PatientPaymentHistory-GetHistoryWithInvalidPatientId-SetupData" id="1cd8ce59-4168-4257-be6a-337c049d11d7"><con:settings/><con:config><script>import com.xifin.accnws.dao.DaoManagerAccnWS;
    import com.xifin.utils.*;

    import com.xifin.qa.config.*;
    /*get dbEnv project value*/
    //def dbEnv = testRunner.testCase.project.getPropertyValue("dbEnv")
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    log.info dbEnv

    /*----------Setup Data----------*/
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase());
    timeStamp = new TimeStamp()
    Date date = new Date();

    /* Get PatientID */

    def patientID = daoAccnWS.getRandomPatientIDFromWS_ACCN_PP_V(dbEnv) + "auto"
    log.info "patientID : $patientID"
    testRunner.testCase.setPropertyValue("patientID", patientID)

    /* Get DateFrom */
    def dtFrom = daoAccnWS.getMinDateAndMaxDateFromWS_ACCN_PP_V(dbEnv).get(0);
    log.info "dtFrom : $dtFrom"
    testRunner.testCase.setPropertyValue("dtFrom", dtFrom)

    /* Get DateTo */
    def dtTo = daoAccnWS.getMinDateAndMaxDateFromWS_ACCN_PP_V(dbEnv).get(1);
    log.info "dtTo : $dtTo"
    testRunner.testCase.setPropertyValue("dtTo", dtTo)</script></con:config></con:testStep><con:testStep type="request" name="AWS-86:Step2:AccessionWS-PatientPaymentHistory-GetHistoryWithInvalidPatientId-SendRequest" id="140ac7db-82f7-4f5f-aa98-31bc180b2157"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>patientPaymentHistorySoap11</con:interface><con:operation>PatientPaymentHistory</con:operation><con:request name="AWS-86:Step2:AccessionWS-PatientPaymentHistory-GetHistoryWithInvalidPatientId-SendRequest" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="43108cda-c1b3-4317-bd4f-774d1216bb0d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pat="http://www.xifin.com/schema/patientPaymentHistory" xmlns:msg="http://www.xifin.com/schema/msgHeader">
   <soapenv:Header/>
   <soapenv:Body>
      <pat:PatientPaymentHistoryRequest>
         <msg:MessageHeader>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <pat:Payload>
            <pat:PatientPaymentHistoryRequestMessage>
               <pat:PatientId>${#TestCase#patientID}</pat:PatientId>
               <pat:DateFrom>${#TestCase#dtFrom}</pat:DateFrom>
               <pat:DateTo>${#TestCase#dtTo}</pat:DateTo>
            </pat:PatientPaymentHistoryRequestMessage>
         </pat:Payload>
      </pat:PatientPaymentHistoryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9f6002ec-af2d-4ed6-84ff-8143946707c5" name="SOAP Response"/><con:assertion type="XPath Match" id="05254306-2d71-4315-b397-91a4b4d41fab" name="XPath Match"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/patientPaymentHistory';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';

    contains(//ns4:Payload,empty)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/patientPaymentHistory/patientPaymentHistory/PatientPaymentHistoryRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>patientID</con:name><con:value>9436441auto</con:value></con:property><con:property><con:name>dtFrom</con:name><con:value>2011-06-27</con:value></con:property><con:property><con:name>dtTo</con:name><con:value>2017-08-24</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="e8801835-fadd-4858-a51f-d56a7377d86c" name="AccessionREST-accession-GET"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4ca37ab1-6a18-444f-a8d0-8a95eac4ae7e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-169:AccessionREST-accession-GET-Send XML Return JSON" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AWS-169:Step1:TestDataSetup" id="d1068306-56ce-4d9a-bde2-dab14cb24696"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //======== Get values =========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get AccnID1 value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def accnId = daoManagerAccnWS.getExistingAccnId(dbEnv)

    //======== Set TestCase level property values ========
    //Set AccnID1 TestCase-level value
    testRunner.testCase.setPropertyValue ("accnId", accnId)
    log.info "accnId=" + accnId

    //Set PtFName TestCase-level value
    def ptFName = daoManagerAccnWS.getFnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("ptFName", ptFName)
    log.info "ptFName = " + ptFName

    //Set PtLName TestCase-level value
    def ptLName = daoManagerAccnWS.getLnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("ptLName", ptLName)
    log.info "ptLName = " + ptLName

    //Set PtDOB TestCase-level value
    def ptDOB = daoManagerAccnWS.getDobByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("ptDOB", ptDOB)
    log.info "ptDOB = " + ptDOB

    //Set AccnDOS TestCase-level value
    def accnDOS = daoManagerAccnWS.getDOSByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("accnDOS", accnDOS)
    log.info "accnDOS = " + accnDOS</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-169:Step2:REST Request-ReturnJSON" id="d7157431-2dab-4f40-ad94-c171fbfa9314"><con:settings/><con:config service="accnREST" resourcePath="/${#Project#RESTresource}/accession" methodName="accession-GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-169:Step2:REST Request-ReturnJSON" id="4712133e-d5ab-4a58-9530-f9e0e033f9aa" mediaType="application/json" postQueryString="false" sslKeystore=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request/><con:originalUri>https://www.xifinqa.com/prod/accession912/restful/accession</con:originalUri><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
    <con:entry key="accessionId" value="${#TestCase#accnId}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry><con:entry>accessionId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="AWS-169:Step3:VerifyJSONResponse" id="07620741-f47f-4eb6-9015-ad02cd52e6cc"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
    import groovy.json.JsonSlurper

    //Get the response
    def response = context.expand('${AWS-169:Step2:REST Request-ReturnJSON#Response}').toString()
    //log.info(response)

    //Parse the JSON response
    def slurper = new JsonSlurper()
    def json = slurper.parseText response

    //Verify accnId
    def accnIdInResponse = json.payload.getAccessionResponseMessage.accessionId
    log.info("accnIdInResponse = " + accnIdInResponse)
    assert accnIdInResponse == context.expand('${#TestCase#accnId}') : "AWS-169:AccessionREST-accession-GET-Return JSON failed"

    //Verify accnDOS
    def accnDOSInResponse = json.payload.getAccessionResponseMessage.dateOfService
    log.info("accnDOSInResponse = " + accnDOSInResponse)
    assert accnDOSInResponse == context.expand('${#TestCase#accnDOS}') : "AWS-169:AccessionREST-accession-GET-Return JSON failed"

    //Verify Pt fName
    def ptFNameInResponse = json.payload.getAccessionResponseMessage.patientInfo.person.name.firstName
    log.info("ptFNameInResponse = " + ptFNameInResponse)
    assert ptFNameInResponse == context.expand('${#TestCase#PtFname}') : "AWS-169:AccessionREST-accession-GET-Return JSON failed"

    //Verify Pt lName
    def ptLNameInResponse = json.payload.getAccessionResponseMessage.patientInfo.person.name.lastName
    log.info("ptLNameInResponse = " + ptLNameInResponse)
    assert ptLNameInResponse == context.expand('${#TestCase#PtLname}') : "AWS-169:AccessionREST-accession-GET-Return JSON failed"

    //Verify Pt DOB
    def ptDOBInResponse = json.payload.getAccessionResponseMessage.patientInfo.person.dateOfBirth
    log.info("ptDOBInResponse = " + ptDOBInResponse)
    assert ptDOBInResponse == context.expand('${#TestCase#PtDOB}') : "AWS-169:AccessionREST-accession-GET-Return JSON failed"</script></con:config></con:testStep><con:properties><con:property><con:name>accnId</con:name><con:value>QATESTER20171012022551142</con:value></con:property><con:property><con:name>accnDOS</con:name><con:value>2017-10-12</con:value></con:property><con:property><con:name>ptFName</con:name><con:value>PTFNAMEXSIQM</con:value></con:property><con:property><con:name>ptLName</con:name><con:value>PTLNAMEQIWTW</con:value></con:property><con:property><con:name>ptDOB</con:name><con:value>1987-10-12</con:value></con:property></con:properties></con:testCase><con:testCase id="785857b6-77df-4329-ab77-791c2e5014fe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-195:AccessionREST-accession-GET-Namespaces check" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AWS-195:Step1:TestDataSetup" id="f71ff655-778a-40c3-b311-733d932de292"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //======== Get values =========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get AccnID1 value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def accnId = daoManagerAccnWS.getExistingAccnId(dbEnv)

    //======== Set TestCase level property values ========
    //Set AccnID1 TestCase-level value
    testRunner.testCase.setPropertyValue ("accnId", accnId)
    log.info "accnId=" + accnId

    //Set PtFName TestCase-level value
    def ptFName = daoManagerAccnWS.getFnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("ptFName", ptFName)
    log.info "ptFName = " + ptFName

    //Set PtLName TestCase-level value
    def ptLName = daoManagerAccnWS.getLnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("ptLName", ptLName)
    log.info "ptLName = " + ptLName

    //Set PtDOB TestCase-level value
    def ptDOB = daoManagerAccnWS.getDobByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("ptDOB", ptDOB)
    log.info "ptDOB = " + ptDOB

    //Set AccnDOS TestCase-level value
    def accnDOS = daoManagerAccnWS.getDOSByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("accnDOS", accnDOS)
    log.info "accnDOS = " + accnDOS</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-195:Step2:REST Request-Namespaces check" id="67446cea-c141-4038-9383-caa970090af1"><con:settings/><con:config service="accnREST" resourcePath="/${#Project#RESTresource}/accession" methodName="accession-GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-195:Step2:REST Request-Namespaces check" id="4712133e-d5ab-4a58-9530-f9e0e033f9aa" mediaType="application/json" postQueryString="false" sslKeystore=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request/><con:originalUri>https://www.xifinqa.com/prod/accession912/restful/accession</con:originalUri><con:assertion type="XPath Match" id="1496fdc3-c657-448f-9838-9b7a8915a8a7" name="Namespace-ns3-check"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accession';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('ns3', //ns3:Payload[1]/ns3:GetAccessionResponseMessage[1]/ns3:PatientInfo[1]/ns3:Person[1]/ns2:Name[1]/ns2:LastName[1])</path><content>http://www.xifin.com/schema/accession</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="1496fdc3-c657-448f-9838-9b7a8915a8a7" name="Namespace-ns2-check"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accession';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';

    namespace-uri-for-prefix('ns2', //ns3:Payload[1]/ns3:GetAccessionResponseMessage[1]/ns3:PatientInfo[1]/ns3:Person[1]/ns2:Name[1]/ns2:LastName[1])</path><content>http://www.xifin.com/schema/types</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="1496fdc3-c657-448f-9838-9b7a8915a8a7" name="Namespace-default-check"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accession';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    namespace-uri-for-prefix('', //ns3:GetAccessionResponse[1])</path><content>http://www.xifin.com/schema/msgHeader</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
    <con:entry key="accessionId" value="${#TestCase#accnId}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry><con:entry>accessionId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>accnId</con:name><con:value>A2013032702030233</con:value></con:property><con:property><con:name>accnDOS</con:name><con:value>2013-03-27</con:value></con:property><con:property><con:name>ptFName</con:name><con:value>RYAN</con:value></con:property><con:property><con:name>ptLName</con:name><con:value>CONNER</con:value></con:property><con:property><con:name>ptDOB</con:name><con:value>1950-11-07</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="9d8c15b4-c2c6-4654-961f-f8e213e60562" name="AccessionREST-createAccession-POST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a6927b61-d73a-4720-9ead-80ad7965a03c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-170:AccessionREST-createAccession-POST-Send XML Return XML" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AWS-170:Step1:TestDataSetup" id="bf0d6ba9-7a95-48f7-9ee8-94510e935cab"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + randomCharacter.getRandomAlphaString(5) + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + randomCharacter.getRandomAlphaString(5) + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-170:Step2:REST Request-ReturnXML-ResponseAndNamespacesExactMatch" id="a8d2f874-765f-49fb-b91a-0896a20aefe4"><con:settings/><con:config service="accnREST" methodName="createAccession-POST" resourcePath="/${#Project#RESTresource}/createAccession" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-170:Step2:REST Request-ReturnXML-ResponseAndNamespacesExactMatch" id="b1b87564-e041-4b02-bbdf-fea014ebbbb1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request><![CDATA[      <acc:CreateAccessionRequest xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>]]></con:request><con:originalUri>https://www.xifinqa.com//prod/accessionv912/restful/createAccession</con:originalUri><con:assertion type="XPath Match" id="ed39a21d-1e8f-4f60-986b-f9fec647f69e" name="Validate StatusMessage"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accession';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';

    //ns3:Payload[1]/ns3:Status[1]/ns2:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="72ec0c89-42ea-493f-be99-bca2b3ff9422" name="Verify CreateAccessionResponse and namespaces"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accession';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';

    //ns3:CreateAccessionResponse[1]</path><content><![CDATA[<ns3:CreateAccessionResponse xmlns="http://www.xifin.com/schema/msgHeader" xmlns:ns2="http://www.xifin.com/schema/types" xmlns:ns3="http://www.xifin.com/schema/accession">
  <MessageHeader>
    <SequenceNumber>1111</SequenceNumber>
    <UserId>qatester</UserId>
    <OrgAlias>qa07</OrgAlias>
  </MessageHeader>
  <ns3:Payload>
    <ns3:Status>
      <ns2:StatusCode>100</ns2:StatusCode>
      <ns2:StatusMessage>Success</ns2:StatusMessage>
    </ns3:Status>
  </ns3:Payload>
</ns3:CreateAccessionResponse>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="AWS-170-Step3-VerifyAccnCreatedInDB" id="8f15259c-18d9-4b0e-997b-1700e4290808"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-170:Step2:REST Request-ReturnXML-ResponseAndNamespacesExactMatch failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-170:Step2:REST Request-ReturnXML-ResponseAndNamespacesExactMatch XML failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-170:Step2:REST Request-ReturnXML-ResponseAndNamespacesExactMatch failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-170:Step2:REST Request-ReturnXML-ResponseAndNamespacesExactMatch failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-170:Step2:REST Request-ReturnXML-ResponseAndNamespacesExactMatch#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns2"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns2:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-170:Step2:REST Request-ReturnXML-ResponseAndNamespacesExactMatch failed"


</script></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTERXWZVZ20180307215300302</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-03-07</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-03-07</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180307215300302</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEGXDPI</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMENHYSB</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A036526604</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1578566626</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>H47.021</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="61585200-99ae-42ed-8027-8e800b4dc653" name="AccessionREST-updateAccession-POST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="01e12679-d82d-42fa-84ba-72c3ca8b086d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-171:AccessionREST-updateAccession-POST-Send XML Return XML Default" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AWS-171:Step1:createAccession-TestDataSetup" id="0604771c-c345-4082-b9b8-09282ad0017d"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + randomCharacter.getRandomAlphaString(5) + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + randomCharacter.getRandomAlphaString(5) + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-171:Step2:createAccession-REST Request-ReturnXML Default-ResponseAndNamespacesExactMatch" id="190ef0e4-a00e-4bf4-9bd7-7bae1d5523ef"><con:settings/><con:config service="accnREST" methodName="createAccession-POST" resourcePath="/${#Project#RESTresource}/createAccession" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-171:Step2:createAccession-REST Request-ReturnXML Default-ResponseAndNamespacesExactMatch" id="b1b87564-e041-4b02-bbdf-fea014ebbbb1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request><![CDATA[      <acc:CreateAccessionRequest xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>]]></con:request><con:originalUri>https://www.xifinqa.com//prod/accessionv912/restful/createAccession</con:originalUri><con:assertion type="XPath Match" id="ed39a21d-1e8f-4f60-986b-f9fec647f69e" name="Validate CreateAccessionResponse and Namespaces"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accession';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';

    //ns3:CreateAccessionResponse[1]</path><content><![CDATA[<ns3:CreateAccessionResponse xmlns="http://www.xifin.com/schema/msgHeader" xmlns:ns2="http://www.xifin.com/schema/types" xmlns:ns3="http://www.xifin.com/schema/accession">
  <MessageHeader>
    <SequenceNumber>1111</SequenceNumber>
    <UserId>qatester</UserId>
    <OrgAlias>qa07</OrgAlias>
  </MessageHeader>
  <ns3:Payload>
    <ns3:Status>
      <ns2:StatusCode>100</ns2:StatusCode>
      <ns2:StatusMessage>Success</ns2:StatusMessage>
    </ns3:Status>
  </ns3:Payload>
</ns3:CreateAccessionResponse>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="AWS-171:Step3:createAccession-VerifyAccnCreatedInDB" id="1cebd314-d200-4d54-9143-8caa87906880"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-171:Step2:createAccession-REST Request-ReturnXML Default-ResponseAndNamespacesExactMatch failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-171:Step2:createAccession-REST Request-ReturnXML Default-ResponseAndNamespacesExactMatch failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-171:Step2:createAccession-REST Request-ReturnXML Default-ResponseAndNamespacesExactMatch failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-171:Step2:createAccession-REST Request-ReturnXML Default-ResponseAndNamespacesExactMatch failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-171:Step2:createAccession-REST Request-ReturnXML Default-ResponseAndNamespacesExactMatch#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns2"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns2:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-171:Step2:createAccession-REST Request-ReturnXML Default-ResponseAndNamespacesExactMatch failed"


</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-171:Step4:updateAccession-TestDataSetup" id="3468c820-e50e-48b9-921d-39b249d782ee"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
    import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import com.xifin.platform.dao.*;

    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))
    /*
    //===== Create a new accn by calling testCase in Accession WS_CreateAccession testSuite=====
    def testCase = testRunner.testCase.testSuite.project.testSuites["Accession WS-CreateAccession"].testCases["AWS-5:Accession WS-CreateAccession-CreateNewAccession"]
    runner = testCase.run(new com.eviware.soapui.support.types.StringToObjectMap(), false)
    log.info "TestCase: AWS-3:Accession WS-CreateAccession-CreateNewAccession Status: "+ "$runner.status"
    assert runner.status != Status.FAILED: runner.reason
    */
    //===== Get and Set testcase-level property values =====
    //Get and Set ExistingAccnId testcase-level value
    //def accnId = testCase.getPropertyValue("NewAccnID")
    def accnId = context.expand('${#TestCase#NewAccnID}')
    testRunner.testCase.setPropertyValue ("ExistingAccnId", accnId)
    log.info "ExistingAccnId = " + accnId

    //Get and Set DOS testcase-level value
    //def dos = testCase.getPropertyValue("NewDOS")
    def dos = context.expand('${#TestCase#NewDOS}')
    testRunner.testCase.setPropertyValue ("DOS", dos)
    log.info "DOS = " + dos

    //Get and Set UpdatedPtAddr1 testcase-level value
    randomCharacter = new RandomCharacter()
    def updatedPtAddr1 = "UPDATED PT ADDR1" + randomCharacter.getRandomAlphaString(5)
    testRunner.testCase.setPropertyValue ("UpdatedPtAddr1", updatedPtAddr1)
    log.info "UpdatedPtAddr1 = " + updatedPtAddr1

    //Get and Set UpdatedAccnContactInfo testcase-level value
    def updatedAccnContactInfo = "UPDATED ACCN CONTACT INFO" + randomCharacter.getRandomAlphaString(5)
    testRunner.testCase.setPropertyValue ("UpdatedAccnContactInfo", updatedAccnContactInfo)
    log.info "UpdatedAccnContactInfo = " + updatedAccnContactInfo

    //Get and Set UpdatedTestAbbrev testcase-level value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    testRunner.testCase.setPropertyValue ("UpdatedTestAbbrev", testAbbrev)
    log.info "UpdatedTestAbbrev = " + testAbbrev

    //Get and Set UpdatedAuthNumber testcase-level value
    def updatedAuthNum = "UPDATEDAUTHNUM" + randomCharacter.getRandomAlphaString(5)
    testRunner.testCase.setPropertyValue ("UpdatedAuthNumber", updatedAuthNum)
    log.info "UpdatedAuthNumber = " + updatedAuthNum

    //Get and Set UpdatedPayorAbbrev testcase-level value

    def pyrAbbrev = daoManagerPlatform.getThirdPartyPyrFromPYR(dbEnv)
    testRunner.testCase.setPropertyValue ("UpdatedPayorAbbrev", pyrAbbrev)
    log.info "UpdatedPayorAbbrev = " + pyrAbbrev

</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-171:Step5:updateAccession-REST Request-ReturnXML Default" id="5777acb8-cd7b-42c6-b345-fd6cc13ab0da"><con:settings/><con:config service="accnREST" resourcePath="/${#Project#RESTresource}/updateAccession" methodName="updateAccession-POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-171:Step5:updateAccession-REST Request-ReturnXML Default" id="bebf7272-83aa-4475-adcf-28974f243915" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request><![CDATA[      <acc:UpdateAccessionRequest xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>12345</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:UpdateAccession>
               <acc:AccessionId>${#TestCase#ExistingAccnId}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#DOS}</acc:DateOfService>
               <!--Optional:-->
               <!--Zero or more repetitions:-->
               <acc:AccessionContactInfo>
                  <!--Optional:-->
                  <acc:UserId>${#Project#UserId}</acc:UserId>
                  <acc:ContactDate>${#TestCase#DOS}</acc:ContactDate>
                  <!--Optional:-->
                  <acc:ContactInfo>${#TestCase#UpdatedAccnContactInfo}</acc:ContactInfo>
               </acc:AccessionContactInfo>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>+</acc:TransactionType>
                  <acc:TestId>${#TestCase#UpdatedTestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:AuthorizationNumber>${#TestCase#UpdatedAuthNumber}</acc:AuthorizationNumber>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#UpdatedPayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>A123456789</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
            </acc:UpdateAccession>
         </acc:Payload>
      </acc:UpdateAccessionRequest>]]></con:request><con:originalUri>https://www.xifinqa.com//prod/accessionv913/restful/updateAccession</con:originalUri><con:assertion type="XPath Match" id="3761ea3f-04f6-41ed-b9d4-f7100024b01c" name="Validate Response"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accession';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';

    //ns3:Payload[1]/ns3:Status[1]/ns2:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="AWS-171:Step6:updateAccession-VerifyUpdatedAccnInDB" id="87c6ce8f-b27c-4eb8-bc82-d87ecc2c15e1"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def updatedAccnId = context.expand('${#TestCase#ExistingAccnId}')
    log.info "UpdatedAccnId = " + updatedAccnId

    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())

    //======== Verify updated accn contact info by accn id ========
    def updatedAccnContactInfoInDB = daoManagerAccnWS.getContactInfoByAccnId(updatedAccnId, dbEnv)
    log.info ("updatedAccnContactInfoInDB = " + updatedAccnContactInfoInDB)

    //Compare the accn contact info in db and the value in TestCase level property - UpdatedAccnContactInfo
    //Expected Result: updatedAccnContactInfoInDB == #TestCase#UpdatedAccnContactInfo
    assert updatedAccnContactInfoInDB == context.expand('${#TestCase#UpdatedAccnContactInfo}') : "AWS-171:AccessionREST-updateAccession-POST-Return XML Default failed"

    //======== Verify updated test abbrev by accn id and the authorization number ========
    def updatedTestAbbrevInDB = daoManagerAccnWS.getTestAbbrevByAccnIdAndAuthNum(updatedAccnId, context.expand('${#TestCase#UpdatedAuthNumber}'), dbEnv)
    log.info ("updatedTestAbbrevInDB = " + updatedTestAbbrevInDB)

    //Compare the test abbrev in db and the value in TestCase level property - UpdatedTestAbbrev
    //Expected Result: updatedTestAbbrevInDB == #TestCase#UpdatedTestAbbrev
    assert updatedTestAbbrevInDB == context.expand('${#TestCase#UpdatedTestAbbrev}') : "AWS-171:AccessionREST-updateAccession-POST-Return XML Default failed"

    //======== Verify updated payor abbrev by accn id and payor prio ========
    def updatedPayorAbbrevInDB = daoManagerAccnWS.getPayorAbbrevByAccnIdAndPayorPrio(updatedAccnId, 1, dbEnv)
    log.info ("updatedPayorAbbrevInDB = " + updatedPayorAbbrevInDB)

    //Compare the payor abbrev in db and the value in TestCase level property - UpdatedPayorAbbrev
    //Expected Result: updatedPayorAbbrevInDB == #TestCase#UpdatedPayorAbbrev
    assert updatedPayorAbbrevInDB == context.expand('${#TestCase#UpdatedPayorAbbrev}') : "AWS-171:AccessionREST-updateAccession-POST-Return XML Default was failed"
</script></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTERZVPIN20180307215710927</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-03-07</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-03-07</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180307215710927</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEBEYNJ</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEFADWT</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A861611759</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1578566626</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>T43.3X6</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property><con:property><con:name>ExistingAccnId</con:name><con:value>QATESTERZVPIN20180307215710927</con:value></con:property><con:property><con:name>DOS</con:name><con:value>2018-03-07</con:value></con:property><con:property><con:name>UpdatedPtAddr1</con:name><con:value>UPDATED PT ADDR1UOJYV</con:value></con:property><con:property><con:name>UpdatedAccnContactInfo</con:name><con:value>UPDATED ACCN CONTACT INFOZGGBZ</con:value></con:property><con:property><con:name>UpdatedTestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>UpdatedAuthNumber</con:name><con:value>UPDATEDAUTHNUMSGOKE</con:value></con:property><con:property><con:name>UpdatedPayorAbbrev</con:name><con:value>BCBSTNC</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="f1c513ea-17b7-4119-98f7-758956f00a1d" name="AccessionREST-validateAccession-POST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-172:AccessionREST-validateAccession-POST-Send JSON Return JSON" searchProperties="true" id="07227b64-01cd-4dde-af49-1aa2dcdfa152"><con:settings/><con:testStep type="groovy" name="AWS-172:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="cf2bda52-1dd1-4223-8d64-08f4347c3d9d"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    def nowCal = Calendar.instance
    y = nowCal.get(YEAR)-30
    m = nowCal.get(MONTH)
    d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="request" name="AWS-172:Step2:Accession WS-CreateNewAccessionWithIneligibleErr" id="c01acb9a-1f8d-4e55-9899-9638ccb21952"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-172:Step2:Accession WS-CreateNewAccessionWithIneligibleErr" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="6974d778-c995-4d5a-abcd-f90b2c86f35d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:State>CA</typ:State>
                        <!--Optional:-->
                        <typ:ZIP>92127</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
                  <!--Zero or more repetitions:-->
                  <acc:EligibilityInfo>
                     <acc:EligibilityStatus>Ineligible</acc:EligibilityStatus>
                     <acc:EligibilityService>XIFIN</acc:EligibilityService>
                     <acc:EligibilityCheckedDate>${#TestCase#NewDOS}</acc:EligibilityCheckedDate>
                     <!--Optional:-->
                     <acc:EligibilityTransactionId>12345</acc:EligibilityTransactionId>
                  </acc:EligibilityInfo>
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0215e406-bacb-4639-abfa-716ec99aa4e8"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="a8a39122-57c5-4cee-a82e-406d51cdeb33"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-172:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="201577aa-06af-485a-8a9b-5a7e6f54aa8f"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-172:Step2:Accession WS-CreateNewAccessionWithIneligibleErr failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-172:Step2:Accession WS-CreateNewAccessionWithIneligibleErr failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-172:Step2:Accession WS-CreateNewAccessionWithIneligibleErr failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-172:Step2:Accession WS-CreateNewAccessionWithIneligibleErr failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-172:Step2:Accession WS-CreateNewAccessionWithIneligibleErr#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-172:Step2:Accession WS-CreateNewAccessionWithIneligibleErr failed"


</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-172:Step4:validateAccession-REST Request-SendJSON ReturnJSON" id="59c92a6d-f60b-467e-9e7e-77fe8748c526"><con:settings/><con:config service="accnREST" resourcePath="/${#Project#RESTresource}/validateAccession" methodName="validateAccession-POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-172:Step4:validateAccession-REST Request-SendJSON ReturnJSON" id="da4b9844-dad6-47df-b6e7-04cc65b77950" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request>{
    "messageHeader": {
    "sequenceNumber": "1111",
    "userId": "${#Project#UserId}",
    "orgAlias": "${#Project#OrgAlias}"
    },
    "payload": {
    "validateAccession": {
    "accessionId": "${#TestCase#NewAccnID}",
    "ignoreErrors": "false",
    "dateOfService": "${#TestCase#NewDOS}"
    }
    }
    }</con:request><con:originalUri>https://www.xifinqa.com/prod/accessionv913/restful/validateAccession</con:originalUri><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="AWS-172:Step5:validateAccession-VerifyJSONResponse" id="ebfaaa3a-94ce-402d-ab26-3472bc0b747e"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
    import groovy.json.JsonSlurper

    //Get the response
    def response = context.expand('${AWS-172:Step4:validateAccession-REST Request-SendJSON ReturnJSON#Response}').toString()
    //log.info(response)

    //Parse the JSON response
    def slurper = new JsonSlurper()
    def json = slurper.parseText response

    //Verify reasonCode
    def reasonCodeInResponse = json.payload.businessObject.accessionPayorErrors.error.reasonCode
    log.info("reasonCodeInResponse = " + reasonCodeInResponse)
    assert reasonCodeInResponse.toString().contains('INELIGIBLE') : "AWS-172:AccessionREST-validateAccession-POST-Send JSON Return JSON failed"
</script></con:config></con:testStep><con:properties><con:property><con:name>NewAccnID</con:name><con:value>QATESTER20180110163546845</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-01-10</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-01-10</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180110163546845</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEMPIXC</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEZGBPK</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A565047192</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1447222641</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>S61.231</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="20a2494c-94a6-4774-8b39-d06e312ef5a5" name="AccessionREST-accessionSearch-POST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-173:AccessionREST-accessionSearch-POST-Send JSON, Return XML" searchProperties="true" id="2049b8ce-32fb-4aed-9e21-58310181cfdc"><con:settings/><con:testStep type="groovy" name="AWS-173:Step1:GetExistingAccession-TestDataSetup" id="05c61cd5-95f0-44d3-af47-f3d9f2350e04"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //======== Get values =========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get AccnID value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def accnId = daoManagerAccnWS.getExistingAccnId(dbEnv)

    //======== Set TestCase level property values ========
    //Set AccnID1 TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnID", accnId)
    log.info "AccnID=" + accnId

    //Set PtFName TestCase-level value
    def ptFName = daoManagerAccnWS.getFnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("PtFName", ptFName)
    log.info "PtFName = " + ptFName

    //Set PtLName TestCase-level value
    def ptLName = daoManagerAccnWS.getLnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("PtLName", ptLName)
    log.info "PtLName = " + ptLName

    //Set AccnDOS TestCase-level value
    def accnDOS = daoManagerAccnWS.getDOSByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("accnDOS", accnDOS)
    log.info "AccnDOS = " + accnDOS</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-173:Step2:accessionSearch-REST Request-SendJSON ReturnXML" id="188b3211-ef3d-4637-84a8-b614ebbc5e73"><con:settings/><con:config service="accnREST" resourcePath="/${#Project#RESTresource}/accessionSearch" methodName="accessionSearch-POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-173:Step2:accessionSearch-REST Request-SendJSON ReturnXML" id="d2bbcac7-6fd6-4c1b-893b-ccdc78ebb0ed" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request>{
    "messageHeader": {
    "sequenceNumber": "123456",
    "userId": "${#Project#UserId}",
    "orgAlias": "${#Project#OrgAlias}"
    },
    "payload": {
    "accessionSearchRequestMessage": {
    "accessionId": "${#TestCase#AccnID}"
    }
    }
    }</con:request><con:originalUri>https://www.xifinqa.com/prod/accessionv913/restful/accessionSearch</con:originalUri><con:assertion type="XPath Match" id="93efb8c2-f355-4d60-b96c-41d361e623e3" name="Validate Accession Id"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accessionSearch';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';



    //ns3:Payload[1]/ns3:AccessionSearchResponseMessage[1]/ns3:AccessionId[1]/text()</path><content>${#TestCase#AccnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="93efb8c2-f355-4d60-b96c-41d361e623e3" name="Validate Accession DOS"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accessionSearch';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    //ns3:Payload[1]/ns3:AccessionSearchResponseMessage[1]/ns3:Dos[1]/text()</path><content>${#TestCase#accnDOS}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="93efb8c2-f355-4d60-b96c-41d361e623e3" name="Validate Pt FName"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accessionSearch';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    //ns3:Payload[1]/ns3:AccessionSearchResponseMessage[1]/ns3:PatientName[1]/ns2:FirstName[1]/text()</path><content>${#TestCase#PtFName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="93efb8c2-f355-4d60-b96c-41d361e623e3" name="Validate Pt LName"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accessionSearch';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    //ns3:Payload[1]/ns3:AccessionSearchResponseMessage[1]/ns3:PatientName[1]/ns2:LastName[1]/text()</path><content>${#TestCase#PtLName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>AccnID</con:name><con:value>A2013033002030226</con:value></con:property><con:property><con:name>PtFName</con:name><con:value>ALISON</con:value></con:property><con:property><con:name>PtLName</con:name><con:value>SCARBOROUGH</con:value></con:property><con:property><con:name>accnDOS</con:name><con:value>2013-03-30</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-196:AccessionREST-accessionSearch-POST-Namespaces check" searchProperties="true" id="70867b4c-7a64-4c87-82bd-702fb015afa8"><con:settings/><con:testStep type="groovy" name="AWS-196:Step1:GetExistingAccession-TestDataSetup" id="977b0d5e-22db-4dea-83de-27f0c3607092"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //======== Get values =========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get AccnID value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def accnId = daoManagerAccnWS.getExistingAccnId(dbEnv)

    //======== Set TestCase level property values ========
    //Set AccnID1 TestCase-level value
    testRunner.testCase.setPropertyValue ("AccnID", accnId)
    log.info "AccnID=" + accnId

    //Set PtFName TestCase-level value
    def ptFName = daoManagerAccnWS.getFnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("PtFName", ptFName)
    log.info "PtFName = " + ptFName

    //Set PtLName TestCase-level value
    def ptLName = daoManagerAccnWS.getLnameByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("PtLName", ptLName)
    log.info "PtLName = " + ptLName

    //Set AccnDOS TestCase-level value
    def accnDOS = daoManagerAccnWS.getDOSByAccnId(accnId, dbEnv)
    testRunner.testCase.setPropertyValue ("accnDOS", accnDOS)
    log.info "AccnDOS = " + accnDOS</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-196:Step2:accessionSearch-REST Request-Namespaces check" id="ca2f07c8-b2dc-4518-ac43-6b30c835f5d6"><con:settings/><con:config service="accnREST" resourcePath="/${#Project#RESTresource}/accessionSearch" methodName="accessionSearch-POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-196:Step2:accessionSearch-REST Request-Namespaces check" id="d2bbcac7-6fd6-4c1b-893b-ccdc78ebb0ed" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request>{
    "messageHeader": {
    "sequenceNumber": "123456",
    "userId": "${#Project#UserId}",
    "orgAlias": "${#Project#OrgAlias}"
    },
    "payload": {
    "accessionSearchRequestMessage": {
    "accessionId": "${#TestCase#AccnID}"
    }
    }
    }</con:request><con:originalUri>https://www.xifinqa.com/prod/accessionv913/restful/accessionSearch</con:originalUri><con:assertion type="XPath Match" id="93efb8c2-f355-4d60-b96c-41d361e623e3" name="Namespace-default-check"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accessionSearch';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    namespace-uri-for-prefix('', //ns3:AccessionSearchResponse[1])</path><content>http://www.xifin.com/schema/msgHeader</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="93efb8c2-f355-4d60-b96c-41d361e623e3" name="Namespace-ns2-check"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accessionSearch';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    namespace-uri-for-prefix('ns2', //ns3:AccessionSearchResponse[1])</path><content>http://www.xifin.com/schema/types</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="93efb8c2-f355-4d60-b96c-41d361e623e3" name="Namespace-ns3-check"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/accessionSearch';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    namespace-uri-for-prefix('ns3', //ns3:AccessionSearchResponse[1])</path><content>http://www.xifin.com/schema/accessionSearch</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>AccnID</con:name><con:value>QATESTER20160706030140198</con:value></con:property><con:property><con:name>PtFName</con:name><con:value>PTFNAMEHQYZX</con:value></con:property><con:property><con:name>PtLName</con:name><con:value>PTLNAMEQIROC</con:value></con:property><con:property><con:name>accnDOS</con:name><con:value>2016-07-06</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="1d9f0b68-334b-4d5a-91f7-70086b81fdaa" name="AccessionREST-patientPayment-checkPayment-POST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-174:AccessionREST-patientPayment-checkPayment-POST-Send JSOn, return XML Default" searchProperties="true" id="dd41f921-49f2-4fd0-abac-04582b381eff"><con:settings/><con:testStep type="groovy" name="AWS-174:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="ff12f8df-7092-4905-a0f0-75a8a47d0cdc"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="request" name="AWS-174:Step2:Accession WS-CreateNewAccession" id="f4f77245-bf4d-4e4b-b59d-f57d5d3624d3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-174:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="bfb5451a-c660-46b6-8069-ca4fae5064ef"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="56fee6e7-0199-4e8a-a90a-1775e46e021f"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="49397fb0-6bcc-4f68-a926-31e3333f6fb4"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-174:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="56af2b22-d7e7-41a9-8a81-501917fa5570"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-174:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-174:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-174:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-174:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-174:Step2:Accession WS-CreateNewAccession#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-174:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"


</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-174:Step4:patientPayment-checkPayment-TestDataSetup" id="a7fd2cdc-9f6b-40f6-bf5e-b77d4d6e1e2e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
    import com.xifin.utils.*;

    import com.xifin.qa.config.*;
    randomCharacter = new RandomCharacter()

    def checkNumber = randomCharacter.getRandomNumericString(4)
    def receiptId = randomCharacter.getRandomNumericString(10)

    testRunner.testCase.setPropertyValue ("checkNumber", checkNumber)
    testRunner.testCase.setPropertyValue ("receiptId", receiptId)
    //log.info "ExistingAccnId = " + accnId
    //tc2.setPropertyValue ("checkNumber", checkNumber)
    //tc2.setPropertyValue ("receiptId", receiptId)
    log.info "checkNumber = " + checkNumber
    log.info "receiptId = " + receiptId</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-174:Step5:patientPayment-checkPayment-REST Request-Send JSON ReturnXML Default" id="b38dd95f-17bd-4c82-8c23-bb31866a52e6"><con:settings/><con:config service="accnREST" resourcePath="/${#Project#RESTresource}/patientPayment/checkPayment" methodName="patientPayment-checkPayment-POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-174:Step5:patientPayment-checkPayment-REST Request-Send JSON ReturnXML Default" id="efaf0677-fdd8-4a47-b41f-50ba7d825ac6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request>{
    "messageHeader": {
    "sequenceNumber": "123456",
    "userId": "${#Project#UserId}",
    "orgAlias": "${#Project#OrgAlias}"
    },
    "payload": {
    "checkPayment": {
    "accessionId": "${#TestCase#newAccnID}",
    "receiptId": "${#TestCase#receiptId}",
    "checkNumber": "${#TestCase#checkNumber}",
    "paymentAmount": "15.67",
    "comment": "Automated Smoke Test",
    "printOnPatientStatement": "false"
    }
    }
    }</con:request><con:originalUri>https://www.xifinqa.com/prod/accessionv913/restful/patientPayment/checkPayment</con:originalUri><con:assertion type="XPath Match" id="bccb7e6d-d2c0-4e14-bcc3-89800d4a394b" name="Validate AccessionId"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/patientPayment';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    //ns3:Payload[1]/ns3:BusinessObject[1]/ns3:CashOrCheckPaymentResp[1]//ns3:AccessionId[1]/text()</path><content>${#TestCase#newAccnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="491591e8-4340-4571-9bf8-fdd43f6efaaf" name="Validate ReceiptId"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/patientPayment';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    //ns3:Payload[1]/ns3:BusinessObject[1]/ns3:CashOrCheckPaymentResp[1]//ns3:ReceiptId[1]/text()</path><content>${#TestCase#receiptId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="38ead39b-e05a-4ba4-b9bd-e8a5f79ffc79" name="Validate ResponseMessage"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/patientPayment';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    //ns3:Payload[1]/ns3:BusinessObject[1]/ns3:CashOrCheckPaymentResp[1]//ns3:ResponseMessage[1]/text()</path><content>* has been applied to the accession</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="AWS-174:Step6:patient Payment-checkPayment-Verification" id="7c334422-f504-4d4b-ba45-9cafa2233cec"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    //===Get dbEnv Project-level property value===
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //===Get epSummaryListInDB===
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptPmtListInDB = []
    def newAccnId = testRunner.testCase.getPropertyValue ("newAccnID")

    ptPmtListInDB = daoManagerAccnWS.getPtPmtByAccnIdAndPyrIdAndPmtSeqIdAndPmtTyp(newAccnId, '4', '1','2', dbEnv) // PmtTyp = 2 (Check Pmt)
    /*
    //===Debug info===
    log.info "ptPmtListInDB:" + ptPmtListInDB.size
    for (int i=0; i&lt;ptPmtListInDB.size; i++)
    {
    log.info ptPmtListInDB[i]
    }
    */

    //*****************
    //===Create groovyUtils and XmlHolder for response===
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-174:Step5:patientPayment-checkPayment-REST Request-Send JSON ReturnXML Default#Response" )

    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns4"] = "http://www.xifin.com/schema/patientPayment"

    def ptPmtListInResponse = []

    //===Get epSummaryListInResponse===
    //Loop through the nodes in response message and add the nodes values into a List===
    for( item in holder.getNodeValues( "//ns4:ReceiptId" ))
    {
    ptPmtListInResponse.add(item)

    }

    for( item in holder.getNodeValues( "//ns4:PaymentAmount" ))
    {
    ptPmtListInResponse.add(item)

    }
    /*
    //===Debug info===
    log.info "ptPmtListInResponse:" + ptPmtListInResponse.size
    for (int i=0; i&lt;ptPmtListInResponse.size; i++)
    {
    log.info ptPmtListInResponse[i]
    }
    */

    //===Compare the two lists===
    listUtil = new ListUtil()
    def comparePtPmtResult = listUtil.compareLists(ptPmtListInDB, ptPmtListInResponse)
    log.info "comparePtPmtResult = " + comparePtPmtResult
    assert comparePtPmtResult == true: "AWS-174:AccessionREST-patientPayment-checkPayment-POST-Send JSOn, return XML Default failed!"

</script></con:config></con:testStep><con:properties><con:property><con:name>newAccnID</con:name><con:value>QATESTER20180307152300174</con:value></con:property><con:property><con:name>checkNumber</con:name><con:value>3274</con:value></con:property><con:property><con:name>receiptId</con:name><con:value>1160843456</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-03-07</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-03-07</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180307152300174</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMEVDIKA</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEUXRJU</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A508519657</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1548332539</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>Z16.12</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AWS-197:AccessionREST-patientPayment-checkPayment-POST-Namespaces check" searchProperties="true" id="005803c7-0bb5-449e-86c1-9979b4fdb830"><con:settings/><con:testStep type="groovy" name="AWS-197:Step1:Accession WS-CreateNewAccession-TestDataSetup" id="197f45d6-7f52-4178-977f-ea3a02ef268f"><con:settings/><con:config><script>import com.xifin.utils.*;
    import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;
    import static java.util.Calendar.*

    //======== Get values ========
    //Get dbEnv Project-level property value
    def dbEnv = testRunner.testCase.testSuite.project.getPropertyValue ("dbEnv")
    Configuration configuration = ConfigurationLoader.loadConfiguration(testRunner.testCase.testSuite.project.getPropertyValue("orgalias"))

    //Get timeStamp value
    timeStamp = new TimeStamp()
    def currentDateTime = timeStamp.getTimeStamp()

    //Get currentdate value
    def currentDate = timeStamp.getCurrentDate("yyyy-MM-dd")

    //Get ClientId value
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def clientId = daoManagerAccnWS.getClnAbbrev(dbEnv)

    //Get random ptEPI
    def ptEPI = "EPI" + currentDateTime

    //Get random ptFName, ptLName and subsId
    randomCharacter = new RandomCharacter()
    def ptFName = "PTFNAME" + randomCharacter.getRandomAlphaString(5)
    def ptLName = "PTLNAME" + randomCharacter.getRandomAlphaString(5)
    def subsId = "A" + randomCharacter.getRandomNumericString(9)

    //Get Ordering Physician NPI
    def physNPI = daoManagerAccnWS.getPhysicianNPI(dbEnv)
    log.info "getPhysicianNPI"

    //Get Ordered Test Abbrev
    def testAbbrev = daoManagerAccnWS.getTestAbbrev(dbEnv)
    log.info "getTestAbbrev"

    //Get POS
    def pos = daoManagerAccnWS.getMainFacAbbrev(dbEnv)

    //Get Diagnosis Code
    def diagCd = daoManagerAccnWS.getDiagnosisCode(dbEnv)

    //Get Payor Abbrev
    def pyrAbbrev = daoManagerAccnWS.getPayorAbbrev(dbEnv)

    //======== Set TestCase level property values ========
    //Set NewAccnID TestCase-level value
    testRunner.testCase.setPropertyValue ("NewAccnID", "QATESTER" + currentDateTime)
    log.info "NewAccnID = " + "QATESTER" + currentDateTime

    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("NewDOS", currentDate)
    log.info "NewDOS = " + currentDate

    //def newPtDOB = "1975-09-10"
    //generate new pt DOB
    def nowCal = Calendar.instance
    def y  = nowCal.get(YEAR)-30
    def m  = nowCal.get(MONTH)
    def d = nowCal.get(DATE)
    nowCal.set(y,m,d)
    newPtDOB = String.format('%tF', nowCal)
    testRunner.testCase.setPropertyValue ("NewPtDOB", newPtDOB)
    log.info "NewPtDOB = " + newPtDOB

    //Set ClientId TestCase-level value
    testRunner.testCase.setPropertyValue ("ClientId", clientId)
    log.info "ClientId = " + clientId

    //Set EPI TestCase-level value
    testRunner.testCase.setPropertyValue ("NewEPI", ptEPI)
    log.info "NewEPI = " + ptEPI

    //Set NewPtFName and NewPtLName TestCase-level values
    testRunner.testCase.setPropertyValue ("NewPtFName", ptFName)
    log.info "NewPtFName = " + ptFName
    testRunner.testCase.setPropertyValue ("NewPtLName", ptLName)
    log.info "NewPtLName = " + ptLName

    //Set NewSubsId TestCase-level value
    testRunner.testCase.setPropertyValue ("NewSubsId", subsId)
    log.info "NewSubsId = " + subsId

    //Set PhysNPI TestCase-level value
    testRunner.testCase.setPropertyValue ("PhysNPI", physNPI)
    log.info "PhysNPI = " + physNPI

    //Set TestAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("TestAbbrev", testAbbrev)
    log.info "TestAbbrev = " + testAbbrev

    //set POS TestCase-level value
    testRunner.testCase.setPropertyValue ("POS", pos)
    log.info "POS = " + pos

    //set DiagCD TestCase-level value
    testRunner.testCase.setPropertyValue ("DiagCD", diagCd)
    log.info "DiagCD = " + diagCd

    //set PayorAbbrev TestCase-level value
    testRunner.testCase.setPropertyValue ("PayorAbbrev", pyrAbbrev)
    log.info "PayorAbbrev = " + pyrAbbrev

    //disable and delete the pyr field requirements
    //daoManagerAccnWS.disablePyrFldReq(pyrAbbrev, dbEnv)

    //Disable and delete the pyr field requirement
    daoManagerAccnWS.setBDiagReqBSpcCDReqByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsFldByPyrAbrrev(pyrAbbrev, dbEnv)
    daoManagerAccnWS.deletePyrReqmntsByPyrAbrrev(pyrAbbrev, dbEnv)
</script></con:config></con:testStep><con:testStep type="request" name="AWS-197:Step2:Accession WS-CreateNewAccession" id="cb482782-d627-4d46-b188-d8b09592af7f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>accessionSoap11</con:interface><con:operation>CreateAccession</con:operation><con:request name="AWS-197:Step2:Accession WS-CreateNewAccession" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordDigest" id="bfb5451a-c660-46b6-8069-ca4fae5064ef"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:acc="http://www.xifin.com/schema/accession" xmlns:msg="http://www.xifin.com/schema/msgHeader" xmlns:typ="http://www.xifin.com/schema/types">
   <soapenv:Header/>
   <soapenv:Body>
      <acc:CreateAccessionRequest>
         <msg:MessageHeader>
            <!--Optional:-->
            <msg:SequenceNumber>1111</msg:SequenceNumber>
            <msg:UserId>${#Project#UserId}</msg:UserId>
            <!--Optional:-->
            <msg:OrgAlias>${#Project#OrgAlias}</msg:OrgAlias>
         </msg:MessageHeader>
         <acc:Payload>
            <acc:CreateAccession>
               <acc:AccessionId>${#TestCase#NewAccnID}</acc:AccessionId>
               <acc:IgnoreErrors>true</acc:IgnoreErrors>
               <acc:DateOfService>${#TestCase#NewDOS}</acc:DateOfService>
               <!--Optional:-->
               <acc:ClientId>${#TestCase#ClientId}</acc:ClientId>
               <!--Optional:-->
               <acc:PatientInfo>
                  <!--<acc:PatientId>${#TestCase#NewEPI}</acc:PatientId>:-->
                  <!--Optional:-->
                  <acc:Person>
                     <typ:Name>
                        <!--Optional:-->
                        <typ:FirstName>${#TestCase#NewPtFName}</typ:FirstName>
                        <!--Optional:-->
                        <typ:LastName>${#TestCase#NewPtLName}</typ:LastName>
                        <!--Optional:-->
                        <typ:MiddleName>M</typ:MiddleName>
                     </typ:Name>
                     <!--Optional:-->
                     <typ:DateOfBirth>${#TestCase#NewPtDOB}</typ:DateOfBirth>
                     <!--Optional:-->
                     <typ:Gender>MALE</typ:Gender>
                     <!--Optional:-->
                     <typ:Address>
                        <!--Optional:-->
                        <typ:AddressLine1>PTADDR1${#TestCase#NewAccnID}</typ:AddressLine1>
                        <!--Optional:-->
                        <typ:AddressLine2>PTADDR2${#TestCase#NewAccnID}</typ:AddressLine2>
                        <!--Optional:-->
                        <typ:ZIP>32542</typ:ZIP>
                     </typ:Address>
                  </acc:Person>
               </acc:PatientInfo>
               <!--Optional:-->
               <acc:FinalReportedDate>${#TestCase#NewDOS}</acc:FinalReportedDate>
               <!--Optional:-->
               <acc:Physicians>
                  <!--Optional:-->
                  <acc:Ordering>
                     <!--Optional:-->
                     <acc:NPI>${#TestCase#PhysNPI}</acc:NPI>
                  </acc:Ordering>
               </acc:Physicians>
               <!--Zero or more repetitions:-->
               <acc:OrderedTests>
                  <acc:TestSequenceNumber>1</acc:TestSequenceNumber>
                  <acc:TransactionType>D</acc:TransactionType>
                  <acc:TestId>${#TestCase#TestAbbrev}</acc:TestId>
                  <!--Optional:-->
                  <acc:PlaceOfService>${#TestCase#POS}</acc:PlaceOfService>
                  <!--Optional:-->
                  <acc:FinalReportDate>${#TestCase#NewDOS}</acc:FinalReportDate>
                  <!--Optional:-->
                  <acc:Units>1</acc:Units>
               </acc:OrderedTests>
               <!--Zero or more repetitions:-->
               <acc:AccessionLevelDiagnosisCodes>
                  <!--Optional:-->
                  <acc:DiagnosisCode>${#TestCase#DiagCD}</acc:DiagnosisCode>
               </acc:AccessionLevelDiagnosisCodes>
               <!--Optional:-->
               <acc:PscLocationId>${#TestCase#POS}</acc:PscLocationId>
               <!--Zero or more repetitions:-->
               <acc:InsuranceInfo>
                  <acc:PayorPriority>1</acc:PayorPriority>
                  <acc:PayorId>${#TestCase#PayorAbbrev}</acc:PayorId>
                  <!--Optional:-->
                  <acc:SubscriberId>${#TestCase#NewSubsId}</acc:SubscriberId>
                  <!--Optional:-->
                  <acc:InsuredRelationship>18</acc:InsuredRelationship>
                  <!--Optional:-->
               </acc:InsuranceInfo>
               <!--Optional:-->
               <acc:CheckClientBillingRules>false</acc:CheckClientBillingRules>
            </acc:CreateAccession>
         </acc:Payload>
      </acc:CreateAccessionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="56fee6e7-0199-4e8a-a90a-1775e46e021f"/><con:assertion type="XPath Match" name="ValidateCreateNewAccnStatus" id="49397fb0-6bcc-4f68-a926-31e3333f6fb4"><con:configuration><path>declare namespace ns4='http://www.xifin.com/schema/accession';
    declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
    declare namespace ns3='http://www.xifin.com/schema/types';
    declare namespace ns2='http://www.xifin.com/schema/msgHeader';


    //ns4:Payload[1]/ns4:Status[1]/ns3:StatusMessage[1]/text()</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.xifin.com/schema/accession/accession/CreateAccessionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="AWS-197:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB" id="7e4ecd6d-7192-4153-9403-9084d4c5d1d9"><con:settings/><con:config><script>import com.xifin.accnws.dao.*;
    import com.xifin.qa.config.*;

    def dbEnv = context.expand('${#Project#dbEnv}')
    log.info dbEnv

    def newAccnId = context.expand('${#TestCase#NewAccnID}')
    log.info newAccnId

    //======== Verify pt's fName by accn id ========
    //Get the Pt's fName in db by referencing TestCase level properlty - NewAccnID
    Configuration configuration = ConfigurationLoader.loadConfiguration(orgAlias);
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptFNameInDB = daoManagerAccnWS.getFnameByAccnId(newAccnId, dbEnv)
    log.info ("ptFNameInDB = " + ptFNameInDB)
    //Get Pt's fName from TestCase level property - NewPtFName
    def newPtFName = context.expand('${#TestCase#NewPtFName}')

    //Compare the Pt's fName in db and the value in TestCase level property - NewPtFName
    //Expected Result: ptFNameInDB == #TestCase#NewPtFName
    assert ptFNameInDB == newPtFName : "AWS-197:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's lName by accn id ========
    //Get the Pt's lName in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptLNameInDB = daoManagerAccnWS.getLnameByAccnId(newAccnId, dbEnv)
    log.info ("ptLNameInDB = " + ptLNameInDB)
    //Get Pt's lName from TestCase level property - NewPtLName
    def newPtLName = context.expand('${#TestCase#NewPtLName}')

    //Compare the Pt's lName in db and the value in TestCase level property - NewPtLName
    //Expected Result: ptLNameInDB == #TestCase#NewPtLName
    assert ptLNameInDB == newPtLName : "AWS-197:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //======== Verify pt's DOB and accn's DOS by accn id ========
    //Get the Pt's DOB in db by referencing TestCase level properlty - NewAccnID
    daoManagerAccnWS = new DaoManagerAccnWS(configuration.getRpmDatabase())
    def ptDOBInDB = daoManagerAccnWS.getDobByAccnId(newAccnId, dbEnv)
    log.info ("ptDOBInDB = " + ptDOBInDB)
    //Get Pt's DOB from TestCase level property - NewPtDOB
    def ptDOB = context.expand('${#TestCase#NewPtDOB}')
    //Get accn's DOS in db by referencing TestCase level properlty - NewAccnID
    def dosInDB = daoManagerAccnWS.getDOSByAccnId(newAccnId, dbEnv)
    log.info ("dosInDB = " + dosInDB)
    //Get accn's DOS from TestCase level property - NewDOS
    def dos = context.expand('${#TestCase#NewDOS}')

    //Compare the Pt's DOB in db and the value in TestCase level property - NewDOS
    //Expected Result: ptDOBInDB == #TestCase#NewDOS
    assert ptDOBInDB == ptDOB : "AWS-197:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //Compare accn's DOS in db and the value in TestCase level property - NewDOS
    //Expected Result: dosInDB == #TestCase#NewDOS
    assert dosInDB == dos : "AWS-197:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"

    //*****************
    //Set StatusMessage value
    //Create groovyUtils and XmlHolder for response
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
    def holder = groovyUtils.getXmlHolder( "AWS-197:Step2:Accession WS-CreateNewAccession#Response" )


    //If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.
    holder.namespaces["ns3"] = "http://www.xifin.com/schema/types"

    def  StatusMessage = holder.getNodeValue( "//ns3:StatusMessage[1]/text()" )
    //Set DOS TestCase-level value
    testRunner.testCase.setPropertyValue ("StatusMessage", StatusMessage)
    log.info "StatusMessage = " + StatusMessage
    assert StatusMessage == "Success" : "AWS-197:Step3:Accession WS-CreateAccession-VerifyNewlyCreatedAccnInDB failed"


</script></con:config></con:testStep><con:testStep type="groovy" name="AWS-197:Step4:patientPayment-checkPayment-TestDataSetup" id="089948ff-73d1-4f30-9176-1079b5c94e94"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
    import com.xifin.utils.*;

    import com.xifin.qa.config.*;
    randomCharacter = new RandomCharacter()

    def checkNumber = randomCharacter.getRandomNumericString(4)
    def receiptId = randomCharacter.getRandomNumericString(10)

    testRunner.testCase.setPropertyValue ("checkNumber", checkNumber)
    testRunner.testCase.setPropertyValue ("receiptId", receiptId)
    //log.info "ExistingAccnId = " + accnId
    //tc2.setPropertyValue ("checkNumber", checkNumber)
    //tc2.setPropertyValue ("receiptId", receiptId)
    log.info "checkNumber = " + checkNumber
    log.info "receiptId = " + receiptId</script></con:config></con:testStep><con:testStep type="restrequest" name="AWS-197:Step5:patientPayment-checkPayment-REST Request-Namespaces check" id="f2594a30-b376-4ef0-a33c-282434bd0520"><con:settings/><con:config service="accnREST" resourcePath="/${#Project#RESTresource}/patientPayment/checkPayment" methodName="patientPayment-checkPayment-POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AWS-197:Step5:patientPayment-checkPayment-REST Request-Namespaces check" id="efaf0677-fdd8-4a47-b41f-50ba7d825ac6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#RESTendpoint}</con:endpoint><con:request>{
    "messageHeader": {
    "sequenceNumber": "123456",
    "userId": "${#Project#UserId}",
    "orgAlias": "${#Project#OrgAlias}"
    },
    "payload": {
    "checkPayment": {
    "accessionId": "${#TestCase#newAccnID}",
    "receiptId": "${#TestCase#receiptId}",
    "checkNumber": "${#TestCase#checkNumber}",
    "paymentAmount": "15.67",
    "comment": "Automated Smoke Test",
    "printOnPatientStatement": "false"
    }
    }
    }</con:request><con:originalUri>https://www.xifinqa.com/prod/accessionv913/restful/patientPayment/checkPayment</con:originalUri><con:assertion type="XPath Match" id="38ead39b-e05a-4ba4-b9bd-e8a5f79ffc79" name="Namespace-default-check"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/patientPayment';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    namespace-uri-for-prefix('', //ns3:CheckPaymentResponse[1])</path><content>http://www.xifin.com/schema/msgHeader</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="38ead39b-e05a-4ba4-b9bd-e8a5f79ffc79" name="Namespace-ns2-check"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/patientPayment';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    namespace-uri-for-prefix('ns2', //ns3:CheckPaymentResponse[1])</path><content>http://www.xifin.com/schema/types</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="38ead39b-e05a-4ba4-b9bd-e8a5f79ffc79" name="Namespace-ns3-check"><con:configuration><path>declare namespace ns3='http://www.xifin.com/schema/patientPayment';
    declare namespace ns2='http://www.xifin.com/schema/types';
    declare namespace ns1='http://www.xifin.com/schema/msgHeader';


    namespace-uri-for-prefix('ns3', //ns3:CheckPaymentResponse[1])</path><content>http://www.xifin.com/schema/patientPayment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>${#Project#Username}</con:username><con:password>${#Project#Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
    <con:entry key="userId" value="${#Project#UserId}"/>
    <con:entry key="orgalias" value="${#Project#OrgAlias}"/>
</con:parameters><con:parameterOrder><con:entry>orgalias</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>newAccnID</con:name><con:value>QATESTER20180307215820542</con:value></con:property><con:property><con:name>checkNumber</con:name><con:value>8767</con:value></con:property><con:property><con:name>receiptId</con:name><con:value>9033741283</con:value></con:property><con:property><con:name>NewDOS</con:name><con:value>2018-03-07</con:value></con:property><con:property><con:name>NewPtDOB</con:name><con:value>1988-03-07</con:value></con:property><con:property><con:name>ClientId</con:name><con:value>100</con:value></con:property><con:property><con:name>NewEPI</con:name><con:value>EPI20180307215820542</con:value></con:property><con:property><con:name>NewPtFName</con:name><con:value>PTFNAMETONID</con:value></con:property><con:property><con:name>NewPtLName</con:name><con:value>PTLNAMEHCHMG</con:value></con:property><con:property><con:name>NewSubsId</con:name><con:value>A601135410</con:value></con:property><con:property><con:name>PhysNPI</con:name><con:value>1396711644</con:value></con:property><con:property><con:name>TestAbbrev</con:name><con:value>GLUCOSE</con:value></con:property><con:property><con:name>POS</con:name><con:value>ACME</con:value></con:property><con:property><con:name>DiagCD</con:name><con:value>M45.8</con:value></con:property><con:property><con:name>PayorAbbrev</con:name><con:value>P</con:value></con:property><con:property><con:name>StatusMessage</con:name><con:value>Success</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>OrgAlias</con:name><con:value>qa07</con:value></con:property><con:property><con:name>UserId</con:name><con:value>qatester</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://www.xifinqa.com/prod/accessionv102005-openjdk/services</con:value></con:property><con:property><con:name>dbEnv</con:name><con:value>QA_ACME_PROD</con:value></con:property><con:property><con:name>Username</con:name><con:value>clndoc</con:value></con:property><con:property><con:name>Password</con:name><con:value>clndoc</con:value></con:property><con:property><con:name>Env</con:name><con:value>QA07</con:value></con:property><con:property><con:name>eType1</con:name><con:value>OePostingEngine</con:value></con:property><con:property><con:name>xapEnv</con:name><con:value>XAP</con:value></con:property><con:property><con:name>engConfigDB</con:name><con:value>SSO_APP_STAGING</con:value></con:property><con:property><con:name>hasLoggedIn</con:name><con:value>false</con:value></con:property><con:property><con:name>xpEnv</con:name><con:value>XP</con:value></con:property><con:property><con:name>xpVersion</con:name><con:value>xifinportalv9100</con:value></con:property><con:property><con:name>RESTendpoint</con:name><con:value>https://www.xifinqa.com</con:value></con:property><con:property><con:name>RESTresource</con:name><con:value>prod/accessionv102005-openjdk/restful</con:value></con:property><con:property><con:name>eType2</con:name><con:value>PricingEngine</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>